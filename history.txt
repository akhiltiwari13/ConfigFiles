    1  vim ~/.zshrc
    2  git clone https://github.com/kahiltiwari13/ConfigFiles/git
    3  git clone https://github.com/akhiltiwari13/ConfigFiles/git
    4  git clone https://github.com/akhiltiwari13/ConfigFiles.gi
    5  git clone https://github.com/akhiltiwari13/ConfigFiles.git
    6  ln -sf /home/akhil/files/projects/ConfigFiles/setup.sh ~/setup.sh
    7  ln -sf /home/akhil/files/projects/ConfigFiles/lazyvim/ ~/.config/nvim
    8  ll borrowed
    9  ls -lart borrowed
   10  ls -lart borrowed/.tmux
   11  ln -sf /home/akhil/files/projects/ConfigFiles/borrowed/.tmux/.tmux.conf.local ~/.tmux.conf.local
   12  ln -sf /home/akhil/files/projects/ConfigFiles/borrowed/.tmux/.tmux.conf ~/.tmux.conf
   13  pacman -S --needed tmux jdk-openjdk openssh firefox thunderbird docker-compose powerline-fonts noto-fonts-emoji ttf-nerd-fonts-symbols
   14  sudo pacman -S --needed tmux jdk-openjdk openssh firefox thunderbird docker-compose powerline-fonts noto-fonts-emoji ttf-nerd-fonts-symbols
   15  systemctl enable docker
   16  usermod -aG docker $USER
   17  yay
   18  git clone -f  https://github.com/addy-dclxvi/i3-starterpack.git ~/.config/i3
   19  rm -rf ~/.config/i3
   20  git clone  https://github.com/addy-dclxvi/i3-starterpack.git ~/.config/i3
   21  pacman -S i3lock
   22  sudo pacman -S i3lock
   23  echo "exec --no-startup-id xss-lock -- i3lock -c 000000" >> ~/.config/i3/confg
   24  pacman -S thunar calibre vlc network-manager-applet blueman pavucontrol
   25  sudo pacman -S thunar calibre vlc network-manager-applet blueman pavucontrol
   26  omz plugin enable
   27  omz plugin enable zsh-syntax-highlighting
   28  omz plugin 
   29  omz plugin load zsh-*
   30  omz plugin load zsh-syntax-highlighting
   31  omz plugin list
   32  rm -rf i3
   33  pacman -S hostname
   34  sudo pacman -S hostname
   35  hostname
   36  _hostname
   37  nvim setup.sh
   38  git clone https://github.com/addy-dclxvi/i3-starterpack.git
   39  ln -sf /home/akhil/files/projects/ConfigFiles/i3-starterpack/.config/cmus ~/.config/cmus
   40  ln -sf /home/akhil/files/projects/ConfigFiles/i3-starterpack/.config/dunst ~/.config/dunst
   41  ln -sf /home/akhil/files/projects/ConfigFiles/i3-starterpack/.config/fish ~/.config/fish
   42  ln -sf /home/akhil/files/projects/ConfigFiles/i3-starterpack/.config/GIMP ~/.config/GIMP
   43  ln -sf /home/akhil/files/projects/ConfigFiles/i3-starterpack/.config/i3 ~/.config/i3
   44  ln -sf /home/akhil/files/projects/ConfigFiles/i3-starterpack/.config/i3status ~/.config/i3status
   45  ln -sf /home/akhil/files/projects/ConfigFiles/i3-starterpack/.config/ranger ~/.config/ranger
   46  sudo pacman -S i3-gaps
   47  python -m pip install --user virtualenv
   48  rustup default stable 
   49  rustup component add rust-analyzer
   50  sudo pacman -S --noconfirm xorg-xrandr arandr xclip dunst
   51  sudo pacman -S --noconfirm openssh 
   52  sudo systemctl enable sshd
   53  sudo systemctl start sshd
   54  sudo pacman -S --noconfirm ufw
   55  sudo ufw defalut allow outgoing
   56  sudo ufw defalut allow incoming
   57  app defalut ARG
   58  ufw app list
   59  ufw default incoming
   60  ufw default 
   61  ufw default ARG
   62  newgrp docker
   63  sudo usermod -aG docker $USER
   64  sudo pacman -S --noconfirm polybar lxappearance ttf-nerd-fonts-symbols ttf-jetbrains-mono ttf-font-awesome
   65  git clone https://github.com/polybar/polybar-scripts.gi ~/.config/polybar
   66  git clone https://github.com/polybar/polybar-scripts.git ~/.config/polybar
   67  cd ~/.config
   68  ll polybar-scripts
   69  ll polybar
   70  cd polybar/skeleton
   71  git clone https://github.com/jonaburg/picom.git 
   72  cp picom.sample.conf ~/.config/picom.conf
   73  cd i3-starterpack
   74  rm -rf .git
   75  sudo pacman -S noconfirm openvpn
   76  sudo pacman -S --noconfirm openvpn
   77  nvim .config/
   78  nvim /etc/hostname
   79  sudo pacman -S yay
   80  sudo pacman -S dmenu feh rofi compton polybar
   81  cp /usr/share/doc/polybar/examples/config.ini ~/.config/polybar/
   82  nvim ~/.xinitrc
   83  wal
   84  nvim i3
   85  nvim .config/i3
   86  git clone https://aur.archlinux.org/yay.git
   87  makepkg -si
   88  yay -S neofetch
   89  yay -S pywal rofi betterlockscreen flameshot playerctl nerd-fonts
   90  pacman -S --noconfirm thunderbird
   91  sudo pacman -S --noconfirm thunderbird
   92  sudo pacman -S --noconfirm rofi rofi-calc rofi-emoji
   93  cvd
   94  git clone https://github.com/polybar/polybar-scripts.git .
   95  git clone https://github.com/polybar/polybar-scripts.git 
   96  cp -f polybar-scripts ~/.config/polybar
   97  cp -rf polybar-scripts ~/.config/polybar
   98  cd ~/.config/polybar
   99  mv * ..
  100  rm -rf polybar-scripts
  101  history | grep polybar
  102  chmod +x $HOME/.config/polybar/launch.sh
  103  pacman -R demenue
  104  sudo pacman -R demenu
  105  ps -ef | grep dmenu
  106  yay -S rofi-git
  107  sudo pacman -S feh lxappearance papirus-icon-theme
  108  pacman -S
  109  sudo pacman -S
  110  sudo pacman -S -h
  111  yay -S rofi
  112  # Install dependencies\nyay -S \\n    papirus-icon-theme \\n    ttf-firacode-nerd \\n    rofi \\n    rofi-calc \\n    rofi-emoji\n\n# Refresh font cache\nfc-cache -fv
  113  # GTK Themes\nsudo pacman -S arc-gtk-theme materia-gtk-theme\n\n# Icon Themes\nsudo pacman -S papirus-icon-theme papirus-folders\n\n# Cursor Theme\nsudo pacman -S breeze-cursor-theme\n\n# Fonts\nsudo pacman -S ttf-fira-code ttf-ubuntu-font-family
  114  # Create solid black wallpaper\nconvert -size 3840x2160 xc:black ~/.black_wallpaper.png\n\n# Set as wallpaper (using feh)\nfeh --bg-fill ~/.black_wallpaper.png\n\n# Add to i3 config\necho "exec --no-startup-id feh --bg-fill ~/.black_wallpaper.png" >> ~/.config/i3/config
  115  # Install QT theme engine\nsudo pacman -S qt5ct kvantum\n\n# Configure QT5 Settings\necho 'export QT_QPA_PLATFORMTHEME="qt5ct"' >> ~/.xprofile
  116  # Install betterlockscreen\nyay -S betterlockscreen\n\n# Configure black lock screen\nbetterlockscreen -u ~/.black_wallpaper.png
  117  # Configure black lock screen\nbetterlockscreen -u ~/.black_wallpaper.png
  118  # GTK2/GTK3\necho 'gtk-application-prefer-dark-theme=1' >> ~/.config/gtk-3.0/settings.ini\n\n# GTK4\nmkdir -p ~/.config/gtk-4.0\necho '[Settings] gtk-application-prefer-dark-theme=1' > ~/.config/gtk-4.0/settings.ini
  119  # Create font config\necho '<?xml version="1.0"?>\n<!DOCTYPE fontconfig SYSTEM "fonts.dtd">\n<fontconfig>\n  <match target="font">\n    <edit name="antialias" mode="assign"><bool>true</bool></edit>\n    <edit name="hinting" mode="assign"><bool>true</bool></edit>\n    <edit name="hintstyle" mode="assign"><const>hintslight</const></edit>\n    <edit name="rgba" mode="assign"><const>rgb</const></edit>\n  </match>\n</fontconfig>' > ~/.config/fontconfig/fonts.conf\n\n# Refresh cache\nfc-cache -fv
  120  # Dark Grub Theme\nyay -S grub2-theme-vimix\n\n# Dark Login Manager (for SDDM)\nsudo pacman -S sddm-theme-sugar-dark\nsudo systemctl enable sddm
  121  # Dark Grub Theme\nyay -S grub2-theme-vimix\n\n# Dark Login Manager (for SDDM)\nsudo pacman -S sddm-theme-sugar-dark\n
  122  yay -S gradience
  123  sudo pacman -S alacritty  # or kitty/wezterm\necho "set \$term alacritty" >> ~/.config/i3/config\nbindsym $super+Return exec $term
  124  sudo pacman -S alacritty  # or kitty/wezterm\ncat  ~/.config/i3/config
  125  yay -S nerd-fonts-jetbrains-mono
  126  pacman -S ttf-nerd-fonts-symbols-common
  127  sudo pacman -S ttf-nerd-fonts-symbols-common
  128  sudo pacman -S ttf-nerd-fonts-symbols-mono
  129  fc-match "JetBrains Mono Nerd Font"
  130  yay -S flameshot
  131  lxappearance
  132  i3-dump-log
  133  i3-dump-log | grep rofi
  134  cat rofi/config.rasi rofi/launcher.rasi ~/Downloads/rofi.txt
  135  cat rofi/config.rasi rofi/launcher.rasi >> ~/Downloads/rofi.txt
  136  rofi -show drun --config ~/.config/rofi/launcher.rasi -dump-xresources
  137  history | grep i3wm
  138  sudo pacman -S numix-circle-icon-theme
  139  yay -S numix-circle-icon-theme
  140  cd polybar-scripts
  141  $ git clone --depth=1 https://github.com/adi1090x/polybar-themes.git
  142  git clone --depth=1 https://github.com/adi1090x/polybar-themes.git
  143  cd polybar-themes
  144  chmod u+x setup.sh
  145  ./setup.sh
  146  ls /usr/share/rofi/themes
  147  which polybar
  148  pacman -S --noconfirm polybar
  149  sudo pacman -S --noconfirm polybar
  150  cd .config/polybar
  151  ./launch.sh
  152  ./launch.sh --material
  153  nitrogen
  154  i3-msg restart
  155  nvim polybar
  156  alias ll
  157  ls -larth
  158  omz theme set mlh
  159  omz theme set robbyrussell
  160  omz theme use robbyrussell
  161  ln -sf /home/akhil/files/projects/ConfigFiles/alacritty.yml ~/
  162  rm -rf alacritty.yml
  163  mkdir alacritty
  164  mv alacritty.yml alacritty
  165  ln -sf /home/akhil/files/projects/ConfigFiles/alacritty ~/.config
  166  alacritty migrate
  167  exllCls
  168  firefox
  169  pacman -S obsidian vscode
  170  sudo pacman -S obsidian vscode
  171  wpctl 
  172  hostname -I 
  173  mkdir plat_alternate_work
  174  mkdir notes
  175  git clone https://github.com/akhiltiwari13/notes.git notes
  176  sudo pacman o-S neofetch espeak
  177  sudo pacman -S neofetch espeak
  178  sudo nvim /etc/lightdm/ligthdm-gtk-greeter.conf
  179  convert -size 100*100 xc:black ~/black.png
  180  convert -size 100x100 xc:black ~/black.png
  181  magick convert -size 100x100 xc:black ~/black.png
  182  mkdir images
  183  mv -f .black_wallpaper.png black.png ~/files/images
  184  cd files/images
  185  ln -sf /home/akhil/files/images/.black_wallpaper.png ~/
  186  sudo pacman -S xfce4-power-manager
  187  pacman -S install gvfs
  188  sudo pacman -S install gvfs
  189  sudo pacman -S gvfs
  190  sudo pacman -S acpid
  191  sudo systemctl enable acpid
  192  sudo systemctl start acpid
  193  sudo pacman -S polybar
  194  sudo pacman -S alsa-utils networkmanager
  195  polybar mybar
  196  cp -f /etc/polybar/config.ini polybar/config.ini_bkp
  197  pacman -S slack
  198  sudo pacman -S slack
  199  sudo pacman -h
  200  sudo pacman -Q vim
  201  sudo pacman -Q vscode
  202  sudo pacman -Q msvsc
  203  sudo pacman -Q slack
  204  yay -Q slack
  205  polybar & disown
  206  sudo pacman -S accountsservice
  207  sudo systemctl enable accounts-daemon
  208  sudo systemctl start accounts-daemon
  209  ln -sf /home/akhil/files/images/black.png /var/lib/AccountsService/icons/
  210  sudo ln -sf /home/akhil/files/images/black.png /var/lib/AccountsService/icons/
  211  sudo chown lightdm:lightdm /var/lib/AccountsService/icons/your-username
  212  cd /var/lib/AccountsService/icons
  213  rm -rf black.png
  214  sudo !
  215  sudo rm -rf black.png
  216  sudo ln -sf /home/akhil/files/images/black.png /var/lib/AccountsService/icons/akhil
  217  sudo  echo "Icon=/var/lib/AccountsService/icons/akhil" >> /var/lib/AccountsService/users/akhil
  218  vim /var/lib/AccountsService/users/akhil
  219  sudo vim /var/lib/AccountsService/users/akhil
  220  sudo systemctl restart lightdm.service
  221  pacman -S numix
  222  pacman -Q numix
  223  yay -Q numix
  224  sudo pacman -S numix
  225  sudo pacman -Q Numix
  226  sudo pacman -Q Numix-Circle
  227  git clone http://132.1.16.184:8080/source/platform.git platform
  228  pacman -S zip
  229  pacman -Q zip
  230  pacman -Q unzip
  231  sudo pacman -S zip unzip 
  232  unzip booksndocs-20250128T064225Z-001.zip 
  233  unzip calibre_library-20250128T064221Z-001.zip
  234  unzip learn-20250128T064217Z-001.zip
  235  unzip codectx_out-20250128T064214Z-001.zip
  236  unzip prodlogs-20250128T064209Z-001.zip
  237  rm -rf prodlogs-20250128T064209Z-001.zip codectx_out-20250128T064214Z-001.zip 
  238  rm -rf booksndocs calibre_library-20250128T064221Z-001.zip learn-20250128T064217Z-001.zip
  239  rm -rf ovpn_cfg-20250128T064208Z-001.zip
  240  cd ovpn_cfg
  241  plat_alternate_work
  242  history | grep platform
  243  git clone http://132.1.16.184:8080/source/platform.git 
  244  polybar &
  245  polybar main
  246  pkill 1495 6869
  247  pkill 9 polybar
  248  ps -ef | grep bar
  249  chmod u+x polybar/launch.sh
  250  cd polybar
  251  ~/.config/polybar/launch.sh
  252  i3-msg reload
  253  ll /var/lib/AccountsService/icons
  254  sudo chown  lightdm:lightdm /var/lib/AccountsService/icons/akhil
  255  sudo pacman -S xrandr
  256  sudo pacman -S xorg-xrandr
  257  pacman -Q xorg
  258  pacman -Q xrandr
  259  pacman -Q xrand
  260  pacman -Q -hy
  261  pacman -Qs xorg
  262  pacman -Qs code
  263  pacman -Qs xrandr
  264  polybar-msg cmd restart
  265  ag -i ranger
  266  ag ranger
  267  rg -i ranger
  268  top
  269  pacman -S htop
  270  sudo pacman -S htop
  271  nvim alacritty/alacritty.toml
  272  nvim .config/i3/config
  273  sudo pacman -S xclip
  274  ssh-keygen -t ed25519 -C "akhil_blr@algoquantfin.com"
  275  eval "$(ssh-agent -s)"
  276  ssh-add ~/.ssh/id_ed25519
  277  xclip -selection clipboard < ~/.ssh/id_ed25519.pub
  278  git clone git@github.com:akhiltiwari13/notes.git
  279  cd notes
  280  git clone git@github.com:akhiltiwari13/Elaeocarpus.git
  281  rmdir build
  282  ssh -T git@github.com
  283  yay -S slack-desktop
  284  sudo yay -S anydesk-bin
  285  sudo systemctl enable --now anydesk
  286  sudo pacman -S thunderbird
  287  yay -S postman-bin
  288  clearexit
  289  sudo pacman -S weechat
  290  sudo pacman -S python-pip
  291  pip isntall weechat-slack
  292  pip install weechat-slack
  293  pacman -S python-weechat-slack
  294  sudo pacman -S python-weechat-slack
  295  sudo pacman -S weechat-slack
  296  pacman -Qs weechat
  297  sudo pip install weechat-slack
  298  weechat
  299  dinner -n
  300  thefuck
  301  clear 
  302  chmod u+x set_git_config.sh
  303  ./set_git_config.sh
  304  git config --global --list
  305  rm -rf polybar-scripts polybar-themes 
  306  cd picom
  307  rm -rf picom
  308  polybar
  309  ps -ef | grep polybar
  310  pkill polybar
  311  fc-cache -fv
  312  jq
  313  pacman -S jq
  314  sudo pacman -S jq
  315  jq -s 'add' platform/compile_commands.json pqr/compile_commands.json > compile_commands.json
  316  alias | grep dev
  317  132
  318  nvim .config
  319  clea
  320  docker run -v $(pwd) platform-build
  321  docker run -v $(pwd) platform-build:latest
  322  docker run -v $(pwd):ls platform-build
  323  docker run -v $(pwd):ls platform
  324  docker run -v $(pwd):/app platform-build
  325  docker run -v $(pwd):/platform platform-build
  326  apwd
  327  git sttus
  328  alias | grep .ssh | grep prod
  329  mcxp14
  330  rm -rf Release
  331  sudo rm -rf Release
  332  scp akhil@132.1.16.132:/home/akhil/files/projects/plat_alternate_work/platform/docker_run.log .
  333  nvim docker_run.log
  334  rsyncplatalt
  335  exit
  336  clear
  337  git status
  338  glog | grep platform.md
  339  git status
  340  clear
  341  glog | grep platform.md
  342  git checkout e46a022 
  343  git status
  344  git switch -
  345  gst
  346  git stash
  347  git switch -
  348  git status
  349  git checkout main 
  350  git statsh && git checkout main
  351  git stash && git checkout main
  352  git tatus
  353  git status
  354  git restore .obsidian/ projects/ zettelkasten/platform.md
  355  gst
  356  git switch -
  357  gst
  358  git stash
  359  git switch -
  360  sudo pacman -S git-lfs
  361  git lfs isntall
  362  git lfs install
  363  git switch main
  364  git stash 
  365  git switch main
  366  git stash 
  367  git switch main
  368  gst
  369  git lfs fetch --all
  370  git lfs pull
  371  git status
  372  clear
  373  rsyncplatalt
  374  rsyncpqr
  375  :wa
  376  rsyncpqr
  377  rsyncplatalt
  378  scp akhil@132.1.16.132:/home/akhil/files/projects/plat_alternate_work/platform/docker_run00.log .
  379  ag -i format.hpp
  380  rsyncpqr
  381  docker build -f dockerfiles/Dockerfile.ubuntu1804 -t platu1804-build .
  382  clear
  383  htop
  384  tmux ls
  385  tmux new -s muxy
  386  nvim .
  387  nvim docker_run.log
  388  htop
  389  clear
  390  tmux ls
  391  tmux new -s muxy
  392  htop
  393  nvim .
  394  nvim docker_run.log
  395  clear
  396  sudo pacman -S chatgpt
  397  pacman -Qs gpt
  398  pacman -Qs chat
  399  yay -Qs gpt
  400  yay -Qs chat
  401  clear
  402  exit
  403  sudo pacman -U
  404  cfg
  405  nvim .
  406  ll
  407  mv -f astronvim dumpyard
  408  ll
  409  ls -lart
  410  mv -f .bashrc .zshrc .tmux.conf dumpyard
  411  ls -lart
  412  mv -f .ackrc dumpyard
  413  ccls
  414  htop
  415  mv i3 i3_resources i3status dumpyard
  416  mv -f dunst dumpyard
  417  ll
  418  mv -f .vimrc dumpyard
  419  ll
  420  cat Brewfile
  421  pacman -S tree
  422  tree
  423  sudo pacman -S tree
  424  sudo pacman -S luarocks lazygit lazydocker gource git-lfs
  425  sudo pacman -S luarocks lazygit gource git-lfs
  426  btm
  427  pacman -S bottom
  428  sudo pacman -S bottom
  429  btm
  430  curl
  431  ctags
  432  pacman -S ctags
  433  sudo pacman -S ctags
  434  cmake-docs
  435  sudo pacman -S cmake-docs
  436  pacman -Qs cmake
  437  fzf
  438  paralled
  439  pacman -S parallel
  440  sudo pacman -S parallel
  441  clear
  442  ll
  443  mv -f nvim dumpyard
  444  pacman -S stow
  445  sudo pacman -S stow
  446  ll
  447  nvim .
  448  gst
  449  mv -f vscode-neovim dumpyard
  450  fish
  451  ll i3
  452  ll
  453  mkdir tmux
  454  mv borrowed/.tmux/.tmux.conf* tmux
  455  ll tmux
  456  rm -rf borrowed
  457  ll
  458  cmus
  459  pacman -Qs cmus
  460  ranger
  461  pacman -Qs ranger
  462  pacman -Qs i3status
  463  git status
  464  mv -f lazyvim/* nvim/.config
  465  nvim .
  466  mv -f i3-starterpack/.config/i3/ i3/.config
  467  ll i3/.config
  468  mv -f i3-starterpack/.config/i3status/config i3status/.config
  469  mv -f i3-starterpack/.config/dunst/dunstrc dunst/.config
  470  git status
  471  stow tmux
  472  stow stow
  473  cd ..
  474  ll
  475  cd .config
  476  ll
  477  cfg
  478  ln -sf /home/akhil/files/projects/ConfigFiles/stow/.stowrc ~
  479  ll ~
  480  stow nvim
  481  pwd
  482  ll
  483  cd
  484  ll
  485  ll .config
  486  tree
  487  tree -h
  488  tree -x dumpyard/
  489  tree 
  490  tree --help
  491  tree --help | grep exclued
  492  tree --help | grep exclude
  493  tree --help | grep remove
  494  tree --help | grep ignore
  495  tree --help | grep dir
  496  tree
  497  cfg
  498  cd alacritty
  499  ll
  500  mv -f alacritty .config
  501  cd ../nvim
  502  ll
  503  cd .config
  504  ll
  505  mkdir nvim/
  506  mv -f init.lua lua stylua.toml lazyvim.json lazy-lock.json nvim
  507  ll
  508  cd
  509  ll
  510  pwd
  511  cd ../..
  512  ll
  513  stow tmux
  514  stow -n tmux
  515  stow tmux
  516  ll
  517  rm -rf .stowrc
  518  ll .config
  519  tmux
  520  exit
  521  pwd
  522  cd .config
  523  ll
  524  pwd
  525  ls -lart
  526  pwd
  527  ls -lart
  528  ll
  529  rm -rf tmux alacritty ranger i3 GIMP dunst cmus nvim
  530  ll
  531  stow nvim
  532  ll
  533  stow stow
  534  ll
  535  cd ..
  536  ll
  537  stow stow
  538  ll
  539  ll .config
  540  stow nvim 
  541  stow lazyvim
  542  ll
  543  ll .config
  544  cd ..
  545  ll
  546  cd akhil
  547  ll
  548  rm -rf .tmux.conf.local .tmux.conf
  549  vim .fehbg
  550  ll
  551  files
  552  cd images
  553  ll
  554  cd
  555  cfg
  556  nvim .
  557  stow lazyvim
  558  cd
  559  ll
  560  cd .config
  561  ll
  562  cd
  563  cd .config
  564  ll
  565  cd ..
  566  ll
  567  htop
  568  echo $STOW_DIR
  569  stow -d ~/files/projects/ConfigFiles -t ~ lazyvim
  570  ll
  571  cfg
  572  exit
  573  ll
  574  cfg
  575  ll
  576  stow -d ~/files/projects/ConfigFiles -t ~ tmux i3 dunst alacritty
  577  ll
  578  stow -d ~/files/projects/ConfigFiles -t ~ i3status 
  579  ll
  580  cd i3
  581  ll
  582  ll config
  583  cd ..
  584  ll
  585  stow -d ~/files/projects/ConfigFiles -t ~ i3status 
  586  ll
  587  nvim .
  588  stow -d ~/files/projects/ConfigFiles -t ~ i3status 
  589  ll
  590  cd i3status
  591  ll
  592  nvim config
  593  cd ../..
  594  cd .config
  595  rm -rf i3status
  596  cd ..
  597  stow -d ~/files/projects/ConfigFiles -t ~ i3status 
  598  ll
  599  rm -rf dunstrc
  600  stow -d ~/files/projects/ConfigFiles -t ~ dusnt
  601  stow -d ~/files/projects/ConfigFiles -t ~ dunst
  602  cd .config
  603  ll
  604  clear
  605  exit
  606  clear
  607  nvim .
  608  git status
  609  git add lazyvim/ nvim/ setup.sh vscode-neovim/ alacritty ccls/ clangd/ dumpyard/ dunst/ i3 i3status/ stow/ tmux
  610  gst
  611  git add i3_resources/ config.lua compton.conf borrowed/ astronvim/
  612  gst
  613  git add .ackrc .bashrc .tmux.conf .vimrc .zshrc Brewfile README.md alacritty.yml
  614  GST
  615  gst
  616  glog
  617  git commit -m "[stow] restructure config repo so the dotfiles can be configured via stow."
  618  gprav 
  619  git push --force-with-lease origin HEAD
  620  git remote -v
  621  git remote set-url origin git@github.com:akhiltiwari13/ConfigFiles.git
  622  git remote -v
  623  git push --force-with-lease origin HEAD
  624  gprav
  625  clear
  626  dev132
  627  cd files/projects/plat_alternate_work/pqr
  628  ll
  629  cd ../platform
  630  docker container list
  631  nvim .
  632  rsyncplatalt
  633  docker build -f dockerfiles/Dockerfile.ubuntu1804 -t platu1804-build .
  634  cd
  635  nsep168
  636  168
  637  nsep168
  638  clear
  639  tmux ls
  640  tmux new -s muxy
  641  cfg
  642  ll
  643  cd tmux
  644  ll
  645  mv .config/* .
  646  ll
  647  rm -rf tmux/* .
  648  ll
  649  ls -lart
  650  gst
  651  git restore .config/tmux/.tmux.conf .config/tmux/.tmux.conf.local tmux
  652  gst
  653  git restore .config/tmux/.tmux.conf .config/tmux/.tmux.conf.local 
  654  gst
  655  ll
  656  mv -f tmux/* .
  657  ll
  658  ls -lart
  659  cd tmux
  660  ll
  661  mv .tmux.conf* ..
  662  cd ..
  663  ll
  664  rm -rf tmux .config
  665  cd-
  666  cd -
  667  cd
  668  ll
  669  cd .config
  670  ll
  671  rm -rf tmux
  672  ll
  673  cd ..
  674  \tstow -d ~/files/projects/ConfigFiles -t ~ tmux
  675  cfg
  676  ll
  677  ll tmux
  678  cd -
  679  \tstow -d ~/files/projects/ConfigFiles -t ~ tmux
  680  cfg
  681  cd tmux/m
  682  cd tmux/
  683  ll
  684  cd ..
  685  ll
  686  stow tmux
  687  ll
  688  cd
  689  ll
  690  cd .config
  691  ll
  692  cd ..
  693  ls -lart | grep .tmux
  694  cd .tmux
  695  ll
  696  cd plugins
  697  tmux attach -t muxy
  698  cd
  699  ll
  700  ll .config
  701  tmux new -s muxy
  702  ll
  703  rm -rf .tmux.conf.local .tmux .tmux.conf
  704  ll
  705  \tstow -d ~/files/projects/ConfigFiles -t ~ tmux
  706  ll
  707  tmux new -s muxy
  708  vim .tmux.conf.local
  709  ll
  710  exit
  711  tmux new -s muxy
  712  vim .
  713  nvim .
  714  nvim docker_run.log
  715  nvim .
  716  cd
  717  ll
  718  flameshot gui
  719  clear
  720  gst
  721  gprav
  722  nvim .
  723  dev132
  724  git status
  725  gst
  726  cd
  727  dev132
  728  clear
  729  nsep168
  730  clear
  731  elaeo
  732  ll
  733  cd libraries
  734  ll
  735  cd ../applications
  736  ll
  737  cd nse_tbt_recovery_standalone
  738  nvim .
  739  vim .
  740  nvim .
  741  mkdir build
  742  cd build
  743  ll
  744  git status
  745  nsep168
  746  clear
  747  nsep168
  748  gst
  749  gprav
  750  gst
  751  nvim .
  752  dev132
  753  rsyncplatalt
  754  clear
  755  dev132
  756  clear
  757  sudo pacman -S acpi acpid tlp
  758  sudo systemctl enable --now acpid
  759  sudo systemctl enable --now tlp
  760  sudo vim /etc/systemd/sleep.conf
  761  vim /etc/systemd/logind.conf
  762  sudo vim /etc/systemd/logind.conf
  763  exit
  764  clera
  765  clear
  766  ping archlinux.org
  767  clear
  768  NetworkManager
  769  clear
  770  networkctl
  771  NetworkManager
  772  clear
  773  cfg
  774  nvim .
  775  slack
  776  systemctl restart
  777  systemctl reboot
  778  clear
  779  cfg
  780  nvim .
  781  exit
  782  systemctl reboot
  783  clear
  784  exit
  785  clear
  786  cfg
  787  nvim .
  788  nm-applet
  789  pacman -S xfsettingsd
  790  sudo pacman -S xfsettingsd
  791  systemctl restart
  792  systemctl reboot
  793  e it
  794  cfg
  795  ll
  796  nvim i3/.config/i3/config
  797  clear
  798  systemctl reboot
  799  clear
  800  tmux ls
  801  tmux new -s muxy
  802  nvim .
  803  clear
  804  plat
  805  git status
  806  nvim .
  807  pqr
  808  git branch
  809  clear
  810  nsep168
  811  clear
  812  dev132
  813  clear
  814  nvim .
  815  clear
  816  pqralt
  817  gst
  818  gprav
  819  nvim .
  820  clear
  821  nvim .
  822  htop
  823  glog
  824  cd build
  825  pwd
  826  cmake ..
  827  cp compile_commands.json
  828  cp compile_commands.json ..
  829  nvim .
  830  clear
  831  nsep168
  832  prodlg
  833  ll
  834  alias nsep168
  835  scp prod@192.168.101.168:/home/prod/nse_reocvery/standalone/tbt_recovery_2025-01-15.log
  836  scp prod@192.168.101.168:/home/prod/nse_reocvery/standalone/tbt_recovery_2025-01-15.log .
  837  scp prod@192.168.101.168:/home/prod/nse_recovery/standalone/tbt_recovery_2025-01-15.log .
  838  ll
  839  nvim tbt_recovery_2025-01-15.log
  840  elaeo
  841  nvim .
  842  cd
  843  cd Downloads
  844  ll
  845  unzip MTBT_FO_NNF_PROTOCOL_6.6.zip
  846  elaeo
  847  ll
  848  cd build
  849  ll
  850  cmake ..
  851  cd ..
  852  clear
  853  pwd
  854  conan install . --output-folder=build --build=missing --update\n
  855  pacman -S conan
  856  sudo pacman -S conan
  857  pacman -S conan
  858  sudo pacman -S conan
  859  clear
  860  yay -S conan
  861  clear
  862  ll
  863  ls -laryt
  864  ls -lart
  865  clear
  866  cleasr
  867  clear
  868  conan install . --output-folder=build --build=missing\n
  869  conan profile detect
  870  pwd
  871  conan install . --output-folder=build --build=missing\n
  872  ll
  873  cd build
  874  ll
  875  cmake .. -DCMAKE_TOOLCHAIN_FILE=conan_toolchain.cmake
  876  cd build
  877  cmake .. -DCMAKE_TOOLCHAIN_FILE=conan_toolchain.cmake
  878  cd ..
  879  conan install . --output-folder=build --build=missing\n
  880  cd build
  881  cmake .. -DCMAKE_TOOLCHAIN_FILE=conan_toolchain.cmake
  882  fg
  883  cmake ..
  884  clear
  885  cd ..
  886  cd build
  887  cmake .. -DCMAKE_TOOLCHAIN_FILE=conan_toolchain.cmake
  888  conan --version
  889  conan install . --output-folder=build --build=missing
  890  cd ..
  891  conan install . --output-folder=build --build=missing
  892  ll build/ | grep -i conan
  893  fg
  894  pwd
  895  conan install . --output-folder=build --build=missing
  896  cd build
  897  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/generators/conan_toolchain.cmake
  898  cmake --version
  899  fg
  900  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/generators/conan_toolchain.cmake\n
  901  conan profile detect\nconan install . --output-folder=build --build=missing --update\n
  902  cd ..
  903  conan profile detect\nconan install . --output-folder=build --build=missing --update\n
  904  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/generators/conan_toolchain.cmake
  905  cd build
  906  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/generators/conan_toolchain.cmake
  907  fg
  908  cd ..
  909  ls build/generators/conan_toolchain.cmake\n
  910  conan --version\n
  911  elaeo
  912  conan install . --output-folder=build --build=missing\n
  913  ls build/generators/conan_toolchain.cmake\n
  914  conan search yaml-cpp
  915  conan install yaml-cpp/0.8.0@ -b missing
  916  pwd
  917  cd build
  918  conan install yaml-cpp/0.8.0@ -b missing
  919  cd ..
  920  cd build
  921  ag -i conan_toolchain
  922  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/RELEASE/generators/conan_toolchain.cmake
  923  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/RELEASE/generators/conan_toolchain.cmake:wa
  924  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/RELEASE/generators/conan_toolchain.cmake
  925  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/generators/conan_toolchain.cmake
  926  fg
  927  cd ..
  928  conan install yaml-cpp/0.8.0@ -b missing .
  929  clear
  930  cd build
  931  ll
  932  cd build
  933  ll
  934  cd ..
  935  ll
  936  rm -rf build
  937  ll
  938  mkdir build
  939  cd build
  940  conan install .. --output-folder=build --build=missing
  941  yaml-cpp gtest::gtest)\nconanfile.txt: Generator 'CMakeToolchain' calling 'generate()'\nconanfile.txt: CMakeToolchain generated: conan_toolchain.cmake\nconanfile.txt: CMakeToolchain: Preset 'conan-release' added to CMakePresets.json.\n    (cmake>=3.23) cmake --preset conan-release\n    (cmake<3.23) cmake <path> -G "Unix Makefiles" -DCMAKE_TOOLCHAIN_FILE=generators/conan_toolchain.cmake  -DCMAKE_POLICY_DEFAULT_CMP0091=NEW -DCMAKE_BUILD_TYPE=Release\nconanfile.txt: CMakeToolchain generated: /home/akhil/files/projects/Elaeocarpus/build/build/Release/generators/CMakePresets.json\nconanfile.txt: CMakeToolchain generated: /home/akhil/files/projects/Elaeocarpus/CMakeUserPresets.json\nconanfile.txt: Generating aggregated env files\nconanfile.txt: Generated aggregated env files: ['conanbuild.sh', 'conanrun.sh']\nInstall finished successfully\n➜  Elaeocarpus git:(master) ✗ ls build/generators/conan_toolchain.cmake\n\nls: cannot access 'build/generators/conan_toolchain.cmake': No such file or director
  942  clear
  943  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/build/Release/generators/conan_toolchain.cmake\n
  944  fzf
  945  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/build/Release/generators/conan_toolchain.cmake\n
  946  cmake .. 
  947  pwd
  948  ll
  949  ll build
  950  cd build
  951  pwd
  952  ll
  953  cd build
  954  ll
  955  cd Release
  956  ll
  957  cd -
  958  ll
  959  cd ..
  960  ll
  961  pwd
  962  cd ..
  963  ll
  964  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/build/Release/generators/conan_toolchain.cmake\n
  965  cmake .. \n
  966  cd ..
  967  ll
  968  rm -rf build
  969  ll
  970  mkdir build
  971  cd build
  972  conan install .. --output-folder=.
  973  ll
  974  ll build
  975  ll
  976  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/generators/conan_toolchain.cmake -DCMAKE_BUILD_TYPE=Release
  977  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Release/build/Release/generators/conan_toolchain.cmake\n
  978  ll build
  979  ll build/Release
  980  ll build/Release/generators
  981  ll build/Release/generators | grep conan
  982  pwd
  983  cmake .. -DCMAKE_TOOLCHAIN_FILE=buil/build/Release/build/Release/generators/conan_toolchain.cmake\n
  984  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/build/Release/build/Release/generators/conan_toolchain.cmake\n
  985  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/build/Release/generators/conan_toolchain.cmake\n
  986  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/build/Release/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON
  987  cmake --build .
  988  cp compile_commands.json ..
  989  pwd
  990  cd files/projects/
  991  ll
  992  pwd
  993  ll
  994  unlink .stowrc .config .tmux.conf .tmux.conf
  995  unlink .stowrc 
  996  unlink .config
  997  unlink .tmux.conf*
  998  unlink .tmux.conf
  999  unlink .tmux.conf.local
 1000  ll
 1001  cd yay
 1002  ll
 1003  cd ..
 1004  rm -rf yay
 1005  cd Elaeocarpus
 1006  ll
 1007  cctx
 1008  ./run.py -h
 1009  ./run.py --source ~/files/projects/Elaeocarpus/applications/nse_tbt_recovery_standalone --output ~/files/learn/codectx_out
 1010  ./run.py --source ~/files/projects/Elaeocarpus/applications/nse_tbt_recovery_standalone --output ~/files/learn/codectx_out/tbtsln.txt
 1011  cctxo
 1012  ll
 1013  nvim tbtsln.txt
 1014  cmake --build .
 1015  ll
 1016  cd applications/nse_tbt_recovery_standalone
 1017  ll
 1018  scp tbt_recovery prod@192.168.101.168:/home/prod/nse_recovery/standalone/tbt_recovery20250131
 1019  cd ..
 1020  pwd
 1021  cd ..
 1022  cmake --build .
 1023  cd applications/nse_tbt_recovery_standalone
 1024  ll
 1025  ldd tbt_recovery
 1026  scp tbt_recovery prod@192.168.101.168:/home/prod/nse_recovery/standalone/tbt_recovery20250131
 1027  make
 1028  cmake --build .
 1029  pwd
 1030  cd ../../..
 1031  pwd
 1032  cmake --build .
 1033  pwd
 1034  cd build
 1035  cmake --build .
 1036  cd applications/nse_tbt_recovery_standalone
 1037  ll
 1038  scp tbt_recovery prod@192.168.101.168:/home/prod/nse_recovery/standalone/tbt_recovery20250131
 1039  pwd
 1040  cd -
 1041  cmake --build .
 1042  cd -
 1043  scp tbt_recovery prod@192.168.101.168:/home/prod/nse_recovery/standalone/tbt_recovery20250131
 1044  exit
 1045  clear
 1046  tmux ls
 1047  tmux new -s muxy
 1048  nvim .
 1049  nvim tbt_recovery_2025-01-15.log
 1050  nvim .
 1051  nvim tbt_recovery_2025-01-15.log
 1052  nvim .
 1053  nvim tbtsln.txt
 1054  cd build
 1055  cmake --build .
 1056  clear
 1057  tmux new -s muxy
 1058  nvim .
 1059  nvim tbt_recovery_2025-01-15.log
 1060  nvim .
 1061  nvim tbt_recovery_2025-01-15.log
 1062  nvim .
 1063  nvim tbtsln.txt
 1064  cd build
 1065  cp compile_commands.json ..
 1066  cmake --build .
 1067  cd applications/nse_tbt_recovery_standalone
 1068  ll
 1069  scp tbt_recovery prod@192.168.101.168:/home/prod/nse_recovery/standalone/tbt_recovery20250201_00
 1070  clear
 1071  gprav
 1072  nvim .
 1073  cd
 1074  cd .config
 1075  cd Thunar
 1076  ll
 1077  cd
 1078  cd .config
 1079  ll
 1080  nvim Thunar
 1081  clear
 1082  cd ..
 1083  ll
 1084  books
 1085  book
 1086  alias books
 1087  files
 1088  unzip booksndocs-20250128T064225Z-001.zip
 1089  book
 1090  ll
 1091  rm -rf booksndocs-20250128T064225Z-001.zip
 1092  ll
 1093  ls -lartr
 1094  ls -lart
 1095  cd booksndocs
 1096  ll
 1097  cd ..
 1098  clear
 1099  exit
 1100  cleasr
 1101  clear
 1102  gst
 1103  gprav
 1104  git status
 1105  nvim .
 1106  gprav
 1107  glog
 1108  ll
 1109  nvim .
 1110  alias nsep168
 1111  nsep168
 1112  clear
 1113  nsep168
 1114  gprav
 1115  rsyncplat
 1116  dev132
 1117  \trsyncpqr
 1118  dev132
 1119  pwd
 1120  cd ../../
 1121  cmake --build .
 1122  cd build
 1123  cp compile_commands.json ..
 1124  cd ..
 1125  nvim .
 1126  ll
 1127  \tscp prod@192.168.101.168:/home/prod/nse_recovery/standalone/tbt_recovery_2025-02-01.log .
 1128  ll
 1129  nvim tbt_recovery_2025-02-01.log
 1130  gst
 1131  cmake --build .
 1132  make
 1133  cmake --build .
 1134  cd ..
 1135  conan install .. --output-folder=.
 1136  pwd
 1137  cd build
 1138  conan install .. --output-folder=.
 1139  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/build/Release/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON
 1140  cmake --build .
 1141  clear
 1142  cctx
 1143  ./run.py --source ~/files/projects/Elaeocarpus/applications/nse_tbt_recovery_standalone --output ~/files/learn/codectx_out/tbtsln.txt
 1144  nvim .
 1145  cd ../applications
 1146  cp -r  nse_tbt_recovery_standalone asiotbtrecov
 1147  cd ../build
 1148  cmake --build .
 1149  cd ..
 1150  conan install .. --output-folder=.
 1151  cd ..
 1152  cd - 
 1153  cd build
 1154  conan install .. --output-folder=.
 1155  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/build/Release/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON
 1156  cmake --build .
 1157  :wa
 1158  conan install .. --output-folder=.
 1159  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/build/Release/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON
 1160  cmake --build .
 1161  conan install .. --output-folder=.
 1162  cmake ..
 1163  make
 1164  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/build/Release/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON
 1165  make
 1166  lear
 1167  ll
 1168  cfg
 1169  nvim .
 1170  exit
 1171  git sttaus
 1172  clear
 1173  tmux attach -t muxy
 1174  cd -
 1175  gst
 1176  gprav
 1177  rsyncplatalt
 1178  exit
 1179  tmux ls 
 1180  tmux attach -t muxy
 1181  cal
 1182  proj
 1183  mkdir plat_alternate_work_tmp
 1184  cd plat_alternate_work_tmp
 1185  ll
 1186  history | grep clone
 1187  git clone http://132.1.16.184:8080/source/pqr.git
 1188  git clone http://132.1.16.184:8080/source/platform.git
 1189  proj
 1190  git clone http://132.1.16.184:8080/source/platform.git
 1191  cd pqr
 1192  git fetch -a
 1193  git branch -a | grep direct
 1194  git branch -a | grep -i direct
 1195  git checkout -b directional
 1196  git checkout Master_2.0 
 1197  git branch -d directional
 1198  git checkout origin/DirectConnectivity
 1199  git switch -
 1200  gprav
 1201  cd platform
 1202  ll
 1203  git fetch -a
 1204  git checkout DirectConnectivity
 1205  git checkout -b directional
 1206  gprav
 1207  git push --set-upstream origin directional
 1208  git fetch -a
 1209  git checkout DirectConnectivit
 1210  git checkout DirectConnectivity
 1211  git checkout -b directional
 1212  git push --set-upstream origin directional
 1213  ll
 1214  glog
 1215  exit
 1216  networkctl
 1217  sudo systemctl enable --now networkctl
 1218  sudo systemctl status  networkctl
 1219  sudo systemctl status  networkd
 1220  sudo systemctl status  network
 1221  sudo systemctl status  networkd
 1222  sudo systemctl status  systemd-networkd.service 
 1223  sudo systemctl start  systemd-networkd.service 
 1224  NetworkManager
 1225  sudo systemctl status  systemd-networkd.service 
 1226  networkctl
 1227  htop
 1228  systemctl --failed
 1229  journalctl -b | grep -i error
 1230  pacman -Syu
 1231  sudo pacman -Syu
 1232  pacman -Qtd
 1233  clear
 1234  tmux ls
 1235  tmux new -s muxy
 1236  nvim .
 1237  nvim tbt_recovery_2025-02-01.log
 1238  nvim .
 1239  clear
 1240  ll
 1241  ls -lart
 1242  arpd
 1243  whoami
 1244  cat /etc/os-release
 1245  uname -r
 1246  hostname -a
 1247  hostname -i
 1248  hostnamectl
 1249  clear
 1250  pacman -Syu thefuck
 1251  sudo pacman -Syu thefuck
 1252  clear
 1253  git status
 1254  clear
 1255  ls -lart
 1256  cfg
 1257  gst
 1258  nvim .
 1259  tmux attach -t muxy
 1260  cd
 1261  cd .con
 1262  cd .config
 1263  cd rofi
 1264  nvim .
 1265  ll
 1266  cd ..
 1267  ll
 1268  mv rofi ~/files/projects/ConfigFiles
 1269  pwd
 1270  cfg
 1271  ll
 1272  cd rofi
 1273  ll
 1274  mkdir .config
 1275  mv config.rasi .config
 1276  cd .config
 1277  mkdir rofi
 1278  mv config.rasi rofi
 1279  cfg
 1280  stow rofi
 1281  cd
 1282  cd .config
 1283  ll
 1284  cd ..
 1285  ll
 1286  cfg
 1287  ll
 1288  cd rofi
 1289  ll
 1290  cd ..
 1291  tree i3
 1292  ll i3
 1293  ll i3/.config/
 1294  ll i3/.config/i3
 1295  ll rofi/.config/rofi
 1296  stow rofi
 1297  cd
 1298  cd .config
 1299  ll
 1300  cd -
 1301  cfg
 1302  ll
 1303  cd stow
 1304  ll
 1305  cd ..
 1306  cd stow/o
 1307  cd stow
 1308  ll
 1309  nvim .stowrc
 1310  history |grep stow
 1311  \t\tstow -d ~/files/projects/ConfigFiles -t ~ rofi
 1312  \t\tstow -d ~/files/projects/ConfigFiles -t ~ stow
 1313  cd
 1314  cd .con
 1315  cd .config
 1316  ll
 1317  cd ..
 1318  ll
 1319  cd -
 1320  ll
 1321  nvim .
 1322  htop
 1323  nvim .
 1324  pacman -Syu networkmanager-openvpn
 1325  sudo pacman -Syu networkmanager-openvpn
 1326  sudo pacman -Syu networkmanager-docs
 1327  sudo pacman -Syu networkmanager-qt
 1328  sudo pacman -Syu openvpn
 1329  cd
 1330  cd Downloads
 1331  unzip ovpn_cfg-20250128T064208Z-001.zip
 1332  clear
 1333  ll
 1334  exit
 1335  cfg
 1336  gst
 1337  gd
 1338  gst
 1339  clear
 1340  source ~/.zshrc
 1341  pacman -Syu
 1342  sudo pacman -Syu
 1343  clear
 1344  ll
 1345  cd
 1346  clera
 1347  nsep168
 1348  cler
 1349  nsep168
 1350  nvim .
 1351  ll
 1352  \tscp prod@192.168.101.168:/home/prod/var/sqtpl/ref_data/contracts/20250203-NSEFNO-CONTRACTMASTER.csv .
 1353  nvim .
 1354  cd tools/scripts
 1355  cleaar
 1356  clear
 1357  chmod u+x contract_master_viewer.py
 1358  ./contract_master_viewer.py
 1359  pip3 install tkinter
 1360  pacman -S python-tkinter
 1361  sudo pacman -S python-tkinter
 1362  pacman -Qs python | grep -i tkinter
 1363  pacman -Qs python 
 1364  python3 contract_master_viewer.py
 1365  pacman -Qs | grep -i libtk
 1366  sudo pacman -S tk
 1367  python3 contract_master_viewer.py
 1368  gst
 1369  ll
 1370  rm -rf \!attachments
 1371  clear
 1372  gst
 1373  gd
 1374  glog
 1375  gst
 1376  glog
 1377  gd
 1378  gst
 1379  git add alacritty/ i3 tmux/ rofi/ tmux/
 1380  gst
 1381  git commit --amend
 1382  git push --force-with-lease origin HEAD
 1383  clear
 1384  gst
 1385  gprav
 1386  nvim .
 1387  gst
 1388  git add i3
 1389  git commit --amend
 1390  git push --force-with-lease origin HEAD
 1391  gprav
 1392  cp build/compile_commands.json .
 1393  gst
 1394  dev132
 1395  nvim .
 1396  cp build/compile_commands.json .
 1397  gst
 1398  fg
 1399  nvim .
 1400  cp build/compile_commands.json .
 1401  htop
 1402  tmux ls
 1403  tmux new -s muxy
 1404  nvim .
 1405  nvim .
 1406  gst
 1407  nvim .
 1408  dev132
 1409  CLEAR
 1410  tmux attach -t muxy
 1411  dev132
 1412  nvim .
 1413  clear
 1414  nvim .
 1415  cctx
 1416  \t./run.py --source ~/files/projects/Elaeocarpus/applications/nse_tbt_recovery_standalone --output ~/files/learn/codectx_out/tbt_standalone.txt
 1417  cctxo
 1418  nvim .
 1419  cp build/compile_commands.json ..
 1420  git status
 1421  clear
 1422  cd build
 1423  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/build/Release/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON
 1424  make
 1425  pacman -Qs jetbrains
 1426  i3status
 1427  clear
 1428  git status
 1429  git add .
 1430  git commit --amend
 1431  git push --force-with-lease origin HEAD
 1432  gprav
 1433  gst
 1434  gprav
 1435  cp compile_commands.json ..
 1436  htop
 1437  exit
 1438  ip link
 1439  git status
 1440  gd
 1441  gst
 1442  dunst
 1443  clear
 1444  notify-send "Test" "Dunst is working
 1445  notify-send "Test"
 1446  notify-send "Dunst is working
 1447  notify-send "Dunst is working.
 1448  notify-send "Dunst is working."
 1449  notify-send "Test" "Dunst is working\!"
 1450  pwd
 1451  ag -i colorscheme
 1452  proj
 1453  git clone https://github.com/catppuccin/dunst.git\nmkdir -p ~/.config/dunst\ncp dunst/src/dunstrc ~/.config/dunst/
 1454  git clone https://github.com/catppuccin/dunst.git\n
 1455  ll
 1456  rm -rf .config
 1457  rm -rf dunst
 1458  ll
 1459  rm -rf compile_commands.json
 1460  clear
 1461  ll
 1462  clear
 1463  git clone https://github.com/catppuccin/dunst.git\n
 1464  cd dunst
 1465  ll
 1466  cd themes
 1467  ll
 1468  cd ..
 1469  ll
 1470  exit
 1471  proj
 1472  cd dunst
 1473  nvim .
 1474  \tnotify-send "hello"
 1475  pkill dunst
 1476  dunst & | disown
 1477  dunst & disown
 1478  \tnotify-send "hello"
 1479  x-www-browser -new-tab
 1480  firefox -new-tab
 1481  pkill dunst
 1482  dunst & disown
 1483  notify-send "dunst is working
 1484  notify-send "dunst is working\!"
 1485  gst
 1486  git add dunst/ i3/ i3status/ lazyvim/ 
 1487  git commit -m "[lazyvim|i3|dunst] font and appearance changes"
 1488  gprav
 1489  git push --force-with-lease origin HEAD
 1490  clear
 1491  cd
 1492  cd .config
 1493  ll
 1494  source ~/.zshrc
 1495  nvim .
 1496  ll
 1497  neofetch
 1498  fg
 1499  nvim .
 1500  neofetch
 1501  fg
 1502  nvim .
 1503  neofetch
 1504  fg
 1505  nvim .
 1506  neofetch
 1507  fg
 1508  neofetch
 1509  fg
 1510  neofetch
 1511  fg
 1512  neofetch
 1513  fg
 1514  sudo pacman -S gtk-engine-murrine
 1515  pacman -Qs catppuccin
 1516  pacman -Qs mate
 1517  pacman -Qs gtk
 1518  pacman -Qs gtk | grep -i theme
 1519  yay -Qs catppuccin
 1520  yay -Qs gtk
 1521  yay -Qs gtk | grep -i theme
 1522  ll
 1523  cd gtk-4.0
 1524  ll
 1525  nvim settings.ini
 1526  fg
 1527  cd
 1528  cd /
 1529  fzf
 1530  cd /usr/share/themes
 1531  ll
 1532  sudo pacman -S gtk-engine-murrine
 1533  ll
 1534  cd
 1535  cd Downloads
 1536  ll
 1537  unzip Catppuccin-Dark-BL-MB.zip
 1538  ll
 1539  cd Catppuccin-Dark
 1540  ll
 1541  cd gtk-4.0
 1542  ll
 1543  cd ..
 1544  ll
 1545  cd ..
 1546  ll
 1547  cd /usr/share/themes
 1548  ll
 1549  tree Arc-Dark
 1550  pwd
 1551  cd ..
 1552  fg
 1553  cd /usr/share/themes
 1554  ll
 1555  git status
 1556  ll
 1557  tree Materia-dark
 1558  ll
 1559  ll Arc
 1560  cd ..
 1561  ll
 1562  cd themes
 1563  ll
 1564  sudo mv -f ~/Downloads/Catppuccin-Dark* .
 1565  ll
 1566  rm -rf Catppuccin-Dark-BL-MB.zip
 1567  sudo rm -rf Catppuccin-Dark-BL-MB.zip
 1568  ll
 1569  rm -rf Catppuccin-Dark*
 1570  sudo rm -rf Catppuccin-Dark*
 1571  cd
 1572  cd .config
 1573  ll
 1574  fg
 1575  cd
 1576  cd Downloads
 1577  ll
 1578  unzip Catppuccin-Mocha-BL.zip
 1579  ll
 1580  cd Catppuccin-Mocha-BL
 1581  ll
 1582  ls -lart
 1583  cd
 1584  ll
 1585  ll themes
 1586  pwd
 1587  cd ..
 1588  ll
 1589  git clone git@github.com:Fausto-Korpsvart/Catppuccin-GTK-Theme.git
 1590  cd Catppuccin-GTK-Theme
 1591  ll
 1592  pwd
 1593  ls -lart
 1594  cd themes
 1595  ll
 1596  ./build.sh
 1597  sudo ./install.sh
 1598  ./gtkrc.sh 
 1599  ll
 1600  cd ..
 1601  ll
 1602  cd ..
 1603  ll
 1604  cd dunst
 1605  ll
 1606  cd themes
 1607  ll
 1608  cd
 1609  cd .con
 1610  fg
 1611  exit
 1612  gst
 1613  clear
 1614  gst
 1615  cd ..
 1616  cd -
 1617  cd .config
 1618  clear
 1619  ll
 1620  cd /usr/share/rofi/themes
 1621  ll
 1622  proj
 1623  git clone git@github.com:catppuccin/rofi.git
 1624  ll
 1625  cd rofi
 1626  ll
 1627  cd deathemonic
 1628  ll
 1629  cd bin
 1630  ll
 1631  cd ..
 1632  ll
 1633  cd config
 1634  ll
 1635  cd ..
 1636  ll
 1637  cd ..
 1638  ll
 1639  cd basic
 1640  ll
 1641  sudo ./install.sh
 1642  cd /usr/share/rofi/themes
 1643  ll
 1644  cd -
 1645  ll
 1646  cd ..
 1647  ll
 1648  cd deathemonic
 1649  ll
 1650  cd ..
 1651  ll
 1652  cd basic
 1653  ll
 1654  nvim .
 1655  rofi -show drun
 1656  cd
 1657  clear
 1658  cd .config/rofi
 1659  ll
 1660  cd -
 1661  proj
 1662  ll
 1663  cd Catppuccin-GTK-Theme
 1664  LL
 1665  ll
 1666  cd ..
 1667  cd rofi
 1668  ll
 1669  cd basic
 1670  ./install.sh
 1671  zsh install.sh
 1672  cd 
 1673  cd .local/share/rofi/themes
 1674  ll
 1675  pkill rofi
 1676  tmux attach -t muxy
 1677  rofi -show drun
 1678  ll
 1679  neofetch
 1680  cleasr
 1681  cd
 1682  nvim .zshrc
 1683  :wa
 1684  cfg
 1685  fg
 1686  nvim .
 1687  ll
 1688  mv -f neofetch ~/files/projects/ConfigFiles
 1689  rm -rf polybar
 1690  cfg
 1691  ll
 1692  cd neofetch
 1693  ll
 1694  mkdir .config
 1695  cd .config
 1696  mkdir neofetch
 1697  cd ..
 1698  ll
 1699  mv config.conf .config/neofetch
 1700  cd ..
 1701  \t\tstow -d ~/files/projects/ConfigFiles -t ~ neofetch
 1702  neofetch
 1703  nvim .
 1704  gst
 1705  neofetch
 1706  clear
 1707  gst
 1708  git add alacritty/ i3/ rofi/ setup.sh setup.sh neofetch/
 1709  gst
 1710  git commit -m "[neofetch|rofi|i3|alacritty] add neofetch config and minor update"
 1711  gprav
 1712  git push --force-with-lease origin HEAD
 1713  nvim .
 1714  gst
 1715  git push --force-with-lease origin HEAD
 1716  clear
 1717  git status
 1718  make
 1719  k
 1720  clear
 1721  git status
 1722  pwd
 1723  cd build
 1724  make
 1725  pwd
 1726  cd ..
 1727  ll
 1728  make
 1729  gd
 1730  sudo pacman -S --noconfirm openvpn networkmanager-openvpn\n
 1731  sudo systemctl enable openvpn
 1732  sudo pacman -S --noconfirm openvpn networkmanager-openvpn\n
 1733  sudo systemctl enable NetworkManager
 1734  ip a | grep tun
 1735  ip a | grep -i tun
 1736  sudo systemctl enable openvpn\nsudo systemctl start openvpn\n
 1737  sudo pacman -S --noconfirm acpid\nsudo systemctl enable acpid\nsudo systemctl start acpid\n
 1738  sudo pacman -S --noconfirm brightnessctl\n
 1739  sudo pacman -S --noconfirm pulseaudio pulseaudio-alsa pavucontrol pamixer\n
 1740  sudo pacman -S --noconfirm pulseaudio pulseaudio-alsa pavucontrol 
 1741  sudo pacman -S --noconfirm pulseaudio pulseaudio-alsa 
 1742  cleasr
 1743  clear
 1744  sudo pacman -S --noconfirm acpi acpi_call acpid\n
 1745  exit
 1746  sudo pacman -S --noconfirm acpi acpi_call acpid\n
 1747  sudo pacman -S --noconfirm acpi_call-dkms\n
 1748  sudo pacman -S --noconfirm systemd systemd-sleep acpid logind pm-utils xss-lock i3lock\n
 1749  sudo pacman -S --noconfirm systemd systemd-sleep acpid  xss-lock i3lock
 1750  sudo pacman -S --noconfirm systemd  acpid  xss-lock i3lock
 1751  sudo pacman -S --noconfirm systemd  acpid  xss-lock
 1752  sudo systemctl enable acpid\nsudo systemctl start acpid\n
 1753  sudo systemctl restart systemd-logind\n
 1754  systemctl suspend\n
 1755  gs
 1756  gst
 1757  exit
 1758  clear
 1759  pwd
 1760  make
 1761  cctx
 1762  \t./run.py --source ~/files/projects/Elaeocarpus/applications/asiotbtrecov --output ~/files/learn/codectx_out/asio_tbt_recov.txt
 1763  cctxo
 1764  nvim .
 1765  conan install .. --output-folder=.
 1766  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/build/Release/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON
 1767  cmake --build .
 1768  cp compile_commands.json ..
 1769  cmake --build .
 1770  cp compile_commands.json ..
 1771  nvim .
 1772  clear
 1773  cfg
 1774  nvim alacritty
 1775  clear
 1776  ll
 1777  tmux ls
 1778  tmux new -s muxy
 1779  nvim .
 1780  rm -rf compile_commands.json
 1781  cp build/compile_commands.json ..
 1782  ll
 1783  clear
 1784  gst
 1785  cd build
 1786  pwd
 1787  make
 1788  cmake --build .
 1789  clear
 1790  exit
 1791  nvim .
 1792  git status
 1793  cd build
 1794  cmake --build .
 1795  fzf capnproto
 1796  fzf
 1797  cmake --build .
 1798  git status
 1799  clear
 1800  nvim .
 1801  alias dev132
 1802  ssh aditya@192.168.101.236
 1803  proj
 1804  files
 1805  cd learn
 1806  ll
 1807  scp -r  aditya@192.168.101.236:/home/aditya/deepanshu/tbt .
 1808  NetworkManager
 1809  clear
 1810  sudo pacman -S networkmanager network-manager-applet\n
 1811  sudo pacman -S networkmanager-openvpn\n
 1812  sudo systemctl enable --now NetworkManager\n
 1813  sudo pacman -S nm-connection-editor 
 1814  clear
 1815  nmcli
 1816  nm-connection-editor
 1817  clear
 1818  nmcli
 1819  nmcli device wifi disconnect
 1820  nmcli device disconnect wlp0s20f3
 1821  nmcli device connect wlp0s20f3
 1822  nmcli connection up id Algoquant
 1823  mcxt
 1824  clear
 1825  make
 1826  sudo pacman -Syu
 1827  cp compile_commands.json ..
 1828  cmake --build .
 1829  clear
 1830  ll
 1831  rm -rf asio_tbt_recov.txt
 1832  gcc --version
 1833  g++ version
 1834  clang --version
 1835  g++ version
 1836  g++ --version
 1837  clear
 1838  cp compile_commands.json ..
 1839  neofetch
 1840  htop
 1841  cmake --build .
 1842  clear
 1843  cmake --build .
 1844  cd applications/asiotbtrecov
 1845  history | grep scp
 1846  ll
 1847  scp asio_tbt_recovery prod@192.168.101.168:/home/prod/nse_recovery/standalone/asio_recovery20250205
 1848  exit
 1849  nsep168
 1850  cd ..
 1851  pwd
 1852  cd ..
 1853  cmake --build .
 1854  cd applications/asiotbtrecov
 1855  scp asio_tbt_recovery prod@192.168.101.168:/home/prod/nse_recovery/standalone/asio_recovery20250205_01
 1856  cd ../..
 1857  cmake --build .
 1858  scp asio_tbt_recovery prod@192.168.101.168:/home/prod/nse_recovery/standalone/asio_recovery20250205_02
 1859  cd applications/asiotbtrecov
 1860  scp asio_tbt_recovery prod@192.168.101.168:/home/prod/nse_recovery/standalone/asio_recovery20250205_02
 1861  cd ../..
 1862  cmake --build .
 1863  cd -
 1864  scp asio_tbt_recovery prod@192.168.101.168:/home/prod/nse_recovery/standalone/asio_recovery20250205_02
 1865  ll
 1866  cctx
 1867  \t./run.py --source ~/files/projects/Elaeocarpus/applications/asiotbtrecov --output ~/files/learn/codectx_out/asio_tbt_recov.txt
 1868  cctxo
 1869  nvim .
 1870  cd -
 1871  cmake --build .
 1872  cd -
 1873  \tscp asio_tbt_recovery prod@192.168.101.168:/home/prod/nse_recovery/standalone/asio_recovery20250205_03
 1874  cd -
 1875  cmake --build .
 1876  cd -
 1877  pwd
 1878  \tscp asio_tbt_recovery prod@192.168.101.168:/home/prod/nse_recovery/standalone/asio_recovery20250205_04
 1879  MAKE
 1880  pwd
 1881  cd -
 1882  cmake --build .
 1883  cd -
 1884  \tscp asio_tbt_recovery prod@192.168.101.168:/home/prod/nse_recovery/standalone/asio_recovery20250205_05
 1885  cd -
 1886  cmake --build .
 1887  gst
 1888  ll
 1889  gst
 1890  cmake --build .
 1891  cd -
 1892  \t\tscp asio_tbt_recovery prod@192.168.101.168:/home/prod/nse_recovery/standalone/asio_recovery20250205_06
 1893  clear
 1894  neofetch
 1895  htop
 1896  git status
 1897  cd -
 1898  cd ..
 1899  gst
 1900  git add MulticastReceiver_mcx/ README.md applications/ codedump/ conanfile.txt design.md libraries/ tools/ applications/ tools/
 1901  gst
 1902  git add .gitignore CMakeLists.txt
 1903  glog
 1904  git commit -m "[lib/apps/tools] refactor, restructure code and add logger and config lib wrapper as a foundation library"
 1905  gprav && git push --force-with-lease origin HEAD
 1906  GST
 1907  gst
 1908  git add alacritty/
 1909  gst
 1910  gd
 1911  gd --cached
 1912  glog
 1913  gst
 1914  git commit --amend 
 1915  git push force-with-lease origin HEAD
 1916  git push --force-with-lease origin HEAD
 1917  GST
 1918  gst
 1919  gd
 1920  clear
 1921  nsep168
 1922  fg
 1923  gst
 1924  gprav
 1925  sudo pacman -Syu
 1926  cd build
 1927  ll
 1928  cmake --build .
 1929  cd -
 1930  cd applications/asiotbtrecov
 1931  \t\tscp asio_tbt_recovery prod@192.168.101.168:/home/prod/nse_recovery/standalone/asio_recovery20250205_07
 1932  cctx
 1933  \t./run.py --source ~/files/projects/Elaeocarpus/applications/asiotbtrecov --output ~/files/learn/codectx_out/asio_tbt_recov.txt
 1934  \t./run.py --source ~/files/projects/Elaeocarpus/applications/nse_tbt_recovery_standalone --output ~/files/learn/codectx_out/tbt_recov.txt
 1935  history | grep pacman
 1936  sudo pacman -Syu
 1937  sudo systemctl reboot
 1938  mcxp12
 1939  clewar
 1940  tmux ls
 1941  i3-msg move workspace to output HDMI-2
 1942  tmux new -s muxy
 1943  nvim .
 1944  clear
 1945  exit
 1946  gst
 1947  gprav
 1948  gst
 1949  ll
 1950  nvim .
 1951  ll
 1952  git status
 1953  tmux attach -t muxy
 1954  gst
 1955  glog
 1956  gst
 1957  git add alacritty/.config/alacritty/
 1958  git commit -m "[alac] increase font size"
 1959  gprav && git push --force-with-lease origin HEAD
 1960  nvim .
 1961  clear
 1962  gst
 1963  gprav
 1964  nvim .
 1965  git status
 1966  gst
 1967  ll
 1968  \t./run.py --source ~/files/projects/Elaeocarpus/applications/nse_tbt_recovery_standalone --output ~/files/learn/codectx_out/tbt_recov.txt
 1969  \t./run.py --source ~/files/projects/Elaeocarpus/applications/asiotbtrecov --output ~/files/learn/codectx_out/asio_tbt_recov.txt
 1970  cd adapters/BSE/feed_adapter
 1971  clear
 1972  ag -i fast
 1973  fzf
 1974  ag 25087 
 1975  nvim .
 1976  cd build
 1977  cmake --build .
 1978  cd applications/asiotbtrecov
 1979  \t\tscp asio_tbt_recovery prod@192.168.101.168:/home/prod/nse_recovery/standalone/asio_recovery20250205_08
 1980  nsep168
 1981  clear
 1982  sudo pacman -Syu zeal
 1983  nvim .
 1984  vim /home/akhil/.local/share/rofi/themes/catppuccin-mocha.rasi
 1985  gst
 1986  git status
 1987  clear
 1988  nvim .
 1989  zeal
 1990  gst
 1991  nvim .
 1992  sudo pacman -S zathura-pdf-mupdf ranger 
 1993  ranger
 1994  nvim .
 1995  zeal --style
 1996  cd
 1997  vim .config/Zeal/Zeal.conf
 1998  sudo pacman -S qt5-styleplugins
 1999  yay -Syu xcursor-simp1e-catpuccin-mocha
 2000  yay -Syu
 2001  yay -Suy
 2002  i3-msg move workspace to output eDP-1
 2003  nvim .
 2004  clear
 2005  yay -Syu
 2006  pacman -Syu
 2007  sudo pacman -Syu
 2008  clear
 2009  nvim .
 2010  cd build
 2011  cmake --build .
 2012  ip link
 2013  networkctl
 2014  history | grep -i network
 2015  networkctl
 2016  history
 2017  cmake --build .
 2018  git status
 2019  cd ..
 2020  git add codedump/ applications/ libraries/ 
 2021  git status
 2022  git commit -m "[elaeo-utils] add exception processor functions to elaeo-utils libs"
 2023  gst
 2024  git commit --amend
 2025  gprav && git push --force-with-lease origin HEAD
 2026  make
 2027  cd build
 2028  cmake --build .
 2029  nvim /etc/X11/xorg.conf.d
 2030  sudo nvim /etc/X11/xorg.conf.d
 2031  cd /etc/X11/xorg.conf.d
 2032  ll
 2033  sudo touch 00-touchpad.conf
 2034  plat
 2035  cd adapters/NEW_MCX
 2036  ll
 2037  cd interactive_adapter
 2038  ll
 2039  ag -i "strategy" 
 2040  sudo touch 00-pointer.conf
 2041  ll
 2042  vim 00-touchpad.conf
 2043  sudo vim 00-touchpad.conf
 2044  sudo vim 00-pointer.conf
 2045  sudo mv -f 00-keyboard.conf 30-keyboard.conf
 2046  sudo mv -f 00-touchpad.conf 30-touchpad.conf
 2047  sudo mv -f 00-pointer.conf 30-pointer.conf
 2048  ll
 2049  sudo systemctl reboot
 2050  i3-msg move workspace to output eDP-1
 2051  i3-msg move workspace to output HDMI-2
 2052  clear
 2053  tmux new -s muxy
 2054  nvim .
 2055  cfg
 2056  gst
 2057  gprav
 2058  gst
 2059  nvim .
 2060  exit
 2061  gst
 2062  nvim .
 2063  gst
 2064  nvim .
 2065  exit
 2066  nvim .
 2067  exit
 2068  nvim .
 2069  exit
 2070  nvim .
 2071  clear
 2072  fg
 2073  nvim .
 2074  exit
 2075  eixt
 2076  exit
 2077  clear
 2078  git status
 2079  gst
 2080  git push --force-with-lease origin HEAD
 2081  gprav
 2082  exit
 2083  cctx
 2084  nvim .
 2085  cctx
 2086  \t./run.py --source ~/files/projects/Elaeocarpus/applications/nse_tbt_recovery_standalone --output ~/files/learn/codectx_out/tbt_recov.txt
 2087  cctxo
 2088  nvim .
 2089  tmux attach -t muxy
 2090  gst
 2091  gprav
 2092  nvim .
 2093  cd build
 2094  cmake --build .
 2095  make
 2096  cmake --build .
 2097  cd applications/nse_tbt_recovery_standalone
 2098  ll
 2099  \t\t\tscp tbt_recovery prod@192.168.101.168:/home/prod/nse_recovery/standalone/tbt_recovery_20250207
 2100  vim 00-touchpad.conf
 2101  cd
 2102  nsep168
 2103  nsep114
 2104  alias nsep114
 2105  ssh piranha@192.168.101.12
 2106  ssh prod@192.168.101.12
 2107  nsep168
 2108  prodlg
 2109  nvim .
 2110  alias nsep114
 2111  ssh prod@192.168.101.241
 2112  nvim .
 2113  source ~/.zshrc
 2114  nsep241
 2115  alias nsep168
 2116  \tscp prod@192.168.101.168:/home/prod/nse_recovery/standalone/tbt_recovery_2025-02-07.log .
 2117  gst
 2118  ll
 2119  gst
 2120  docker image ls
 2121  docker image rm be5cadccd6ff   
 2122  docker container ls
 2123  cctx
 2124  ll
 2125  \t\t./run.py --source ~/files/projects/Elaeocarpus/ --output ~/files/learn/codectx_out/elaeo.txt
 2126  cctx
 2127  nvim .
 2128  \t\t./run.py --source ~/files/projects/Elaeocarpus/ --output ~/files/learn/codectx_out/elaeo.txt
 2129  cctxo
 2130  nvim .
 2131  elaeo
 2132  cd build
 2133  cmake --build .
 2134  pacman -h
 2135  pacman -Q -h
 2136  pacman -Ql
 2137  pacman -Ql -h
 2138  pacman -h
 2139  pacman -Dh
 2140  pacman -h
 2141  pacman -Fh
 2142  gst
 2143  gprav
 2144  nvim .
 2145  clear
 2146  gst
 2147  nvim .
 2148  git status
 2149  gd
 2150  gst
 2151  glog
 2152  gst
 2153  ga Dockerfile dockerfiles/
 2154  gst
 2155  git commit --amend
 2156  git fetch -a
 2157  git branch | grep akhil
 2158  git checkout akhil/mcx_symmetric_encryption
 2159  cd adapters/NEW_MCX/interactive_adapter
 2160  ag -i config
 2161  ag -i config -l
 2162  mcxt
 2163  pwd
 2164  ag -i strategy_id
 2165  ag -i strategy_id -l
 2166  ag -i exchange_strategy_id 
 2167  ag -i strategy_sequence
 2168  gd
 2169  gst
 2170  cd ..
 2171  gst
 2172  gd
 2173  gst
 2174  git restore adapters/MCX/
 2175  gst
 2176  gd
 2177  rsyncplatalt
 2178  exit
 2179  dev132
 2180  nvim .
 2181  ag -i recovery_start
 2182  pwd
 2183  ag -i recovery_start
 2184  ag -i recovery_end
 2185  gst
 2186  gd
 2187  alias | grep rsync
 2188  rsyncpqralt
 2189  clear
 2190  nvim .
 2191  gst
 2192  git status
 2193  gd
 2194  clear
 2195  git status
 2196  git diff
 2197  git status
 2198  gst
 2199  git status
 2200  git diff
 2201  glog
 2202  clear
 2203  gd
 2204  gst
 2205  git diff
 2206  gd
 2207  git status
 2208  nvim .
 2209  clear
 2210  ls -lart
 2211  git status
 2212  gst
 2213  clear
 2214  nvim .
 2215  gdt
 2216  gst
 2217  git restore lazyvim/.config/nvim/lazyvim.json
 2218  gst
 2219  nvim .
 2220  clear
 2221  git status
 2222  nvim .
 2223  i3-msg move workspace to output HDMI-2
 2224  exit
 2225  ranger
 2226  nvim .
 2227  cd tmux/
 2228  ll
 2229  tmux kill-session -t muxy
 2230  tmux server-info
 2231  tmux new -s muxy
 2232  cfg
 2233  nvim .
 2234  cfg
 2235  git status
 2236  git restore tmux/
 2237  gst
 2238  git add lazyvim/ setup.sh
 2239  gst
 2240  glog
 2241  git commit -m "[lazyvim] plugin update"
 2242  gprav && git push --force-with-lease origin HEAD
 2243  pacman -Syu
 2244  sudo pacman -Syu
 2245  clear
 2246  TqTfifiiclear
 2247  q qqjiiiclear
 2248  clear
 2249  sudo pacman -Syu
 2250  clear
 2251  ll
 2252  tmux ls
 2253  tmux attach -t muxy
 2254  tmux new -s muxy
 2255  clear
 2256  git status
 2257  clear
 2258  ranger
 2259  notes
 2260  gst
 2261  gprav
 2262  systemctl status openvpn-client
 2263  sudo pacman -S openvpn
 2264  ranger
 2265  sudo systemctl start openvpn-client@Blr-office-UDP4-1194-config.ovpn
 2266  systemctl status openvpn-client@Blr-office-UDP4-1194-config.ovpn.service
 2267  sudo ufw allow openvpn
 2268  sudo systemctl start openvpn-client@Blr-office-UDP4-1194-config.ovpn
 2269  systemctl status openvpn-client@Blr-office-UDP4-1194-config.ovpn.service
 2270  sudo cp ~/files/ovpn_cfg/Blr-office-UDP4-1194-config.ovpn /etc/openvpn/client
 2271  cd /etc/openvpn/client
 2272  sudo cd /etc/openvpn/client
 2273  cd /etc/openvpn
 2274  ll
 2275  cd client
 2276  ll
 2277  sudo cd client
 2278  sudo systemctl start openvpn-client@Blr-office-UDP4-1194-config.ovpn
 2279  systemctl status openvpn-client@Blr-office-UDP4-1194-config.ovpn.service
 2280  pacman -S networkmanager-openvpn
 2281  sudo pacman -S networkmanager-openvpn
 2282  sudo systemctl restart NetworkManager
 2283  nmcli connection show
 2284  nmcli connection show Blr-office-UDP4-1194-config
 2285  nmcli connection up Blr-office-UDP4-1194-config
 2286  journalctl -xe NM_CONNECTION=6024e9da-a787-4e8f-805f-1cab74693241 + NM_DEVICE=wlp0s20f3
 2287  clear
 2288  sudo systemctl restart NetworkManager
 2289  sudo systemctl restart dbus
 2290  pacman -Syu
 2291  sudo
 2292  sudo pacman -Syu
 2293  clear
 2294  sudo systemctl reboot
 2295  sudo shutdown -h now
 2296  i3-msg move workspace to output HDMI-2
 2297  clear
 2298  nmcli connection up Blr-office-UDP4-1194-config
 2299  clear
 2300  tmux new -s muxy
 2301  nvim .
 2302  gst
 2303  gpraf
 2304  gprav
 2305  notes
 2306  clear
 2307  gprav
 2308  nvim .
 2309  clear
 2310  git status
 2311  gd
 2312  history | grep nmcli
 2313  clear
 2314  elaeo
 2315  gst
 2316  gprav
 2317  clear
 2318  nvim .
 2319  clear
 2320  plat
 2321  gst
 2322  gprav
 2323  journalctl -xe NM_CONNECTION=6024e9da-a787-4e8f-805f-1cab74693241 + NM_DEVICE=wlp0s20f3
 2324  clear
 2325  gprav
 2326  nvim .
 2327  clear
 2328  gst
 2329  cd build
 2330  cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=On ..
 2331  cp compile_commands.json ..
 2332  nvim .
 2333  git status
 2334  nvim .
 2335  exit
 2336  gst
 2337  git add lua/
 2338  gst
 2339  git commit --amend
 2340  clear
 2341  cleara
 2342  clear
 2343  platalt
 2344  git status
 2345  gd
 2346  git diff > strategy_sequence.patch
 2347  mv strategy_sequence.patch ~/files/learn/
 2348  cd ~/files/learn/
 2349  mkdir code-patches
 2350  mv strategy_sequence.patch code-patches
 2351  source ~/.zshrc
 2352  clear
 2353  ll
 2354  patch
 2355  which patch
 2356  patch -h
 2357  patch --help
 2358  patches
 2359  platalt
 2360  git status
 2361  ll
 2362  history | grep journ
 2363  clear
 2364  nsep168
 2365  nmcli connection up Blr-office-UDP4-1194-config
 2366  clear
 2367  prodlg
 2368  nvim .
 2369  git status
 2370  clear
 2371  tmux ls
 2372  tmux attach -t muxy
 2373  git status
 2374  dev132
 2375  cp -r applications/asiotbtrecov applications/simplerecov
 2376  gst
 2377  git status
 2378  cd build
 2379  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/build/Release/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON
 2380  cmake --build .
 2381  cd applications/simplerecov
 2382  ll
 2383  scp simple_recovery prod@192.168.101.168:/home/prod/nse_recovery/standalone/simple_recovery_20250210
 2384  nsep168
 2385  systemctl status openvpn-client@Blr-office-UDP4-1194-config.ovpn.service
 2386  clear
 2387  nsep168
 2388  mcxp12 
 2389  ssh sk@132.1.16.102
 2390  nmcli connection down Algoquant
 2391  nmcli connection up Algoquant
 2392  ip a
 2393  nsep168
 2394  exit
 2395  scp simple_recovery prod@192.168.101.168:/home/prod/nse_recovery/standalone/simple_recovery_20250210
 2396  nsep168
 2397  cd -
 2398  cmake --build .
 2399  cd -
 2400  scp simple_recovery prod@192.168.101.168:/home/prod/nse_recovery/standalone/simple_recovery_20250210_01
 2401  git status
 2402  cd -
 2403  cmake --build .
 2404  \tscp simple_recovery prod@192.168.101.168:/home/prod/nse_recovery/standalone/simple_recovery_20250210_02
 2405  cd -
 2406  \tscp simple_recovery prod@192.168.101.168:/home/prod/nse_recovery/standalone/simple_recovery_20250210_02
 2407  nsep241
 2408  cd -
 2409  cmake --build .
 2410  cd -
 2411  ll
 2412  \t\tscp simple_recovery prod@192.168.101.168:/home/prod/nse_recovery/standalone/simple_recovery_20250210_03
 2413  nc -zv 172.28.124.30 10990
 2414  cd -
 2415  cmake --build .
 2416  cd -
 2417  \t\t\tscp simple_recovery prod@192.168.101.168:/home/prod/nse_recovery/standalone/simple_recovery_20250210_04
 2418  ll
 2419  cd -
 2420  ll
 2421  cmake --build .
 2422  cd -
 2423  \t\t\tscp simple_recovery prod@192.168.101.168:/home/prod/nse_recovery/standalone/simple_recovery_20250210_05
 2424  cd -
 2425  cmake --build .
 2426  cd -
 2427  \t\t\tscp simple_recovery prod@192.168.101.168:/home/prod/nse_recovery/standalone/simple_recovery_20250210_05
 2428  \t\t\tscp simple_recovery prod@192.168.101.168:/home/prod/nse_recovery/standalone/simple_recovery_20250210_06
 2429  cd -
 2430  cmake --build .
 2431  cd -
 2432  \t\t\t\tscp simple_recovery prod@192.168.101.168:/home/prod/nse_recovery/standalone/simple_recovery_20250210_07
 2433  cd build
 2434  cmake --build .
 2435  cd applications/simplerecov
 2436  \t\t\t\tscp simple_recovery prod@192.168.101.168:/home/prod/nse_recovery/standalone/simple_recovery_20250210_08
 2437  pwd
 2438  gst
 2439  rsyncplat
 2440  git status
 2441  cd -
 2442  cmake --build .
 2443  cd -
 2444  \t\t\t\tscp simple_recovery prod@192.168.101.168:/home/prod/nse_recovery/standalone/simple_recovery_20250210_08
 2445  \t\t\t\tscp simple_recovery prod@192.168.101.168:/home/prod/nse_recovery/standalone/simple_recovery_20250210_09
 2446  cd -
 2447  cmake --build .
 2448  cd -
 2449  \t\t\t\tscp simple_recovery prod@192.168.101.168:/home/prod/nse_recovery/standalone/simple_recovery_20250210_09
 2450  cd -
 2451  cmake --build .
 2452  cd -
 2453  \t\t\t\t\tscp simple_recovery prod@192.168.101.168:/home/prod/nse_recovery/standalone/simple_recovery_20250210_10
 2454  PWD
 2455  ll
 2456  cd adapters
 2457  ll
 2458  cd NSE
 2459  ag -i onpacketdrop
 2460  pwd
 2461  cd feed_adapter
 2462  ll
 2463  ag -i onpacketdrop
 2464  cd ..
 2465  ll
 2466  cd ..
 2467  ll
 2468  cd adapter_base/feed_adapter
 2469  ag -i onpacketdrop
 2470  cd -
 2471  ag -i update
 2472  exit
 2473  git status
 2474  cd adapters/CME/feed_adapter
 2475  ag -i recovery
 2476  alias dev62
 2477  clear
 2478  ls -lrt
 2479  git status
 2480  sudo systemctl reboot
 2481  i3-msg move workspace to output HDMI-2
 2482  exit
 2483  clear
 2484  omz update
 2485  clear
 2486  tmux attach -t muxy
 2487  tmux new -s muxy
 2488  nvim .
 2489  gst
 2490  gd
 2491  glog
 2492  gst
 2493  git add setup.sh 
 2494  git commit -m "[setup] update setup aliases."
 2495  gprav && git push --force-with-lease origin HEAD
 2496  gst
 2497  gd
 2498  nvim .
 2499  gst
 2500  git add lazyvim/
 2501  git rebase --continue
 2502  git push --force-with-lease origin HEAD
 2503  gprav
 2504  gst
 2505  gprav
 2506  fg
 2507  nvim .
 2508  gst
 2509  nvim .
 2510  gst
 2511  nvim .
 2512  dev132
 2513  nsep168
 2514  clear
 2515  nsep241
 2516  exit
 2517  fg
 2518  nvim .
 2519  rsyncplat
 2520  gst
 2521  gd
 2522  gst
 2523  cd build
 2524  cmake --build .
 2525  cd applications/simplerecov
 2526  \t\t\t\t\tscp simple_recovery prod@192.168.101.168:/home/prod/nse_recovery/standalone/simple_recovery_20250211_00
 2527  cd -
 2528  cmake --build .
 2529  cd -
 2530  \t\t\t\t\tscp simple_recovery prod@192.168.101.168:/home/prod/nse_recovery/standalone/simple_recovery_20250211_00
 2531  \t\t\t\t\tscp simple_recovery prod@192.168.101.168:/home/prod/nse_recovery/standalone/simple_recovery_20250211_01
 2532  cd -
 2533  cmake --build .
 2534  cd -
 2535  \t\t\t\t\tscp simple_recovery prod@192.168.101.168:/home/prod/nse_recovery/standalone/simple_recovery_20250211_02
 2536  cd -
 2537  cmake --build .
 2538  cd -
 2539  \t\t\t\t\t\tscp simple_recovery prod@192.168.101.168:/home/prod/nse_recovery/standalone/simple_recovery_20250211_03
 2540  cd -
 2541  cmake --build .
 2542  cd -
 2543  \t\t\t\t\t\t\tscp simple_recovery prod@192.168.101.168:/home/prod/nse_recovery/standalone/simple_recovery_20250211_04
 2544  nvim .
 2545  cd -
 2546  cmake --build .
 2547  git status
 2548  gst
 2549  git status
 2550  gd
 2551  clear
 2552  cd ../pqr
 2553  gst
 2554  rsyncpqr
 2555  cctx
 2556  \t\t\t./run.py --source ~/files/projects/platform/adapters/CME/feed_adapter --output ~/files/learn/codectx_out/cme_feedadap.log
 2557  clear
 2558  l
 2559  cctxo
 2560  ll
 2561  vim cme_feedadap.log
 2562  nvim .
 2563  cd ../platform
 2564  rsyncplat
 2565  pqr
 2566  nvim .
 2567  rsyncpqr
 2568  exit
 2569  pwd
 2570  cd adapters/CME
 2571  ll
 2572  cd feed_adapter
 2573  ll
 2574  cd src
 2575  rsyncpqr
 2576  clear
 2577  plat
 2578  git status
 2579  gd
 2580  gst
 2581  nvim .
 2582  pwd
 2583  cd adapters/CME
 2584  ag -i asio
 2585  pwd
 2586  ll
 2587  cd feed_adapter
 2588  ag -i asio -l
 2589  ag -i asio 
 2590  pwd
 2591  cd ../../NSE/feed_adapter
 2592  ll
 2593  cd test
 2594  ag -i dat
 2595  ag ".dat" -l
 2596  ag ".dat" 
 2597  ag -i data
 2598  ag -i data -l
 2599  git status
 2600  gd
 2601  exit
 2602  i3-msg move workspace to output HDMI-2
 2603  exit
 2604  clear
 2605  tmux attach -t muxy
 2606  nsep241
 2607  git status
 2608  dev132
 2609  pwd
 2610  plat
 2611  cd adapters/NSE/feed_adapter
 2612  cd build
 2613  cmake --build .
 2614  cd applications/simplerecov
 2615  \t\t\t\t\t\t\t\tscp simple_recovery prod@192.168.101.168:/home/prod/nse_recovery/standalone/simple_recovery_20250212_00
 2616  fg
 2617  nvim .
 2618  exit
 2619  cd -
 2620  cmake --build .
 2621  cd -
 2622  \t\t\t\t\t\t\t\t\tscp simple_recovery prod@192.168.101.168:/home/prod/nse_recovery/standalone/simple_recovery_20250212_01
 2623  cd -
 2624  cmake --build .
 2625  cd -
 2626  \t\t\t\t\t\t\t\t\t\tscp simple_recovery prod@192.168.101.168:/home/prod/nse_recovery/standalone/simple_recovery_20250212_02
 2627  cd -
 2628  cmake --build .
 2629  cd -
 2630  \t\t\t\t\t\t\t\t\t\t\tscp simple_recovery prod@192.168.101.168:/home/prod/nse_recovery/standalone/simple_recovery_20250212_03
 2631  cd -
 2632  cmake --build .
 2633  \t\t\t\t\t\t\t\t\t\t\t\tscp simple_recovery prod@192.168.101.168:/home/prod/nse_recovery/standalone/simple_recovery_20250212_04
 2634  pwd
 2635  clear
 2636  ll
 2637  cd adapters/NSE
 2638  ll
 2639  cd feed_adapter
 2640  ll
 2641  ag -i nsenetworkfeedreader
 2642  git status
 2643  pwd
 2644  cd ../..
 2645  git restore CME/
 2646  git restore NEW_MCX/
 2647  gst
 2648  git diff adapter_base/
 2649  gst
 2650  git restore adapter_base/
 2651  gst
 2652  gd
 2653  clear
 2654  gst
 2655  gd
 2656  gst
 2657  git add NSE/feed_adapter/
 2658  glog
 2659  gst
 2660  git commit -m "[nse_feed_adapter] remove nse specific network feed reader"
 2661  gprav 
 2662  git push --force-with-lease origin HEAD
 2663  rsyncplat
 2664  git status
 2665  rsyncplat
 2666  git status
 2667  rsyncplat
 2668  gst
 2669  rsyncplat
 2670  gst
 2671  rsyncplat
 2672  gst
 2673  rsyncplat
 2674  gst
 2675  git submodule update --init --recursive
 2676  pwd
 2677  git statsus
 2678  gst
 2679  git add NSE/
 2680  gst
 2681  git add adapter_base/
 2682  git commit -m "[nse_feed_adapter] add recovery configuration"
 2683  gst
 2684  gprav 
 2685  git push --force-with-lease origin HEADE
 2686  git push --force-with-lease origin HEAD
 2687  gst
 2688  gd
 2689  gst
 2690  git add NSE/ adapter_base/
 2691  gst
 2692  git commit --amend 
 2693  gprav 
 2694  git push --force-wtih-lease origin HEAD
 2695  gst
 2696  git push --force-with-lease origin HEAD
 2697  rsyncplat
 2698  clear
 2699  pwd
 2700  ll
 2701  pwd
 2702  ag -i handleEvent 
 2703  pwd
 2704  cd NSE/feed_adapter
 2705  ll
 2706  ag -i handleevent
 2707  ag -i handleevent include/ src
 2708  ag -i handleevent include/ src/ -l
 2709  ag -i handleevent src -l
 2710  ag -i handleevent include -l
 2711  ag -i handleevent include 
 2712  ag -i  updateLastPacketPerStream include src/
 2713  pwd
 2714  cd ../../adapter_base/feed_adapter
 2715  ag -i  updateLastPacketPerStream include src/
 2716  ag -i handleevent include 
 2717  pwd
 2718  cd -
 2719  pwd
 2720  cd -
 2721  pwd
 2722  ag -i handleevent
 2723  pwd
 2724  cd ..
 2725  ag -i handleevent
 2726  clear
 2727  ag -i handleevent
 2728  pwd
 2729  cd .-
 2730  cd -
 2731  cd ../../NSE/feed_adapter
 2732  ag -i handleevent
 2733  ag -i handleevent include src 
 2734  pwd
 2735  ag -i nsefeedwarmup
 2736  gst
 2737  pwd
 2738  ag -i registersource
 2739  clear
 2740  fg
 2741  nvim .
 2742  pwd
 2743  cd adapters/NSE/feed_adapter
 2744  ag -i onpacketdrop
 2745  gst
 2746  rsyncplat
 2747  dev132
 2748  gprav
 2749  git status
 2750  gprav
 2751  nvim .
 2752  gst
 2753  gprav
 2754  clear
 2755  pwd
 2756  git staqtus
 2757  pwd
 2758  cd adapters/NSE
 2759  ll
 2760  omz theme list
 2761  omz theme af-magic
 2762  omz theme use af-magic
 2763  ll
 2764  omz theme use clean
 2765  ll
 2766  omz theme use af-magic
 2767  omz theme set af-magic
 2768  clear
 2769  ll
 2770  cd feed_adapter
 2771  ag -i onpacketdrop
 2772  exit
 2773  clear
 2774  cctx
 2775  \t\t\t\t./run.py --source ~/files/projects/Elaeocarpus/applications/simplerecov --output ~/files/learn/codectx_out/simple_recov.log
 2776  cointop
 2777  pacman -Syu ticker
 2778  sudo pacman -Syu ticker
 2779  sudo yay -Syu ticker
 2780  yay -Syu ticker
 2781  ticker -w NET,AAPL,TSLA
 2782  pwd
 2783  ll
 2784  mkdir ticker
 2785  cd ticker
 2786  touch ticker.yaml
 2787  nvim ticker.yaml
 2788  cd ..
 2789  \t\t\tstow -d ~/files/projects/ConfigFiles -t ~ ticker
 2790  ticker
 2791  ticker -w NET,AAPL,TSLA
 2792  ticker -w NET,AAPL,TSLA,BTC
 2793  exit
 2794  gst
 2795  cd ..
 2796  gst
 2797  git add ticker/
 2798  git commit -m "[ticker] add ticker's conf to view mkt price"
 2799  gprav 
 2800  git push --force-with-lease origin HEAD
 2801  ll
 2802  cd build
 2803  cmake  -DCMAKE_EXPORT_COMPILE_COMMANDS=ON ..
 2804  cp compile_commands.json ..
 2805  ll
 2806  gst
 2807  pwd
 2808  cd ../../..
 2809  gst
 2810  git add adapters/NSE/ adapters/adapter_base/ 
 2811  git commit -m "[nse_feed_adapter] add config and reocvery manager" 
 2812  gprav
 2813  systemctl status openvpn-client@Blr-office-UDP4-1194-config.ovpn.service
 2814  sudo systemctl start openvpn-client@Blr-office-UDP4-1194-config.ovpn
 2815  clear
 2816  sudo systemctl reboot
 2817  nsep168
 2818  i3-msg move workspace to output HDMI-2
 2819  clear
 2820  exit
 2821  tmux new -s muxy
 2822  nvim .
 2823  gst
 2824  gprav 
 2825  git push --force-with-lease origin HEAD
 2826  gst
 2827  i3-msg move workspace to output HDMI-2
 2828  i3-msg move workspace to output eDPI-1
 2829  i3-msg move workspace to output eDPI-2
 2830  i3-msg move workspace to output eDP-1
 2831  EXIT
 2832  exit
 2833  i3-msg move workspace to output eDP-1
 2834  i3-msg move workspace to output HDMI-2
 2835  clear
 2836  sudo systemctl reboot
 2837  i3-msg move workspace to output HDMI-2
 2838  exit
 2839  clear
 2840  tmux ls
 2841  tmux new -s muxy
 2842  nvim .
 2843  cleasr
 2844  sudo systemctl start openvpn-client@Blr-office-UDP4-1194-config.ovpn
 2845  history | grep open
 2846  journalctl -xeu openvpn-client@Blr-office-UDP4-1194-config.ovpn.service
 2847  i3-msg move workspace to output eDP-1
 2848  history | grep open
 2849  sudo cp ~/files/ovpn_cfg/Blr-office-UDP4-1194-config.ovpn /etc/openvpn/client
 2850  cd /etc/openvpn/client
 2851  ll
 2852  sudo cd /etc/openvpn/client
 2853  ll
 2854  cd /etc/open
 2855  cd /etc/openvpn
 2856  ll
 2857  sudo usermod -aG network akhil
 2858  sudo chmod 750 /etc/openvpn/client\nsudo chown openvpn:network /etc/openvpn/client
 2859  sudo chmod 640 /etc/openvpn/client/*.conf\nsudo chown openvpn:network /etc/openvpn/client/*.conf
 2860  sudo chmod 640 /etc/openvpn/client/*\nsudo chown openvpn:network /etc/openvpn/client/*
 2861  sudo chmod 640 /etc/openvpn/client/
 2862  sudo cp ~/files/ovpn_cfg/Blr-office-UDP4-1194-config.ovpn /etc/openvpn/client
 2863  sudo systemctl start openvpn-client@Blr-office-UDP4-1194-config.ovpn
 2864  sudo ufw allow openvpn
 2865  sudo systemctl start openvpn-client@Blr-office-UDP4-1194-config.ovpn
 2866  exit
 2867  clear
 2868  sudo systemctl start openvpn-client@Blr-office-UDP4-1194-config.ovpn
 2869  journalctl -xeu openvpn-client@Blr-office-UDP4-1194-config.ovpn.service
 2870  sudo systemctl start openvpn-client@Blr-office-UDP4-1194-config
 2871  cd /etc/openvpn/client
 2872  cd ..
 2873  cd /etc/openvpn
 2874  cd client
 2875  ll
 2876  cd client
 2877  sudo cd client
 2878  su -
 2879  setstatus
 2880  sestatus
 2881  aa-status
 2882  sudo systemctl restart openvpn-client@Blr-office-UDP4-1194-config\nsudo systemctl status openvpn-client@Blr-office-UDP4-1194-config
 2883  ll
 2884  sudo systemctl reboot
 2885  sudo systemctl restart openvpn-client@Blr-office-UDP4-1194-config 
 2886  ll
 2887  sudo systemctl restart openvpn-client@Blr-office-UDP4-1194-config 
 2888  journalctl -xeu openvpn-client@Blr-office-UDP4-1194-config.ovpn.service
 2889  journalctl -xeu openvpn-client@Blr-office-UDP4-1194-config.service
 2890  tmux ls
 2891  tmux new -s muxy
 2892  nvim .
 2893  cleasr
 2894  clar
 2895  gst
 2896  plat
 2897  gst
 2898  git push --force-with-lease origin HEAD
 2899  gprav
 2900  clear
 2901  gst
 2902  git add CMakeLists.txt dockerfiles applications/ libraries/ tools/ playground/
 2903  gst
 2904  git add Dockerfile
 2905  gst
 2906  glog
 2907  git commit -m "[app|lib|docker] incremental changes & restructuring"
 2908  gprav && git push --force-with-lease origin HEAD
 2909  sudo pacman -Syu
 2910  yay -Syu
 2911  gst
 2912  sudo systemctl start openvpn-client@Blr-office-UDP4-1194-config
 2913  journalctl -xeu openvpn-client@Blr-office-UDP4-1194-config.service
 2914  journalctl -xeu openvpn-client@Blr-office-UDP4-1194-config.service | less
 2915  journalctl -xeu openvpn-client@Blr-office-UDP4-1194-config.service | zless
 2916  journalctl -xeu openvpn-client@Blr-office-UDP4-1194-config.service | vim
 2917  journalctl -xeu openvpn-client@Blr-office-UDP4-1194-config.service | cat
 2918  cd /etc/openvpn/client
 2919  ll
 2920  su -
 2921  sudo systemctl restart openvpn-client@Blr-office-UDP4-1194-config
 2922  sudo systemctl status openvpn-client@Blr-office-UDP4-1194-config
 2923  sudo systemctl stop openvpn-client@Blr-office-UDP4-1194-config
 2924  cleasr
 2925  w
 2926  plat
 2927  cd build
 2928  cmake -DCMAKE_BUILD_TYPE=Debug ..
 2929  cmake -DCMAKE_BUILD_TYPE=Debug DCMAKE_EXPORT_COMPILE_COMMANDS=On ..
 2930  cp -f compile_commands.json ..
 2931  cd ..
 2932  ll
 2933  nvim .
 2934  clear
 2935  git status
 2936  git push --force-with-lease origin HEAD
 2937  clear
 2938  i3-msg move workspace to output HDMI-2
 2939  clear
 2940  tmux new -s muxy
 2941  tmux attach -t muxy
 2942  nvim .
 2943  i3-msg move workspace to output HDMI-2
 2944  htop
 2945  clear
 2946  git status
 2947  gprav
 2948  clear
 2949  nvim .
 2950  clear
 2951  tree
 2952  ll
 2953  sudo systemctl reboot
 2954  i3-msg move workspace to output HDMI-2
 2955  exit
 2956  clear
 2957  sudo systemctl status openvpn-client@Blr-office-UDP4-1194-config
 2958  sudo systemctl start openvpn-client@Blr-office-UDP4-1194-config
 2959  clear
 2960  sudo pacman -Syu
 2961  cleasr
 2962  yay -Syu
 2963  clear
 2964  ll
 2965  ls -lart
 2966  git status
 2967  gst
 2968  ll
 2969  omz update
 2970  clear
 2971  tmux new -s muxy
 2972  nvim .
 2973  cfg
 2974  gst
 2975  gprav
 2976  ll
 2977  gst
 2978  gprav
 2979  clear
 2980  nvim .
 2981  ll
 2982  proj
 2983  learn
 2984  git clone https://github.com/catppuccin/htop.git
 2985  cd
 2986  cd .tmux
 2987  ll
 2988  cd plugins
 2989  ll
 2990  mkdir catppuccin
 2991  cd catppuccin
 2992  git clone git@github.com:catppuccin/tmux.git
 2993  ll
 2994  cd tmux
 2995  ll
 2996  cd ..
 2997  ll
 2998  cd ..
 2999  ll
 3000  cd tmux-resurrect
 3001  ll
 3002  cd ..
 3003  ll
 3004  rm -rf catppuccin
 3005  ll
 3006  cfg
 3007  nvim .
 3008  GST
 3009  gst
 3010  cd
 3011  h
 3012  ll
 3013  cd .tmux
 3014  ll
 3015  cd plugins
 3016  ll
 3017  cleaar
 3018  ll
 3019  ls -lart
 3020  cctx
 3021  \t\t\t\t\t./run.py --source ~/files/projects/ConfigFiles/tmux/ --output ~/files/learn/codectx_out/tmuxconf.txt
 3022  cd -
 3023  nvim .
 3024  tmux new -s muxy
 3025  nvim .
 3026  cd
 3027  cd .tmux
 3028  ll
 3029  cd plugins
 3030  ll
 3031  cd tmux-battery
 3032  ll
 3033  tmux new -s muxy
 3034  nvim .
 3035  pacman -Syu xsl
 3036  pacman -Syu xsel
 3037  sudo pacman -Syu xsel
 3038  pacman -Syu xsel
 3039  clear
 3040  \t\t\t\tstow -d ~/files/projects/ConfigFiles -t ~ tmux
 3041  cd
 3042  ll
 3043  ls -lart
 3044  unlink .tmux.conf 
 3045  unlink .tmux.conf.local
 3046  ll
 3047  ls -lart
 3048  ls -lrt
 3049  cd .config
 3050  ll
 3051  cd tmux
 3052  ll
 3053  tmux new -s muxy
 3054  sudo systemctl reboot
 3055  tmux
 3056  exit
 3057  cd .config
 3058  ll
 3059  cd tmux
 3060  ll
 3061  cfg
 3062  ll
 3063  mv tmux/.config/tmux/.tmux.conf tmux_bkp
 3064  nvim .
 3065  \t\t\t\tstow -d ~/files/projects/ConfigFiles -t ~ tmux
 3066  cd
 3067  ll
 3068  cd .config
 3069  unlink tmux
 3070  ll
 3071  clear
 3072  exit
 3073  tmux new -s muxy
 3074  nvim .
 3075  tmux
 3076  nvim .
 3077  nvim .
 3078  sudo systemctl reboot
 3079  i3-msg move workspace to output HDMI-2
 3080  clear
 3081  exit
 3082  tmux
 3083  nvim .
 3084  clear
 3085  plat
 3086  gst
 3087  nvim .
 3088  exit
 3089  clear
 3090  exit
 3091  clear
 3092  fg
 3093  cfg
 3094  nvim .
 3095  cd
 3096  cd .tmux/plugins/tpm/bin
 3097  ./clean_plugins
 3098  cd .config
 3099  cd ..
 3100  cd .tmux/plugins/tpm
 3101  ./clean_plugins
 3102  cd bin
 3103  ./clean_plugins
 3104  cd
 3105  tmux new -s muxy
 3106  nvim .
 3107  curl -LO --output-dir ~/.config/alacritty https://github.com/catppuccin/alacritty/raw/main/catppuccin-mocha.toml
 3108  clear
 3109  tmux
 3110  tmux ls
 3111  tmux attach -t muxy
 3112  clear
 3113  exit
 3114  clear
 3115  tmux ls
 3116  tmux attach -t muxy
 3117  cd
 3118  cd .config
 3119  ll
 3120  cd qt5ct
 3121  ll
 3122  cd colors
 3123  ll
 3124  touch catppuccin-mocha-mauve.conf
 3125  vim catppuccin-mocha-mauve.conf
 3126  yay -S catppuccin-gtk-theme-macchiato
 3127  sudo pacman -Syu lxsession lxsession-gtk3
 3128  sudo pacman -Syu lxsession-gtk3
 3129  pacman -h
 3130  pacman -R lxsession-gtk3
 3131  sudo pacman -R lxsession-gtk3
 3132  sudo pacman -Syu lxsession
 3133  cd
 3134  learn
 3135  git clone https://github.com/catppuccin/calibre.git\ncd calibre
 3136  ll
 3137  cd themes
 3138  ll
 3139  cd ..
 3140  make install FLAVOR=mocha
 3141  cd
 3142  ll
 3143  learn
 3144  git clone git@github.com:catppuccin/thunderbird.git
 3145  clear
 3146  ll
 3147  rm -rf thunderbird calibre 
 3148  cfg
 3149  clear
 3150  exit
 3151  clear
 3152  gst
 3153  git add alacritty/ i3/ i3status/ lazyvim/ rofi/ tmux/ 
 3154  gst
 3155  git commit -m "[alac|lazyvim|i3|tmux|rofi] update to use catppuccin theme"
 3156  gprav 
 3157  git push --force-with-lease origin HEAD
 3158  clear
 3159  tmux ls
 3160  tmux
 3161  nvim .
 3162  clear
 3163  nvim .
 3164  plat
 3165  cfg
 3166  nvim .
 3167  clear
 3168  nvim .
 3169  tmux new -s 0
 3170  nvim .
 3171  cd
 3172  cleasr
 3173  sudo pacman -Syu
 3174  yay -Syu
 3175  yay -R
 3176  yay -R -h
 3177  clear
 3178  tmux ls
 3179  tmux new -s muxy
 3180  clear
 3181  plat
 3182  ll
 3183  ls -lart
 3184  nvim .
 3185  sudo systemctl start openvpn-client@Blr-office-UDP4-1194-config
 3186  sudo systemctl status openvpn-client@Blr-office-UDP4-1194-config
 3187  clear
 3188  btm
 3189  exit
 3190  htop
 3191  clear
 3192  btm
 3193  clesra
 3194  cd
 3195  cd .config/bottom
 3196  ll
 3197  vim bottom.toml
 3198  cd .con
 3199  cd .config
 3200  nvim .
 3201  btm
 3202  clear
 3203  pacman -R code
 3204  sudo pacman -R code
 3205  yay -Syu code
 3206  yay -R code
 3207  yay -Syu vscode
 3208  clear
 3209  git status
 3210  git branch
 3211  gd
 3212  gst
 3213  gd
 3214  gst
 3215  git branch
 3216  git stash list
 3217  git status
 3218  git autostash
 3219  git checkout Master_2.0 --autostash
 3220  git checkout Master_2.0 
 3221  git stash
 3222  git checkout Master_2.0 
 3223  gprav
 3224  clear
 3225  nvim .
 3226  cfg
 3227  nvim .
 3228  prodlg
 3229  ll
 3230  nvim .
 3231  ag -i NetworkFeedReader --cpp -l
 3232  plat
 3233  ag -i NetworkFeedReader --cpp -l
 3234  ag -i NetworkFeedReader --cpp 
 3235  pwd
 3236  ag -i NetworkFeedReader 
 3237  ag -i NetworkFeedReader  -l
 3238  i3-msg move workspace to output HDMI-2
 3239  pwd
 3240  clear
 3241  pwd
 3242  cd adapters/adapter_base/feed_adapter
 3243  ag -i source -l
 3244  ag -i eventsource -l 
 3245  ag -i eventsource 
 3246  notes
 3247  nvim .
 3248  exit
 3249  i3-msg move workspace to output HDMI-2
 3250  pwd
 3251  cd ../../../
 3252  ll
 3253  cd engine
 3254  ll
 3255  ag -i recovery -l
 3256  ag -i recovery 
 3257  pwd
 3258  ll
 3259  ag -i recov -l
 3260  clear
 3261  cd
 3262  nsep168
 3263  prodlg
 3264  ll
 3265  mkdir platform_configs/
 3266  cd platform_configs
 3267  alias nsep168
 3268  scp -R  prod@192.168.101.168:/home/prod/var/sqtpl/platfomr/cfg/engine_11/* .
 3269  scp -R  prod@192.168.101.168:/home/prod/var/sqtpl/platfomr/cfg/engine_11 .
 3270  scp -R  prod@192.168.101.168:/home/prod/var/sqtpl/platfomr/cfg/engine_11/engine_11.xml .
 3271  scp -R  prod@192.168.101.168:/home/prod/var/sqtpl/platform/cfg/engine_11/engine_11.xml .
 3272  scp -R  prod@192.168.101.168:/home/prod/var/sqtpl/platform/cfg/engine_11/feed_adapter_live.xml .
 3273  nvim .
 3274  scp -R  prod@192.168.101.168:/home/prod/var/sqtpl/platform/bin/test_start.sh .
 3275  nvim .
 3276  cctx
 3277  \t\t\t\t\t\t./run.py --source ~/files/projects/platform/feed_publisher  --output ~/files/learn/codectx_out/feed_pub.log
 3278  git status
 3279  gd
 3280  gst
 3281  cd ..
 3282  pwd
 3283  gst
 3284  git restore adapters/ infra/
 3285  gst
 3286  cd build
 3287  cmake -DCMAKE_BUILD_TYPE=Debug DCMAKE_EXPORT_COMPILE_COMMANDS=On ..
 3288  cp compile_commands.json ..
 3289  nvim .
 3290  rsyncplat
 3291  dev132
 3292  scp akhil@132.1.16.132:/home/akhil/files/projects/pqr/feed_adap_build.txt .
 3293  rsyncplat
 3294  \ti3-msg move workspace to output eDP-1
 3295  exit
 3296  clear
 3297  dev132
 3298  scp akhil@132.1.16.132:/home/akhil/files/projects/pqr/feed_adap_build.txt .
 3299  glog
 3300  CLEAR
 3301  clear
 3302  git diff 32182792 HEAD> recovery.patch
 3303  cleasr
 3304  sudo pacman -Syu
 3305  yay -Syu 
 3306  clear
 3307  pwd
 3308  nvim .
 3309  clear
 3310  nsep168
 3311  clear
 3312  fg
 3313  nvim .
 3314  cd build
 3315  cmake -DCMAKE_BUILD_TYPE=Debug DCMAKE_EXPORT_COMPILE_COMMANDS=On ..
 3316  cd ..
 3317  rm -rf compile_commands.json
 3318  cd -
 3319  cp compile_commands.json ..
 3320  clear
 3321  gst
 3322  nvim .
 3323  clear
 3324  nsep241
 3325  git status
 3326  glog
 3327  gst
 3328  git add adapters/ infra/
 3329  gst
 3330  git commit -m "[nse_feed_adap] final changes for the build"
 3331  gprav 
 3332  sudo systemctl status openvpn-client@Blr-office-UDP4-1194-config
 3333  gprav 
 3334  git push --force-with-lease origin HEAD
 3335  sudo systemctl status openvpn-client@Blr-office-UDP4-1194-config
 3336  git push --force-with-lease origin HEAD
 3337  clear
 3338  sudo systemctl stop  openvpn-client@Blr-office-UDP4-1194-config
 3339  sudo systemctl status openvpn-client@Blr-office-UDP4-1194-config
 3340  sudo systemctl start openvpn-client@Blr-office-UDP4-1194-config
 3341  sudo systemctl status openvpn-client@Blr-office-UDP4-1194-config
 3342  sudo systemctl start openvpn-client@Blr-office-UDP4-1194-config
 3343  ll
 3344  clear
 3345  nvim .
 3346  sudo systemctl start openvpn-client@Blr-office-UDP4-1194-config
 3347  systemctl status openvpn-client@Blr-office-UDP4-1194-config                                                                                                                                            akhil@archlinux
 3348  sudo systemctl enable openvpn-client@Blr-office-UDP4-1194-config                                                                                                                                            akhil@archlinux
 3349  sudo systemctl start openvpn-client@Blr-office-UDP4-1194-config
 3350  clear
 3351  nvim .
 3352  clear
 3353  ll
 3354  r
 3355  ll
 3356  exit
 3357  fg
 3358  dev132
 3359  scp akhil@132.1.16.132:/home/akhil/files/projects/pqr/feed_adap_build.txt .
 3360  pacman -Syu window-picker
 3361  sudo pacman -Syu window-picker
 3362  sudo pacman -S picker
 3363  sudo pacman -S window
 3364  pacman -h
 3365  pacman -Q picker
 3366  pacman -Qh
 3367  pacman -Qs picker
 3368  pacman -Qs window
 3369  pacman -Qs window | grep picker
 3370  yay -Qs picker
 3371  yay -Qs window | grep picker
 3372  clera
 3373  rsyncplat
 3374  scp akhil@132.1.16.132:/home/akhil/files/projects/pqr/feed_adap_build.txt .
 3375  gst
 3376  cleasr
 3377  fg
 3378  cleasr
 3379  fg
 3380  nvim .
 3381  fg
 3382  nvim .
 3383  scp akhil@132.1.16.132:/home/akhil/files/projects/pqr/feed_adap_build.txt .
 3384  rm -rf build
 3385  rsyncplat
 3386  gst
 3387  gd
 3388  gst
 3389  gd adapters/adapter_base/
 3390  gst
 3391  rsyncplat
 3392  scp akhil@132.1.16.132:/home/akhil/files/projects/pqr/feed_adap_build.txt .
 3393  glog
 3394  git diff 32182792 HEAD> recovery.patch
 3395  gst
 3396  rsyncplat
 3397  git diff 32182792 HEAD> recovery.patch
 3398  rsyncplat
 3399  scp akhil@132.1.16.132:/home/akhil/files/projects/pqr/feed_adap_build.txt .
 3400  gst
 3401  git diff  32182792 > recovery.patch
 3402  ll
 3403  cat compile_commands.json
 3404  fg
 3405  nvim .
 3406  fg
 3407  cleasr
 3408  exit
 3409  fg
 3410  nvim .
 3411  rsyncplat
 3412  scp akhil@132.1.16.132:/home/akhil/files/projects/pqr/feed_adap_build.txt .
 3413  rsyncplat
 3414  scp akhil@132.1.16.132:/home/akhil/files/projects/pqr/feed_adap_build.txt .
 3415  ag -i readexact
 3416  cctxo
 3417  vim infra_tcp.txt
 3418  rsyncplat
 3419  gst
 3420  git add adapters/
 3421  gst
 3422  git commit -m "[nse_feed_adapter] update nserecovery_mgr"
 3423  git push --force-with-lease origin HEAD
 3424  gprav
 3425  nsep168
 3426  ll
 3427  prodlg
 3428  ll
 3429  cd platform_configs
 3430  ll
 3431  scp -r feed_adapter_live.xml  prod@192.168.101.168:/home/prod/var/sqtpl/platform/cfg/engine_11/
 3432  pwd
 3433  notes
 3434  nvim .
 3435  fg
 3436  ps -ef | grep nvim
 3437  cd runtime_analysis_nsefeed_recovery
 3438  \tscp  prod@192.168.101.168:/home/prod/var/sqtpl/platform/bin/engine_11/backtrace.log .
 3439  \tscp  prod@192.168.101.168:/home/prod/var/sqtpl/platform/bin/engine_11/backtrace00.log .
 3440  glog
 3441  nvim .
 3442  fg
 3443  nvim .
 3444  fg
 3445  nvim .
 3446  cfg
 3447  gprav
 3448  gst
 3449  gd
 3450  gst
 3451  gd
 3452  gst
 3453  git restore tmux/
 3454  rm -rf tmux
 3455  git restore tmux/
 3456  gst
 3457  exit
 3458  cfg
 3459  nvim .
 3460  gst
 3461  gd
 3462  gd --staged
 3463  cleasr
 3464  gst
 3465  git checkout tmux/
 3466  git checkout -f tmux/
 3467  gst
 3468  git add tmux/.tmux.conf
 3469  gst
 3470  gd
 3471  git restore --staged tmux/
 3472  gst
 3473  git restore tmux/.tmux.conf
 3474  gst
 3475  git commit -m "[lazyvim] add window picker extra"
 3476  gprav && git push --force-with-lease origin HEAD
 3477  sudo systemctl reboot
 3478  \t\ti3-msg move workspace to output HDMI-2
 3479  ll
 3480  cfg
 3481  gprav
 3482  cd
 3483  omz update
 3484  tmux new -s muxy
 3485  nvim .
 3486  cleasr
 3487  nvim .
 3488  cleasr
 3489  nvim .
 3490  cleasr
 3491  exit
 3492  nvim .
 3493  bmt
 3494  btm
 3495  bottom
 3496  exit
 3497  nvim .
 3498  exit
 3499  gd
 3500  nvim .
 3501  btm
 3502  exit
 3503  nvim .
 3504  cleasr
 3505  exit
 3506  cleasr
 3507  platalt
 3508  gst
 3509  git fetch origin && git rebase origin/Master_2.0
 3510  systemctl status openvpn-client@Blr-office-UDP4-1194-config                                                                                                                                            akhil@archlinux
 3511  sudo systemctl start openvpn-client@Blr-office-UDP4-1194-config
 3512  systemctl status openvpn-client@Blr-office-UDP4-1194-config                                                                                                                                            akhil@archlinux
 3513  sudo systemctl start openvpn-client@Blr-office-UDP4-1194-config
 3514  systemctl status openvpn-client@Blr-office-UDP4-1194-config                                                                                                                                            akhil@archlinux
 3515  git fetch origin && git rebase origin/Master_2.0
 3516  ll
 3517  clear
 3518  fg
 3519  nvim .
 3520  tmux new -s test_session
 3521  exit
 3522  tmux attach -t muxy
 3523  clear
 3524  ll
 3525  fg
 3526  exit
 3527  tmux attach -t muxy
 3528  pwd
 3529  ag -i add_executable -G CMakeLists.txt -l
 3530  ag -i add_executable -G CMakeLists.txt 
 3531  ag -h
 3532  ag -h > ag_help.man
 3533  nvim .
 3534  ag -i add_executable -G CMakeLists.txt  -p */tests/* -l
 3535  ag -i add_executable -G CMakeLists.txt  -p test/
 3536  ag -i */test/*  add_executable -G CMakeLists.txt 
 3537  ag add_executable -i */test/*   -G CMakeLists.txt 
 3538  ag add_executable -i test/*   -G CMakeLists.txt 
 3539  pwd
 3540  plat
 3541  ag add_executable -i ^*/test/*   -G CMakeLists.txt 
 3542  clear
 3543  cfg
 3544  cd -
 3545  gprav
 3546  nvim .
 3547  exit
 3548  gst
 3549  gprav
 3550  systemctl status tmux
 3551  systemctl status tmuxd
 3552  ps -ef | grep tmux
 3553  ps -ef | grep tmuxd
 3554  tmux ls
 3555  tmux kill-session muxy
 3556  tmux kill-session 
 3557  tmux ls
 3558  tmux kill-server
 3559  tmux ls
 3560  tmux
 3561  tmux ls
 3562  tmux new -s muxy
 3563  cfg
 3564  gst
 3565  nvim .
 3566  tmux kill-session
 3567  tmux kill-server
 3568  tmux new -s muxy
 3569  cfg
 3570  nvim .
 3571  clear
 3572  gst
 3573  gd
 3574  gst
 3575  git add i3 lazyvim/ tmux/ 
 3576  gst
 3577  git add i3status/
 3578  glog
 3579  gst
 3580  git commit -m "[i3|i3stat|lazyvim|tmux] minor updates"
 3581  gprav && git push --force-with-lease origin HEAD
 3582  gprav
 3583  clear
 3584  gprav
 3585  exit
 3586  omz update
 3587  clear
 3588  tmux attach -t muxy
 3589  clear
 3590  cfg
 3591  nvim .
 3592  tmux kill-server
 3593  clear
 3594  tmux new -s muxy
 3595  nvim .
 3596  clear
 3597  gst
 3598  gprav
 3599  pwd
 3600  cd build
 3601  mkdir build
 3602  cmake -DCMAKE_BUILD_TYPE=Debug DCMAKE_EXPORT_COMPILE_COMMANDS=On ..
 3603  cd build
 3604  cmake -DCMAKE_BUILD_TYPE=Debug DCMAKE_EXPORT_COMPILE_COMMANDS=On ..
 3605  ll
 3606  cmake -DCMAKE_BUILD_TYPE=Debug DCMAKE_EXPORT_COMPILE_COMMANDS=On ..
 3607  cd ..
 3608  ll
 3609  rm -rf compile_commands.json
 3610  cd build
 3611  rm -rf *
 3612  clear
 3613  pwd
 3614  cmake -DCMAKE_BUILD_TYPE=Debug -DCMAKE_EXPORT_COMPILE_COMMANDS=On ..
 3615  cp compile_commands.json ..
 3616  cd ..
 3617  nvim .
 3618  gst
 3619  gprav
 3620  nvim .
 3621  clear
 3622  ls -lart
 3623  cd
 3624  pacman -Syu
 3625  sudo pacman -Syu
 3626  yay -Syu
 3627  clear
 3628  gst
 3629  gprav
 3630  clear
 3631  ll
 3632  gst
 3633  rm -rf .cache
 3634  rm -rf compile_commands.json
 3635  cd build
 3636  cmake -DCMAKE_BUILD_TYPE=Debug -DCMAKE_EXPORT_COMPILE_COMMANDS=On ..
 3637  cp compile_commands.json ..
 3638  cd ..
 3639  pqralt
 3640  gst
 3641  gprav
 3642  systemctl status openvpn-client@Blr-office-UDP4-1194-config                                                                                                                                            akhil@archlinux
 3643  clear
 3644  gprav
 3645  systemctl status openvpn-client@Blr-office-UDP4-1194-config                                                                                                                                            akhil@archlinux
 3646  gprav
 3647  git branch
 3648  git checkout -b akhil/repo-re-setup
 3649  git fetch -a 
 3650  clear
 3651  git branch -a | grep akhil
 3652  git branch -a
 3653  git fetch -a
 3654  git branch -a
 3655  platalt
 3656  gst
 3657  git fetch -a
 3658  gst
 3659  git checkout -b akhil/repo-re-setup
 3660  git branch -a | grep akhil
 3661  git checkout akhil/platform_build_fix
 3662  git pull
 3663  git pull --rebase
 3664  clear
 3665  glog
 3666  cd build
 3667  ll
 3668  rm -rf *
 3669  cd ..
 3670  rm -rf compile_commands.json
 3671  cd build
 3672  cmake -DCMAKE_BUILD_TYPE=Debug -DCMAKE_EXPORT_COMPILE_COMMANDS=On ..
 3673  cp compile_commands.json ..
 3674  cd ..
 3675  clear
 3676  git status
 3677  nvim .
 3678  glog
 3679  git diff 3655adbf > build_fix_changes.patch
 3680  glog
 3681  git reset --soft 3655adbf 
 3682  gst
 3683  git commit -m "[squashed:dockerfiles] add dockerfiles to build platform-lib in docker container"
 3684  git checkout akhil/repo-re-setup
 3685  git cherry-pick akhil/platform_build_fix
 3686  gst
 3687  glog
 3688  dev132
 3689  git status
 3690  dev132
 3691  nvim .
 3692  cfg
 3693  nvim .
 3694  clear
 3695  gst
 3696  glog
 3697  git branch -a | grep akhil
 3698  git fetch -a
 3699  git branch -a | grep akhil
 3700  git checkout remotes/origin/akhil/platform_build_fix
 3701  git status
 3702  git switch -
 3703  git status
 3704  git branch
 3705  git checkout akhil/platform_build_fix
 3706  glog
 3707  git reset --soft 3655adbf 
 3708  gst
 3709  glog
 3710  gst
 3711  git reset --soft 3655adbf 
 3712  gst
 3713  glog
 3714  git reset --soft 808cefa3 
 3715  gst
 3716  git commit -m "[squashed:dockerfiles|fp_client] remove feed_publisher's dependency on pqr to build platform independently"
 3717  git checkout akhil/repo-re-setup
 3718  git cherry-pick akhil/platform_build_fix
 3719  gst
 3720  glog
 3721  gst
 3722  git reset --soft 
 3723  gst
 3724  glog
 3725  git reset --soft 808cefa3  
 3726  gst
 3727  git restore --staged Dockerfile dockerfiles/
 3728  gst
 3729  git diff --staged
 3730  gst
 3731  git restore --staged build.sh
 3732  gst
 3733  git commit -m "[feed_publisher] remove feed_publisher's dependency from pqr to build platform independently"
 3734  gsta
 3735  gst
 3736  glog
 3737  gst
 3738  git reset --soft 808cefa3 
 3739  gst
 3740  git commit -m "[feed_publisher] remove feed_publisher's dependency from pqr to build platform independently"
 3741  git add Dockerfile dockerfiles/
 3742  git commit -m "[docker] add dockerfiles to build platform and run tests in docker container"
 3743  gst
 3744  glog
 3745  exit
 3746  nvim .
 3747  gst
 3748  gd
 3749  git status
 3750  git add lazyvim/
 3751  gst
 3752  gprav && git push --force-with-lease origin HEAD
 3753  gst
 3754  gprav
 3755  gst
 3756  nvim .
 3757  git status
 3758  glog
 3759  clear
 3760  git stauts
 3761  gst
 3762  dev132
 3763  git status
 3764  cctx
 3765  cd ..
 3766  ll
 3767  nvim rsync_gitchanges.py
 3768  alias cctx
 3769  ~/files/projects/Elaeocarpus/tools/scripts/rsync_gitchanges.py akhil@132.1.16.132:/home/akhil/files/projects/plat_alternate_work/platform/
 3770  rsyncplatalt
 3771  nvim .
 3772  exit
 3773  nvim .
 3774  exit
 3775  gst
 3776  git restore lua/plugins/toggleterm.lua
 3777  nvim .
 3778  exit
 3779  nvim .
 3780  exit
 3781  nvim .
 3782  clear
 3783  git status
 3784  gst
 3785  dev132
 3786  ced
 3787  cd
 3788  nsep168
 3789  nsep241
 3790  gst
 3791  git add i3status/ lazyvim/
 3792  gd
 3793  gd --staged
 3794  git commit -m "[lazy|i3status] update toggleterm and update colors for i3status bar"
 3795  gprav && git push --force-with-lease origin HEAD
 3796  clear
 3797  exit
 3798  dev132
 3799  clear
 3800  dev132
 3801  gst
 3802  cctxo
 3803  ll
 3804  nvim .
 3805  prodlg
 3806  ll
 3807  nvim .
 3808  pwd
 3809  ag -i add_executable --cmake -l
 3810  ag -i add_executable --cmake -l | grep ^[test]
 3811  grep -h | grep ignore
 3812  grep -h | grep exclude
 3813  ag -i add_executable --cmake -l --ignore-dir tests
 3814  ag -i add_executable --cmake -l --ignore-dir test
 3815  ag -i add_executable --cmake  --ignore-dir test
 3816  sudo systemctl reboot
 3817  \t\ti3-msg move workspace to output HDMI-2
 3818  exitrxit
 3819  exit
 3820  tmux new -s muxy
 3821  leasrnvim .
 3822  nvim .
 3823  clear
 3824  nsep168
 3825  clear
 3826  systemctl status openvpn-client@Blr-office-UDP4-1194-config                                                                                                                                            akhil@archlinux
 3827  sudo systemctl start openvpn-client@Blr-office-UDP4-1194-config                                                                                                                                            akhil@archlinux
 3828  clear
 3829  nsep168
 3830  exit
 3831  clear
 3832  ll
 3833  clear
 3834  ll
 3835  clear
 3836  nvim .
 3837  cleasr
 3838  clear
 3839  systemctl status openvpn-client@Blr-office-UDP4-1194-config                                                                                                                                            akhil@archlinux
 3840  sudo systemctl start openvpn-client@Blr-office-UDP4-1194-config                                                                                                                                            akhil@archlinux
 3841  ll
 3842  sudo systemctl start openvpn-client@Blr-office-UDP4-1194-config
 3843  systemctl status openvpn-client@Blr-office-UDP4-1194-config                                                                                                                                            akhil@archlinux
 3844  nsep168
 3845  clear
 3846  dev132
 3847  clear
 3848  gst
 3849  fg
 3850  gst
 3851  nvim .
 3852  cleasr
 3853  git status
 3854  proj
 3855  ll
 3856  cd plat_alternate_work_tmp
 3857  gst
 3858  ll
 3859  cd platform
 3860  gst
 3861  git checkout Master_2.0
 3862  gprav
 3863  cd ..
 3864  cd pqr
 3865  ll
 3866  git status
 3867  git checkout Master_2.0
 3868  gprav
 3869  systemctl status openvpn-client@Blr-office-UDP4-1194-config                                                                                                                                            akhil@archlinux
 3870  \tsudo systemctl restart openvpn-client@Blr-office-UDP4-1194-config
 3871  gprav
 3872  git checkout Master_2.0
 3873  gprav
 3874  cd ../..
 3875  ll
 3876  mv -f plat_alternate_work_tmp/ plat_tmp_work/
 3877  fg
 3878  nvim .
 3879  ll
 3880  cd plat_alternate_work/
 3881  ll
 3882  cd ..
 3883  cd plat_tmp_work
 3884  ll
 3885  cd platform
 3886  gst
 3887  nvim .
 3888  gprav
 3889  clear
 3890  systemctl status openvpn-client@Blr-office-UDP4-1194-config                                                                                                                                            akhil@archlinux
 3891  systemctl status openvpn-client@Blr-office-UDP4-1194-config
 3892  gprav
 3893  gcc --version
 3894  sudo systemctl reboot
 3895  clear
 3896  \t\ti3-msg move workspace to output HDMI-2
 3897  exit
 3898  tmux ls
 3899  sudo pacman -Syu
 3900  yay -Syu
 3901  clear
 3902  tmux new -s muxy
 3903  nvim .
 3904  clear
 3905  nvim .
 3906  clear
 3907  gst
 3908  gprav
 3909  clear
 3910  nvim .
 3911  \t\ti3-msg move workspace to output HDMI-2
 3912  exit
 3913  \t\ti3-msg move workspace to output HDMI-2
 3914  exit
 3915  elaeo
 3916  gst
 3917  ll
 3918  gst
 3919  history | grep -i conan >> conan.history
 3920  nvim .
 3921  cd build
 3922  conan install .. --output-folder=.
 3923  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/build/Release/generators/conan_toolchain.cmake
 3924  make -j 4
 3925  cd ..
 3926  gprav
 3927  cd build
 3928  conan install .. --output-folder=.
 3929  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/build/Release/generators/conan_toolchain.cmake
 3930  make -j 2
 3931  conan install .. --output-folder=.
 3932  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/build/Release/generators/conan_toolchain.cmake
 3933  make
 3934  cd ..
 3935  gst
 3936  clear
 3937  exit
 3938  nvim .
 3939  gst
 3940  mkdir build
 3941  cmake -DCMAKE_BUILD_TYPE=Debug -DCMAKE_EXPORT_COMPILE_COMMANDS=On ..
 3942  cmake -DCMAKE_BUILD_TYPE=Debug -DCMAKE_EXPORT_COMPILE_COMMANDS=ON ..
 3943  cd build
 3944  cmake -DCMAKE_BUILD_TYPE=Debug -DCMAKE_EXPORT_COMPILE_COMMANDS=ON ..
 3945  cp compile_commands.json ..
 3946  cd ..
 3947  nvim .
 3948  gst
 3949  sudo systemctl reboot
 3950  \t\ti3-msg move workspace to output HDMI-2
 3951  clear
 3952  exit
 3953  clear
 3954  tmux new -s muxy
 3955  nvim .
 3956  clear
 3957  sudo pacman -Syu
 3958  pacman -Syu lazydocker
 3959  sudo pacman -Syu lazydocker
 3960  \tpacman -Qs docker | grep lazy
 3961  \tpacman -Qs lazy | grep git
 3962  \tpacman -Qs lazy | grep docker
 3963  yay -Qs docker | grep lazy
 3964  yay -Qs lazy | grep -i doc
 3965  yay -Qs lazy 
 3966  systemctl status openvpn-client@Blr-office-UDP4-1194-config
 3967  \tsudo systemctl reload-or-restart openvpn-client@Blr-office-UDP4-1194-config
 3968  systemctl status openvpn-client@Blr-office-UDP4-1194-config
 3969  clear
 3970  cfg
 3971  gst
 3972  gd
 3973  git add setup.sh
 3974  git commit -m "[setup] minor updates"
 3975  gprav 
 3976  git commit -amend
 3977  git commit --amend
 3978  gprav
 3979  gprav && git push --force-with-lease origin HEAD
 3980  gst
 3981  gprav
 3982  \t\ti3-msg move workspace to output HDMI-2
 3983  git status
 3984  nvim .
 3985  clear
 3986  ll
 3987  clear
 3988  gst
 3989  clear
 3990  ll
 3991  clear
 3992  gst
 3993  clear
 3994  cal
 3995  cal 3
 3996  cal 2025
 3997  clear
 3998  gst
 3999  nvim .
 4000  cal
 4001  gst
 4002  git add .gitignore CMakeLists.txt
 4003  \t\ti3-msg move workspace to output HDMI-2
 4004  clear
 4005  tmux ls
 4006  tmux attach -t muxy
 4007  gst
 4008  clear
 4009  gst
 4010  glog
 4011  gst
 4012  git commit -m "[cmake|git] update gitignore & cmake configs"
 4013  gprav
 4014  gprav && git push --force-with-lease origin HEAD
 4015  \t\ti3-msg move workspace to output HDMI-2
 4016  git status
 4017  git rm CMakeUserPresets.json
 4018  git rm CMakeUserPresets.json -f
 4019  gst
 4020  cd build
 4021  history 
 4022  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/build/Release/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON
 4023  cp compile_commands.json ..
 4024  make
 4025  clear
 4026  \t\ti3-msg move workspace to output HDMI-2
 4027  exit
 4028  gst
 4029  rm -rf ag_help.man recovery.patch test.cpp
 4030  nvim .
 4031  git status
 4032  gd
 4033  gst
 4034  git status
 4035  clear
 4036  exit
 4037  fzf
 4038  gst
 4039  git restore oms/CMakeLists.txt
 4040  gst
 4041  gprav
 4042  nvim .
 4043  cd ../pqr
 4044  gst
 4045  gprav
 4046  nvim .
 4047  proj
 4048  ll
 4049  cd plat_tmp_work
 4050  ll
 4051  source ~/.zshrc
 4052  clear
 4053  git log --author="Santhosh"
 4054  git log --author="akhil"
 4055  git log --author="aditya"
 4056  git log --author="anittor"
 4057  git log --author="anitoor"
 4058  git log --author="shivam"
 4059  git log --author="akhil"
 4060  git log --author="raghav"
 4061  clear
 4062  clear
 4063  dev132
 4064  clear
 4065  nsep168
 4066  gst
 4067  gd
 4068  gst
 4069  rm -rf build_fix_changes.patch
 4070  gd
 4071  nvim .
 4072  gst
 4073  cd ..
 4074  git add conan.history
 4075  git commit -m "[temp change] conan .hist file (to be deleted later)"
 4076  gprav && git push --force-with-lease origin HEAD
 4077  cd ..
 4078  ll
 4079  cp -f Elaeocarpus simple_trading_platform
 4080  cp -r Elaeocarpus simple_trading_platform
 4081  ll
 4082  cd ..
 4083  ll
 4084  cd simple_trading_platform
 4085  ll
 4086  nvim .
 4087  exit
 4088  clear
 4089  cctx
 4090  \t\t\t\t\t\t./run.py --source ~/files/projects/platform/rms  --output ~/files/learn/codectx_out/rms.txt
 4091  ag -i recovery_start
 4092  cd ../pqr
 4093  ag -i recovery_start
 4094  source ~/.zshrc
 4095  rsyncplattmp
 4096  clear
 4097  nvim .
 4098  rsyncplattmp
 4099  rsyncpqrtmp
 4100  gst
 4101  cd files/projects/plat_alternate_work
 4102  cd platform
 4103  \tdocker build -f dockerfiles/Dockerfile.ubuntu1804_00  -t platu1804-build .
 4104  pwd
 4105  cd oms
 4106  ag -i infra -l
 4107  ag -i infra > oms_usage.log
 4108  ag -i core >> oms_usage.log
 4109  \t\ti3-msg move workspace to output HDMI-2
 4110  clear
 4111  tmux new -s muxy
 4112  nvim .
 4113  gst
 4114  nvim .
 4115  gst
 4116  gprav
 4117  nvim .
 4118  exit
 4119  sudo pacman -Syu 
 4120  yay -Syu
 4121  git status
 4122  gprav
 4123  gst
 4124  gprav
 4125  nvim .
 4126  clear
 4127  dev132
 4128  clera
 4129  nvim .
 4130  clear
 4131  ll
 4132  clear
 4133  git status
 4134  gst
 4135  ll
 4136  git init
 4137  git branch
 4138  git status
 4139  git stash list
 4140  gst
 4141  git stash
 4142  nvim .
 4143  clear
 4144  gst
 4145  gd
 4146  gd --staged
 4147  gst
 4148  git restore --staged
 4149  git restore --staged oms
 4150  gst
 4151  git restore oms
 4152  gst
 4153  gprav
 4154  clear
 4155  ls -lart
 4156  rsyncplattmp
 4157  pwd
 4158  dev132
 4159  gst
 4160  cd ../pqr
 4161  nvim .
 4162  rsyncpqrtmp
 4163  cd
 4164  ll
 4165  dev132
 4166  clear
 4167  fg
 4168  gst
 4169  git status
 4170  gst
 4171  gitup -f
 4172  gst
 4173  mkdir build
 4174  rm -rf build
 4175  mkdir build
 4176  cd build
 4177  ll
 4178  cd ..
 4179  conan install .. --output-folder=.
 4180  cd build
 4181  conan install .. --output-folder=.
 4182  ll
 4183  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/build/Release/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON
 4184  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Release/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON
 4185  cd ..
 4186  nvim .
 4187  rm -rf build
 4188  \tconan install . --output-folder=build
 4189  cd build
 4190  ll
 4191  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Release/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON
 4192  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Release/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug 
 4193  make
 4194  :wa
 4195  cd ..
 4196  cd applications
 4197  ll
 4198  cp -f ~/files/projects/platform/infra .
 4199  cp -r ~/files/projects/platform/infra .
 4200  gst
 4201  nsep168
 4202  clear
 4203  gf
 4204  fg
 4205  nvim .
 4206  nsep168
 4207  cd ../
 4208  cd build
 4209  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Release/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug 
 4210  make
 4211  fg
 4212  nvim .
 4213  gst
 4214  cd ../platform
 4215  gst
 4216  git fetch -a
 4217  gprav
 4218  clear
 4219  git checkout Version_24Jan
 4220  gprav
 4221  cd -
 4222  git checkout DirectConnectivity
 4223  gst
 4224  git stash push
 4225  git checkout DirectConnectivity
 4226  gprav
 4227  cd build
 4228  make
 4229  ag -i io_service
 4230  pwd
 4231  cd ..
 4232  ag -i io_service
 4233  vim ../Elaeocarpus/applications/asiotbtrecov/CMakeLists.txt
 4234  CLEAR
 4235  clear
 4236  git status
 4237  cd build
 4238  make
 4239  elaeo
 4240  nvim .
 4241  make
 4242  cd ..
 4243  \tconan install . --output-folder=build
 4244  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Release/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug 
 4245  cd build
 4246  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Release/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug 
 4247  make
 4248  cd .
 4249  cd ..
 4250  \tconan install . --output-folder=build
 4251  cd build
 4252  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Release/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug 
 4253  make
 4254  gst
 4255  cd ../platform
 4256  gst
 4257  cd -
 4258  ll
 4259  rsyncpqrtmp
 4260  pwd
 4261  cd infra/include/infra/events
 4262  pwd
 4263  ag -i while
 4264  ag -i for
 4265  nvim .
 4266  gst
 4267  gd
 4268  gst
 4269  git add setup.sh tmux/
 4270  git commit -m "[tmux|setup] add/modify window-n-pane navigation for tmux & add tmp platform alias to setup"
 4271  gprav && git push --force-with-lease origin HEAD
 4272  tmux new -s muxy
 4273  tmux attach -t muxy
 4274  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Release/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug 
 4275  cd ..
 4276  history | grep tree
 4277  tree -x build
 4278  clear
 4279  tree .
 4280  tree . > tree.log
 4281  pwd
 4282  tree . > tree.log
 4283  cd build
 4284  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Release/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug 
 4285  make
 4286  bluetooth
 4287  blueman-manager
 4288  sudo pacman -S bluez bluez-utils blueman
 4289  sudo systemctl enable bluetooth.service\nsudo systemctl start bluetooth.service
 4290  sudo modprobe btusb
 4291  sudo usermod -aG bluetooth $USER
 4292  sudo systemctl reboot
 4293  \t\ti3-msg move workspace to output HDMI-2
 4294  sudo usermod -aG bluetooth $USER
 4295  groups
 4296  blueman-manager
 4297  tmux new -s muxy
 4298  nvim .
 4299  cd build
 4300  make
 4301  r
 4302  make
 4303  ll
 4304  clear
 4305  git status
 4306  gst
 4307  cd build
 4308  make
 4309  clear
 4310  make
 4311  cd ../platform
 4312  gst
 4313  git checkout Master_2.0
 4314  nvim .
 4315  tmux attach -t muxy
 4316  clear
 4317  ll
 4318  make
 4319  cd ..
 4320  \tconan install . --output-folder=build
 4321  cd build
 4322  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Release/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug 
 4323  make
 4324  nvim .
 4325  clear
 4326  make
 4327  cp -f compile_commands.json ..
 4328  make
 4329  gst
 4330  cctx
 4331  \t\t\t\t\t\t\t./run.py --source ~/files/projects/simple_trading_platform/libraries/communication/infraevents  --output ~/files/learn/codectx_out/elaeo-events.txt
 4332  \t\t\t\t\t\t\t./run.py --source ~/files/projects/platform/infra/include/infra/cmd  --output ~/files/learn/codectx_out/infra-cmd.h
 4333  \t\t\t\t\t\t\t./run.py --source ~/files/projects/platform/infra/src/cmd  --output ~/files/learn/codectx_out/infra-cmd.cpp
 4334  make
 4335  clear
 4336  nvim .
 4337  \tconan install . --output-folder=build
 4338  cd build
 4339  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Release/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug 
 4340  cp -f compile_commands.json ..
 4341  cd ..
 4342  nvim .
 4343  cleasr
 4344  clear
 4345  ll
 4346  gst
 4347  cd build
 4348  make
 4349  cp -f compile_commands.json ..
 4350  make
 4351  cd ..
 4352  \tconan install . --output-folder=build
 4353  cd build
 4354  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Release/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug 
 4355  make clean
 4356  cmake clean
 4357  cmake --clean
 4358  make clean
 4359  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Release/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug 
 4360  make
 4361  make clean
 4362  make
 4363  ll
 4364  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Release/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug 
 4365  make
 4366  rm -rf *
 4367  ll
 4368  cd ..
 4369  \tconan install . --output-folder=build
 4370  \tconan install . --output-folder=build --build=missing
 4371  cd build
 4372  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Release/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug 
 4373  cd ..
 4374  \tconan install . --output-folder=build --build=missing
 4375  cd build
 4376  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Release/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug 
 4377  make
 4378  make 
 4379  mcxp15
 4380  \tsudo systemctl reload-or-restart openvpn-client@Blr-office-UDP4-1194-config
 4381  mcxp15
 4382  clear
 4383  gst
 4384  gsty
 4385  nvim .
 4386  clear
 4387  gst
 4388  gprav
 4389  clear
 4390  nvim .
 4391  clear
 4392  tmux attach -t muxy
 4393  gprav
 4394  nvim .
 4395  gst
 4396  gd
 4397  git add lazyvim/
 4398  git commit -m "[lazyvim] add vim-surround plugin"
 4399  gprav && git push --force-with-lease origin HEAD
 4400  gst
 4401  nvim .
 4402  nvim .
 4403  clear
 4404  clears
 4405  clear
 4406  nsep168
 4407  nvim .
 4408  gst
 4409  nvim .
 4410  clear
 4411  gst
 4412  cd build
 4413  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Release/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug 
 4414  nvim .
 4415  cd ..
 4416  nvim .
 4417  tree -I ".ccls-cache\|.git\|build\|applications\|playground\|" .> tree.log
 4418  tree -I ".ccls-cache\|.git\|build\|applications\|playground\|" .
 4419  tree -I ".ccls-cache\|.git\|build\|applications\|playground" .
 4420  tree -I ".ccls-cache\|.git\|build\|applications\|playground" . > tree.log
 4421  tree -I ".ccls-cache\|.git\|build\|applications\|playground" . 
 4422  tree -I applications
 4423  tree -I applications .
 4424  tree -I applications .> tree.log
 4425  tree -I applications -I build -I docs -I dockerfiles -I playground . > tree.log
 4426  ll
 4427  clear
 4428  cctx
 4429  \t\t\t\t\t\t\t\t./run.py --source ~/files/projects/simple_trading_platform/libraries/communication/events  --output ~/files/learn/codectx_out/events.txt
 4430  cd build
 4431  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Release/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug 
 4432  make
 4433  cmake --version
 4434  make
 4435  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Release/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug 
 4436  cp -f compile_commands.json ..
 4437  make
 4438  cd build
 4439  history | grep cmake
 4440  cmake -DCMAKE_BUILD_TYPE=Debug -DCMAKE_EXPORT_COMPILE_COMMANDS=ON ..
 4441  cp -f compile_commands.json ..
 4442  nvim .
 4443  cd ..
 4444  nvim .
 4445  clear
 4446  nvim .
 4447  make
 4448  cd ..
 4449  cd build
 4450  cd ..
 4451  \tconan install . --output-folder=build --build=missing
 4452  cd build
 4453  cmake -DCMAKE_BUILD_TYPE=Debug -DCMAKE_EXPORT_COMPILE_COMMANDS=ON ..
 4454  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Release/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug 
 4455  MAKE
 4456  make
 4457  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Release/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug 
 4458  make
 4459  :wa
 4460  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Release/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug -DCMAKE_BUILD_TESTING=On
 4461  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Release/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=On
 4462  make
 4463  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Release/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=On
 4464  make
 4465  ll
 4466  cd build
 4467  ll
 4468  cd Release
 4469  ll
 4470  cd generators
 4471  ll
 4472  ll | grep -i conan
 4473  cd ../../
 4474  cd ..
 4475  rm -rf *
 4476  cd ..
 4477  \tconan install . --output-folder=build --build=missing
 4478  cd build
 4479  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Release/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=On
 4480  make
 4481  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Release/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=On
 4482  cd ..
 4483  \tconan install . --output-folder=build --build=missing
 4484  cd build
 4485  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Release/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=On
 4486  make -j2
 4487  sudo pacman -Syu googletest
 4488  sudo pacman -Syu gtest
 4489  make
 4490  clear
 4491  gst
 4492  source ~/.zshrc
 4493  clear
 4494  nvim .
 4495  make
 4496  find ~/files/projects/simple_trading_platform/build -name "libgtest*"
 4497  cd ..
 4498  find ~/files/projects/simple_trading_platform/build -name "libgtest*"
 4499  find ~/files/projects/simple_trading_platform/build -name "libspd*"
 4500  find ~/files/projects/simple_trading_platform/build -name "folly"
 4501  find ~/files/projects/simple_trading_platform/build -name "asio"
 4502  fzf
 4503  cd build
 4504  cd ..
 4505  \tconan install . --output-folder=build --build=missing
 4506  cd build
 4507  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Release/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=On
 4508  make
 4509  fg
 4510  nvim .
 4511  cd ..
 4512  nvim .
 4513  \tconan install . --output-folder=build --build=missing
 4514  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Release/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=On
 4515  cd build
 4516  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Release/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=On
 4517  make
 4518  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Release/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=On
 4519  make
 4520  pwd
 4521  rm -rf *
 4522  \tconan install . --output-folder=build --build=missing
 4523  cd ..
 4524  \tconan install . --output-folder=build --build=missing
 4525  cd build
 4526  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Release/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=On
 4527  make
 4528  rm -rf *
 4529  cd ..
 4530  rm -rf build
 4531  \tconan install . --output-folder=build --build=missing
 4532  cd build
 4533  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Release/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=On
 4534  make
 4535  make VERBOSE=1
 4536  make VERBOSE=1 -j 2
 4537  make VERBOSE=1 -j 1
 4538  cmake ..
 4539  make
 4540  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Release/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=On
 4541  cd ..
 4542  rm -rf build
 4543  \t\tconan install . --output-folder=build --build=missing
 4544  cd build
 4545  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Release/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=On
 4546  make VERBOSE=1 -j 1
 4547  make
 4548  cd
 4549  cd .conan2/
 4550  clear
 4551  tree .
 4552  fzf
 4553  ll
 4554  pwd
 4555  cd extensions
 4556  ll
 4557  ll plugins
 4558  cd ..
 4559  ll
 4560  history | grep conana | uniq
 4561  history | grep conan | uniq
 4562  history | grep conan 
 4563  proj
 4564  cd simple_trading_platform
 4565  ll
 4566  cd build
 4567  ll
 4568  cd ..
 4569  ll
 4570  $ conan profile update settings.compiler.libcxx=libstdc++11 default
 4571  conan profile update settings.compiler.libcxx=libstdc++11 default
 4572  cd
 4573  rm -rf .conan2
 4574  cd -
 4575  conan profile detect\nconan install . --output-folder=build --build=missing --update\n
 4576  clear
 4577  mcxp16
 4578  cd build
 4579  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Release/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=On
 4580  cd ..
 4581  rm -rf build
 4582  conan install . --output-folder=build --build=missing \n
 4583  cd build
 4584  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Release/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=On
 4585  make
 4586  clear
 4587  nvim .
 4588  cd build
 4589  git status
 4590  gst
 4591  ls -lart
 4592  ll
 4593  ls -lart
 4594  cd ..
 4595  git status
 4596  git add .gitignore CMakeLists.txt README.md conanfile.txt design.md dockerfiles/ docs/ libraries/ mkdocs.yml tests/ playground/
 4597  gst
 4598  git add applications/CMakeLists.txt applications/main.cpp
 4599  gsat
 4600  gst
 4601  git status
 4602  gst
 4603  cd build
 4604  make
 4605  clear
 4606  make
 4607  sudo pacman -Syu
 4608  history | grep pacman
 4609  sudo pacman -Rh
 4610  pacman -Rup
 4611  pacman -Ru
 4612  sudo pacman -Ru
 4613  sudo pacman -Russvp
 4614  make
 4615  \t\t\t\t\t\t\t\t\t./run.py --source ~/files/projects/simple_trading_platform/tests/libraries/ output ~/files/learn/codectx_out/events_test.txt
 4616  \t\t\t\t\t\t\t\t\t./run.py --source ~/files/projects/simple_trading_platform/tests/libraries/ --output ~/files/learn/codectx_out/events_test.txt
 4617  cd ..
 4618  mv -f applications ..
 4619  cd ..
 4620  ll
 4621  cd -
 4622  ./run.py --source ~/files/projects/simple_trading_platform/  --output ~/files/learn/codectx_out/stp.txt
 4623  cd build
 4624  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Release/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=On
 4625  make
 4626  make VERBOSE=1 -j 1
 4627  make
 4628  cd ..
 4629  rm -rf build
 4630  conan install . --output-folder=build --build=missing \n
 4631  cd build
 4632  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Release/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=On
 4633  make
 4634  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Release/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=On
 4635  cd ..
 4636  rm -rf  build
 4637  conan install . --output-folder=build --build=missing \n
 4638  cd build
 4639  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Release/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=On
 4640  cd ..
 4641  rm -rf build
 4642  conan install . --output-folder=build --build=missing \n
 4643  cd build
 4644  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Release/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=On
 4645  cd ..
 4646  rm -rf build
 4647  conan install . --output-folder=build --build=missing \n
 4648  cd build
 4649  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Release/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=On
 4650  make
 4651  cd ..
 4652  mv -f ../applications .
 4653  mcxp16
 4654  ll
 4655  mkdir mcx_gold_trad_issue
 4656  cd mcx_gold_trad_issue
 4657  \t\tscp  prod@192.168.113.16:/home/prod/var/sqtpl/logs/others/engine_201/
 4658  \t\tscp  prod@192.168.113.16:/home/prod/var/sqtpl/logs/others/engine_201/ .
 4659  \t\tscp -R   prod@192.168.113.16:/home/prod/var/sqtpl/logs/others/engine_201/ .
 4660  \t\tscp -R   prod@192.168.113.16:/home/prod/var/sqtpl/logs/others/engine_201/* .
 4661  \t\tscp -r   prod@192.168.113.16:/home/prod/var/sqtpl/logs/others/engine_201/ .
 4662  rm -rf *
 4663  \t\tscp -r   prod@192.168.113.16:/home/prod/var/sqtpl/logs/others/engine_201/*.log .
 4664  \t\tscp -r   prod@192.168.113.16:/home/prod/var/sqtpl/logs/others/engine_201/*_20250227.log .
 4665  \t\tscp -r   prod@192.168.113.16:/home/prod/var/sqtpl/logs/others/engine_201/*0250227.log .
 4666  \t\tscp -r   prod@192.168.113.16:/home/prod/var/sqtpl/logs/others/engine_201/_0250227.log .
 4667  \t\tscp -r   prod@192.168.113.16:/home/prod/var/sqtpl/logs/others/engine_201/_20250227.log .
 4668  \t\tscp -r   prod@192.168.113.16:/home/prod/var/sqtpl/logs/others/engine_201/*_20250227.log .
 4669  \t\tscp -r   prod@192.168.113.16:/home/prod/var/sqtpl/logs/others/engine_201/test_logs/ .
 4670  ll
 4671  mv -f test_logs/* .
 4672  rmdir test_logs
 4673  nvim .
 4674  fg
 4675  nvim .
 4676  gst
 4677  git fetch -a
 4678  gprav
 4679  cleasr
 4680  tmux attach -t muxy
 4681  \tag -i "EXCEEDS TRANSACTION SIZE LIMIT VALUE"
 4682  gst
 4683  git checkout Version_24Jan
 4684  ag -i "EXCEEDS TRANSACTION SIZE LIMIT VALUE"
 4685  clear
 4686  cd
 4687  mcxp16
 4688  cd ..
 4689  cd pqr
 4690  ll
 4691  nvim .
 4692  ag -i "EXCEEDS TRANSACTION SIZE LIMIT VALUE"
 4693  ag -i 650000
 4694  ag -i 210 -l
 4695  mcxp16
 4696  prodlg
 4697  ll
 4698  cd mcx_gold_trad_issue
 4699  \t\t\tscp -r  *.log prod@192.168.113.16:/home/prod/var/sqtpl/logs/others/engine_201/test_logs/ 
 4700  cd build
 4701  make
 4702  git status
 4703  gst
 4704  history | grep docker
 4705  make
 4706  make test
 4707  cmake --test
 4708  cmake test
 4709  ll
 4710  cd tests
 4711  ll
 4712  cd libraries
 4713  ll
 4714  cd communication
 4715  ll
 4716  cd events
 4717  ll
 4718  ./events_tests
 4719  gst
 4720  gprav
 4721  nvim .
 4722  gst
 4723  cd ../.../..
 4724  cd ../../..
 4725  cd ..
 4726  make
 4727  make test
 4728  make
 4729  gst
 4730  cd ..
 4731  gst
 4732  git add build.sh libraries/
 4733  gst
 4734  git add CMakeLists.txt README.md conanfile.txt tests/
 4735  gst
 4736  glog
 4737  git commit -m "[initial commit] setup project dir structure, git-configs, cmake configs, dockerfiles, initial set of libraries and unit tests"
 4738  gst
 4739  git remote add origin http://132.1.16.184:8080/diffusion/69/ioc-platform.git
 4740  git remote -v
 4741  gst
 4742  git branch -m master main
 4743  gst
 4744  git push --set-upstream origin/main
 4745  git push -u origin main
 4746  git branch -m main master
 4747  git brannch -m master main
 4748  git branch -m master main
 4749  gbr
 4750  gst
 4751  glog
 4752  git push -u origin main
 4753  git push origin --delete master
 4754  git branch -m main master
 4755  gst
 4756  git push -u origin master
 4757  git push origin --delete main
 4758  gbr
 4759  git branch -D origin/main
 4760  git branch -D --remote origin/main
 4761  git push -u origin master
 4762  cd build
 4763  make
 4764  cp compile_commands.json ..
 4765  clear
 4766  nvim .
 4767  cd build
 4768  make
 4769  make test
 4770  make test -v
 4771  make -v test
 4772  make test
 4773  make tests
 4774  make test
 4775  make tests
 4776  make test
 4777  make tests
 4778  make test
 4779  cd tests/libraries/communication/events
 4780  ll
 4781  ./events_tests
 4782  ll
 4783  ./events_tests
 4784  make tests
 4785  ./events_tests
 4786  cd -
 4787  make tests
 4788  make test
 4789  make
 4790  gst
 4791  make
 4792  cd ..
 4793  gst
 4794  git diff libraries/communication/events/sources/event_loop.cpp
 4795  cd build
 4796  make
 4797  gst
 4798  make
 4799  make test
 4800  \t./run.py --source ~/files/projects/simple_trading_platform/libraries/communication/ipc  --output ~/files/learn/codectx_out/ipc.txt
 4801  pwd
 4802  cd ../libraries/communication/events
 4803  cd ../ipc
 4804  ag -i event
 4805  cd ../../..
 4806  cd build
 4807  ll
 4808  make
 4809  make test
 4810  gst
 4811  cd ../platform
 4812  gst
 4813  ls -lart
 4814  nvim .
 4815  gst
 4816  gprav
 4817  nvim .
 4818  pacman -Syu
 4819  sudo pacman -Syu
 4820  clear
 4821  gst
 4822  ls -lart
 4823  ll
 4824  gst
 4825  gprav
 4826  nvim .
 4827  htop
 4828  make
 4829  nvim .
 4830  gst
 4831  clear
 4832  ll
 4833  cd ..
 4834  ll
 4835  cd platform
 4836  ll
 4837  cd infra
 4838  ll
 4839  cd include
 4840  ll
 4841  cd infra
 4842  ll
 4843  make
 4844  sudo systemctl reboot
 4845  \t\ti3-msg move workspace to output HDMI-2
 4846  sudo pacman -Syu
 4847  clear
 4848  tmux new -s muxy
 4849  nvim .
 4850  htop
 4851  nvim .
 4852  clear
 4853  exit
 4854  clear
 4855  gprav
 4856  clear
 4857  gprav
 4858  nvim .
 4859  ls -lart
 4860  exit
 4861  clear
 4862  git status
 4863  ll
 4864  exit
 4865  qexitxit
 4866  exit
 4867  clear
 4868  \t\ti3-msg move workspace to output HDMI-2
 4869  exit
 4870  nvim .
 4871  yay -Syu 
 4872  clear
 4873  pacman -Syu
 4874  sudo pacman -Syu
 4875  clear
 4876  yay -Syu
 4877  tmux new -s muxy
 4878  clear
 4879  ll
 4880  tmux new -s muxy
 4881  tmux attach -t muxy
 4882  \t\ti3-msg move workspace to output eDP-1
 4883  EXIT
 4884  exit
 4885  clear
 4886  gst
 4887  git fetch -a
 4888  gst
 4889  git checkout DirectConnectivity
 4890  cd ../pqr
 4891  gst
 4892  git stash list
 4893  git stash -m "build error fix"
 4894  git fetch -a
 4895  git checkout DirectConnectivity
 4896  gprav
 4897  ll
 4898  ls -lart
 4899  ll
 4900  clear
 4901  gst
 4902  git stash pop
 4903  gst
 4904  rsyncpqrtmp
 4905  cd ../platform
 4906  rsyncplattmp
 4907  gst
 4908  git stash list
 4909  cd -
 4910  gst
 4911  clear
 4912  dev132
 4913  gst
 4914  cd build
 4915  make
 4916  cd ..
 4917  nvim .
 4918  cd build
 4919  make
 4920  make test
 4921  nvim .
 4922  make
 4923  cd build
 4924  make
 4925  alias nsep168
 4926  make
 4927  make test
 4928  make
 4929  make test
 4930  git status
 4931  nvim .
 4932  cctx
 4933  git status
 4934  gst
 4935  ls -lart
 4936  gitup -f
 4937  gst
 4938  clear
 4939  \t\t./run.py --source ~/files/projects/simple_trading_platform/libraries/communication/events  --output ~/files/learn/codectx_out/events.txt
 4940  \t\t./run.py --source ~/files/projects/simple_trading_platform/tests/libraries/communication/events/sources  --output ~/files/learn/codectx_out/events_test.txt 
 4941  git status
 4942  gst
 4943  make
 4944  make test
 4945  make
 4946  make test
 4947  :wa
 4948  make 
 4949  make test
 4950  make
 4951  cd ..
 4952  cp -f ../platform/infra/include/infra/ipc libraries/communication/ipc/includes/ipc
 4953  cp -r ../platform/infra/include/infra/ipc libraries/communication/ipc/includes/ipc
 4954  make
 4955  cd build
 4956  make
 4957  cd ..
 4958  cp -r ../platform/infra/src/ipc  libraries/communication/ipc/sources
 4959  make
 4960  git branch
 4961  git status
 4962  cd ../
 4963  cd pqr
 4964  git status
 4965  glog
 4966  gst
 4967  rsyncpqralt
 4968  exit
 4969  cd ../platform
 4970  rsyncplatalt
 4971  nvim .
 4972  exit
 4973  clear
 4974  pwd
 4975  ag -i acce-bse-feed-adapter --cmake -l
 4976  ag -i acce-all-feed-adapters --cmake -l
 4977  gst
 4978  gd
 4979  rsyncplat
 4980  rsyncplatalt
 4981  ll
 4982  clear
 4983  dev132
 4984  \tdocker build -f dockerfiles/Dockerfile.ubuntu1804_00  -t platu1804-build .
 4985  sudo systemctl reboot
 4986  \t\ti3-msg move workspace to output eDP-1
 4987  \t\ti3-msg move workspace to output HDMI-2
 4988  exit
 4989  clears
 4990  tmux new -s muxy
 4991  nvim .
 4992  clears
 4993  dev132
 4994  sudo pacman -Syu
 4995  clear
 4996  ll
 4997  ls -lart
 4998  git status
 4999  ls -lart
 5000  exit
 5001  nvim .
 5002  cd build
 5003  make
 5004  cd ../pqr
 5005  nvim .
 5006  rsyncpqralt
 5007  cd ..
 5008  cd platform
 5009  nvim .
 5010  gst
 5011  git status
 5012  git diff
 5013  git status
 5014  clear
 5015  make
 5016  cp ~/files/projects/platform/infra/test/ipc/*.cpp ../tests/libraries/communication/ipc/sources
 5017  make
 5018  cd ..
 5019  ag -i elaeo
 5020  make
 5021  cd build
 5022  make
 5023  cp compile_commands.json ..
 5024  make
 5025  cd ../libraries/communication/ipc
 5026  ag -i infra
 5027  cd -
 5028  make
 5029  cd -
 5030  ag -i infra
 5031  make
 5032  cd -
 5033  make
 5034  clear
 5035  nvim .
 5036  cd build
 5037  make
 5038  clear
 5039  tmux attach -t muxy
 5040  clear
 5041  make
 5042  ag -i  BOOKSNAPSHOT_LEVEL
 5043  ag -i  BOOKSNAPSHOT_LEVEL -l
 5044  ag -i  BOOKSNAPSHOT_LEVEL --cmake
 5045  make
 5046  sudo systemctl hybrid-sleep
 5047  git status
 5048  gst
 5049  make
 5050  cd ..
 5051  conan install . --output-folder=build --build=missing \n
 5052  cd build
 5053  make
 5054  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Release/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=On
 5055  make
 5056  \t\ti3-msg move workspace to output HDMI-2
 5057  tmux new -s muxy
 5058  tmux attach -t muxy
 5059  clear
 5060  \tsudo systemctl reload-or-restart openvpn-client@Blr-office-UDP4-1194-config
 5061  clear
 5062  git status
 5063  git fetch -a
 5064  git checkout Version_24Jan
 5065  gprav
 5066  systemctl status openvpn-client@Blr-office-UDP4-1194-config
 5067  gprav
 5068  git pull --rebase
 5069  systemctl status openvpn-client@Blr-office-UDP4-1194-config
 5070  git pull --rebase
 5071  rsyncplattmp
 5072  dev132
 5073  gst
 5074  nvim .
 5075  cd build
 5076  make
 5077  tmux attach -t muxy
 5078  all
 5079  dev132
 5080  cd ../pqr
 5081  ag -i boost/format
 5082  nvim .
 5083  ag -i boost/format
 5084  git status
 5085  gprav
 5086  rsyncpqrtmp
 5087  dev132
 5088  make
 5089  mKE
 5090  make
 5091  nsep168
 5092  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Release/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=On
 5093  rm -rf *
 5094  cd ..
 5095  \t\tconan install . --output-folder=build --build=missing
 5096  cd build
 5097  ll
 5098  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Release/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=On
 5099  make
 5100  cp compile_commands.json ..
 5101  make
 5102  cd ..
 5103  ag -i events
 5104  ag -i events -l
 5105  ag -i events/event_publisher.h -l
 5106  cd build
 5107  make
 5108  cmake --build
 5109  cmake --build .
 5110  make
 5111  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Release/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=On
 5112  make
 5113  rm -rf *
 5114  cd ..
 5115  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Release/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=On
 5116  \t\tconan install . --output-folder=build --build=missing
 5117  cd build
 5118  make
 5119  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Release/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=On
 5120  cd ..
 5121  rm -rf build
 5122  \t\tconan install . --output-folder=build --build=missing
 5123  cd build
 5124  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Release/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=On
 5125  cd ..
 5126  rm -rf build
 5127  mkdir build
 5128  cd build
 5129  cd ..
 5130  \t\tconan install . --output-folder=build --build=missing
 5131  cd build
 5132  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Release/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=On
 5133  cd ..
 5134  rm -rf build
 5135  git status
 5136  \t\tconan install . --output-folder=build --build=missing
 5137  cd build
 5138  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Release/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=On
 5139  cd build
 5140  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Release/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=On
 5141  make
 5142  clear
 5143  ls -lart
 5144  fg
 5145  cd ..
 5146  nvim .
 5147  systemctl status openvpn-client@Blr-office-UDP4-1194-config
 5148  sudo systemctl stop  openvpn-client@Blr-office-UDP4-1194-config
 5149  systemctl status openvpn-client@Blr-office-UDP4-1194-config
 5150  \t\ti3-msg move workspace to output HDMI-2
 5151  cd build
 5152  make
 5153  dev132
 5154  clear
 5155  make
 5156  cd ..
 5157  \t\tconan install . --output-folder=build --build=missing
 5158  cd build
 5159  make
 5160  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Release/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=On
 5161  cmake --build .
 5162  clear
 5163  nsep168
 5164  make
 5165  clear
 5166  make
 5167  gst
 5168  git status
 5169  cctx
 5170  \t\t\t./run.py --source ~/files/projects/simple_trading_platform/  --output ~/files/learn/codectx_out/stp.txt
 5171  git status
 5172  make
 5173  omz update
 5174  sudo pacman -Syu
 5175  yay -Syu
 5176  clear
 5177  tmux new -s muxy
 5178  tmux attach -t muxy
 5179  make
 5180  \t\ti3-msg move workspace to output HDMI-2
 5181  exit
 5182  make
 5183  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Release/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=On
 5184  cd ..
 5185  \t\tconan install . --output-folder=build --build=missing
 5186  cd build
 5187  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Release/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=On
 5188  make
 5189  make 
 5190  make
 5191  git status
 5192  clear
 5193  make
 5194  cd ..
 5195  rm -rf build
 5196  \t\tconan install . --output-folder=build --build=missing
 5197  cd build
 5198  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Release/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=On
 5199  make
 5200  cp compile_commands.json ..
 5201  cal
 5202  python 15 * 1300
 5203  python3
 5204  make
 5205  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Release/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=On
 5206  make
 5207  cd ..
 5208  rm -rf build
 5209  \t\tconan install . --output-folder=build --build=missing
 5210  make
 5211  \t\tconan install . --output-folder=build --build=missing
 5212  cd build
 5213  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Release/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=On
 5214  cmake --build .
 5215  make
 5216  cd ..
 5217  rm -rf build
 5218  \t\tconan install . --output-folder=build --build=missing
 5219  cd build
 5220  make
 5221  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Release/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=On
 5222  make
 5223  :wa
 5224  make
 5225  cd ..
 5226  \t\tconan install . --output-folder=build --build=missing --force
 5227  \t\tconan install . --output-folder=build --build=missing 
 5228  cd build
 5229  cmake ..
 5230  make
 5231  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Release/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=On
 5232  make
 5233  cp compile_commands.json ..
 5234  nvim .
 5235  \t\t\t./run.py --source ~/files/projects/simple_trading_platform/tests/libraries/foundation/infraconfig  --output ~/files/learn/codectx_out/infraconf.txt
 5236  \t\t\t./run.py --source ~/files/projects/simple_trading_platform/libraries/foundation/infraconfig  --output ~/files/learn/codectx_out/infraconf.txt
 5237  cd build
 5238  make
 5239  conan profile detect --force
 5240  \t\tconan install . --output-folder=build --build=missing 
 5241  cd ..
 5242  \t\tconan install . --output-folder=build --build=missing 
 5243  cd build
 5244  make
 5245  ll
 5246  cd 
 5247  cd .conan2/ll
 5248  cd .conan2/
 5249  ll
 5250  fzf
 5251  cd ..
 5252  ll
 5253  rm -rf .conan2
 5254  cd -
 5255  cd files/projects/simple_trading_platform
 5256  \t\tconan install . --output-folder=build --build=missing 
 5257  conan profile detect --force
 5258  \t\tconan install . --output-folder=build --build=missing 
 5259  conan list "*:*"
 5260  conan cache path boost/1.83.0
 5261  conan cache path boost/1.85.0
 5262  ll /home/akhil/.conan2/p/boost33993b862a0b0/e
 5263  conan cache path boost/1.85.0 --folder=include
 5264  conan cache path boost/1.85.0 --folder=lib
 5265  conan cache path boost/1.85.0 
 5266  pacman -Syu
 5267  sudo pacman -Syu
 5268  yay -Syu
 5269  sudo pacman -Russvp
 5270  sudo pacman -Russv
 5271  sudo pacman -Rus
 5272  sudo systemctl reboot
 5273  yay -Syu
 5274  sudo pacman -Syu
 5275  \t\ti3-msg move workspace to output HDMI-2
 5276  clear
 5277  tmux attach -t muxy
 5278  tmux new -s muxy
 5279  nvim .
 5280  clear
 5281  conan profile detect --force
 5282  \t\tconan install . --output-folder=build --build=missing 
 5283  exit
 5284  tmux attach -t muxy
 5285  cd build
 5286  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Release/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=On
 5287  make
 5288  history | grep docker
 5289  history | grep conan
 5290  conan list "*:*" | grep -i boost
 5291  conan cache path boost/1.83.0
 5292  conan cache path boost/1.85.0
 5293  ll /home/akhil/.conan2/p/boost33993b862a0b0/e
 5294  ll /home/akhil/.conan2/p/boost33993b862a0b0/e/dependencies
 5295  ll /home/akhil/.conan2/p/boost33993b862a0b0/e/
 5296  ll /home/akhil/.conan2/p/boost33993b862a0b0/
 5297  ll /home/akhil/.conan2/p/boost33993b862a0b0/d
 5298  ll /home/akhil/.conan2/p/boost33993b862a0b0/es
 5299  ll /home/akhil/.conan2/p/boost33993b862a0b0/s
 5300  ll /home/akhil/.conan2/p/boost33993b862a0b0/se
 5301  ll /home/akhil/.conan2/p/boost33993b862a0b0/es
 5302  ll /home/akhil/.conan2/p/boost33993b862a0b0/
 5303  ll /home/akhil/.conan2/p/boost33993b862a0b0/d
 5304  ll /home/akhil/.conan2/p/boost33993b862a0b0/s
 5305  ll /home/akhil/.conan2/p/boost33993b862a0b0/s/src
 5306  ll /home/akhil/.conan2/p/boost33993b862a0b0/s/src/libs
 5307  ll /home/akhil/.conan2/p/boost33993b862a0b0/s/src/libs/algorithm
 5308  ll /home/akhil/.conan2/p/boost33993b862a0b0/s/src/libs/algorithm/string
 5309  ll /home/akhil/.conan2/p/boost33993b862a0b0/s/src/libs/algorithm/string/example
 5310  cd /home/akhil/.conan2/p/boost33993b862a0b0/s/src/libs/algorithm/string/example
 5311  vim find_example.cpp
 5312  cd -
 5313  make
 5314  cd -
 5315  cd ..
 5316  fzf
 5317  cd
 5318  cd files/projects
 5319  ll
 5320  cd simple_trading_platform
 5321  ll
 5322  cd build
 5323  make
 5324  cd /home/akhil/.conan2/p/b/boost5765ffe8ba6c9/p/include
 5325  ll
 5326  cd boost
 5327  ll
 5328  cd algorithm/
 5329  ll
 5330  cat string.hpp
 5331  cd -
 5332  cd
 5333  cd files/projects/simple_trading_platform
 5334  cd build
 5335  ll
 5336  make
 5337  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Release/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=On
 5338  make
 5339  proj
 5340  ll
 5341  fzf
 5342  clear
 5343  exit
 5344  make
 5345  cd ..
 5346  \t\tconan install . --output-folder=build --build=missing 
 5347  cd -
 5348  make
 5349  \t\tconan install . --output-folder=build --build=missing 
 5350  cd ..
 5351  \t\tconan install . --output-folder=build --build=missing 
 5352  make
 5353  cd -o
 5354  cd -
 5355  make
 5356  exit
 5357  pwd
 5358  git status
 5359  cd ../platform
 5360  git status
 5361  gst
 5362  nvim .
 5363  clear
 5364  cleasr
 5365  tmux attach -t muxy
 5366  clear
 5367  make
 5368  ll
 5369  ls -lart
 5370  glog
 5371  cd ..
 5372  git status
 5373  git add tests
 5374  ll
 5375  rm -rf 3a
 5376  gst
 5377  git add libraries/communication/ipc/
 5378  gst
 5379  git add libraries/foundation/infralogger/
 5380  gst
 5381  git add libraries/
 5382  gst
 5383  git add CMakeLists.txt conanfile.txt
 5384  glog
 5385  git commit -m "[foundation|communication libs] integrat additional foundation libraries"
 5386  gst
 5387  gprav
 5388  git status
 5389  systemctl status openvpn-client@Blr-office-UDP4-1194-config
 5390  gprav
 5391  wifi
 5392  nmcli
 5393  nmcli device list
 5394  history | grep nmcli
 5395  nmcli device disconnect wlp0s20f3
 5396  nmcli device connect wlp0s20f3
 5397  gprav
 5398  git push --force-with-lease origin HEAD
 5399  cd build
 5400  make
 5401  cd ..
 5402  git status
 5403  gprav
 5404  gst
 5405  git checkout Master_2.0 
 5406  ls -lart
 5407  clear
 5408  nvim .
 5409  ll
 5410  cd applications
 5411  ll
 5412  cp -f ../../plat_tmp_work/platform/feed_publisher .
 5413  cp -r ../../plat_tmp_work/platform/feed_publisher .
 5414  cp -r ../../plat_tmp_work/platform/core .
 5415  cp -r ../../plat_tmp_work/platform/infra .
 5416  make
 5417  cd build
 5418  make
 5419  conan --version
 5420  which conan
 5421  conan remote -v
 5422  conan remote 
 5423  conan remote -h
 5424  conan remote list
 5425  cd 
 5426  cd Downloads
 5427  ll
 5428  ls -lart
 5429  ll
 5430  gunzip libs11n-1.2.10-nobuildfiles.zip
 5431  gunzip -gz libs11n-1.2.10-nobuildfiles.zip
 5432  unzip -h
 5433  unzip -h | grep -i gun
 5434  unzip -h | grep -i g
 5435  gunzip libs11n-1.2.10-nobuildfiles.zip
 5436  ll
 5437  gunzip -h
 5438  gunzip -d libs11n-1.2.10-nobuildfiles.zip
 5439  ll
 5440  clear
 5441  tmux attach -t muxy
 5442  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Release/generators/conan_toolchain.lscmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=On
 5443  \t\ti3-msg move workspace to output HDMI-2
 5444  \t\ti3-msg move workspace to output eDP-1
 5445  exit
 5446  make
 5447  nvim .
 5448  sudo pacman -Syu
 5449  yay -Syu
 5450  sudo systemctl reboot
 5451  \t\ti3-msg move workspace to output HDMI-2
 5452  tmux new -s muxy
 5453  nvim .
 5454  exit
 5455  cleasr
 5456  clear
 5457  cd build
 5458  make
 5459  ls -lart
 5460  ll
 5461  clersa
 5462  clear
 5463  ls -lart
 5464  exit
 5465  make
 5466  exit
 5467  cleasr
 5468  ll
 5469  ll dockerfiles
 5470  ll
 5471  git remote -v
 5472  systemctl status openvpn-client@Blr-office-UDP4-1194-config
 5473  \tsudo systemctl reload-or-restart openvpn-client@Blr-office-UDP4-1194-config
 5474  systemctl status openvpn-client@Blr-office-UDP4-1194-config
 5475  clear
 5476  exit
 5477  clearaar
 5478  clear
 5479  ll
 5480  cd build
 5481  make
 5482  cd ..
 5483  nvim .
 5484  clear
 5485  ll
 5486  ls -lart
 5487  cleasr
 5488  sudo systemctl stop  openvpn-client@Blr-office-UDP4-1194-config
 5489  exit
 5490  clear
 5491  cledar
 5492  git status
 5493  gd
 5494  clear
 5495  ll
 5496  clear
 5497  ls -lart
 5498  tmux attach -t muxy
 5499  gst
 5500  gprav
 5501  nvim .
 5502  clear
 5503  pron
 5504  proj
 5505  cd simple_trading_platform
 5506  ll
 5507  cd libraries
 5508  ll
 5509  ll utility
 5510  sudo systemctl reboot
 5511  \tsudo pacman -Syu
 5512  clear
 5513  tmux new -s muxy
 5514  nvim .
 5515  clera
 5516  gprav
 5517  clear
 5518  gst
 5519  gprav
 5520  git remote -v
 5521  gst
 5522  nvim .
 5523  gst
 5524  git remote -v
 5525  exit
 5526  nvim .
 5527  history | grep stow
 5528  clear
 5529  nsep168
 5530  clear
 5531  nvim .
 5532  clear
 5533  \t\tconan install . --output-folder=build --build=missing 
 5534  ll
 5535  clear
 5536  nmcli device connect wlp0s20f3
 5537  nmcli device disconnect wlp0s20f3
 5538  nmcli device connect wlp0s20f3
 5539  ll
 5540  cd build
 5541  ll
 5542  cd build
 5543  cd ..
 5544  \t\tconan install . --output-folder=build --build=missing 
 5545  cd build
 5546  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Release/generators/conan_toolchain.lscmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=On
 5547  cmake --build .
 5548  cmake tests
 5549  cmake --test
 5550  make 
 5551  make test
 5552  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Release/generators/conan_toolchain.lscmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=On
 5553  make
 5554  make test
 5555  fzf
 5556  vim Makefile
 5557  \t\tconan install . --output-folder=build --build=missing 
 5558  clear
 5559  tmux new -s muxy
 5560  exit
 5561  git sttaus
 5562  gst
 5563  gprav
 5564  git fetch -a
 5565  git branch -a | grep recovery
 5566  git fetch -a
 5567  git branch -a | grep recov
 5568  git branch -a | grep -i recov
 5569  git checkout recovery
 5570  glog
 5571  nvim .
 5572  glog
 5573  clear
 5574  git diff 63f134c0  c21fadc1 \n > diff.txt
 5575  git diff 63f134c0  c21fadc1 >> diff.txt
 5576  cd ..
 5577  git status
 5578  gst
 5579  make
 5580  cd build
 5581  make
 5582  clear
 5583  tmux attach -t muxy
 5584  clear
 5585  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Release/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=On
 5586  cd build
 5587  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Release/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=On
 5588  make
 5589  gcc --version
 5590  \tconan list "*:*" | grep -i fmt
 5591  history | grep conana
 5592  history | grep conan
 5593  \tconan list "*:*" | grep -i fmt
 5594  conan cache path fmt/10.2.1
 5595  ll /home/akhil/.conan2/p/
 5596  ll /home/akhil/.conan2/p/fmtfd0fc8a6cd618
 5597  ll
 5598  cd -
 5599  ll /home/akhil/.conan2/p/fmtfd0fc8a6cd618
 5600  gcc --version
 5601  make
 5602  cd ..
 5603  cd tests/libraries/communication/ipc
 5604  ag -i details
 5605  cd ../../../
 5606  cd ../
 5607  cd libraries/communication/ipc
 5608  ag -i details
 5609  cd ..
 5610  cd tests
 5611  ll
 5612  cd ..
 5613  cd build
 5614  make
 5615  cd build
 5616  make
 5617  git status
 5618  clear
 5619  cd ..
 5620  gst
 5621  glog
 5622  git add dockerfiles/ libraries/communication/ libraries/ 
 5623  gst
 5624  git diff --cached
 5625  glog
 5626  git commit -m "[found|comm libs] fix ipc unit test cases and library refactoring"
 5627  gprav
 5628  git status
 5629  git push --force-with-lease origin HEAD
 5630  git status
 5631  gd
 5632  cd build
 5633  make
 5634  make test
 5635  nvim .
 5636  tmux attach -t muxy
 5637  nvim .
 5638  cd build
 5639  make
 5640  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Release/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=On
 5641  cp -f compile_commands.json ..
 5642  ll
 5643  ccls
 5644  fg
 5645  nvim .
 5646  ll
 5647  cd libraries/communication/ipc
 5648  ag -i ipc_api.h
 5649  ag -i ipc_api
 5650  ag -i ipc_api.h
 5651  tmux attach -t muxy
 5652  font
 5653  history | grep -i font
 5654  nvim .
 5655  git status
 5656  gst
 5657  git status
 5658  git diff
 5659  gst
 5660  git status
 5661  nvim .
 5662  clangd
 5663  gst
 5664  nvim .
 5665  cd build
 5666  make
 5667  which code
 5668  pacman -Rs code
 5669  sudo pacman -Rs code
 5670  history | grep -i pacman
 5671  sudo pacman -oRus
 5672  sudo pacman -Rus
 5673  yay -Syu visual-studio-code-bin
 5674  gst
 5675  cd build
 5676  cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=On ..
 5677  cp compile_commands.json ..
 5678  cd ..
 5679  nvim .
 5680  exit
 5681  clear
 5682  git status
 5683  gst
 5684  gd
 5685  gdt
 5686  gst
 5687  cd ..
 5688  git add libraries/ test
 5689  gst
 5690  git add libraries/ tests/
 5691  gst
 5692  glog
 5693  git commit -m "[lib|test] minor refactoring"
 5694  gprav
 5695  git push --force-with-lease origin HEAD
 5696  git status
 5697  cd build
 5698  make
 5699  man ag
 5700  cd ..
 5701  cd libraries/foundation/infraconfig
 5702  ag -i fmt
 5703  cd -
 5704  cd build
 5705  make
 5706  \t\ti3-msg move workspace to output HDMI-2
 5707  clesar
 5708  sudo pacman -Rus
 5709  sudo pacman -Ru
 5710  sudo pacman -R
 5711  sudo pacman -Syu
 5712  clear
 5713  sudo systemctl reboot
 5714  \t\ti3-msg move workspace to output HDMI-2
 5715  exit
 5716  cleasr
 5717  tmux attach -t muxy
 5718  tmux new -s muxy
 5719  nvim .
 5720  nvim .
 5721  gpra
 5722  gprav
 5723  git push --force-with-lease origin HEAD
 5724  ll
 5725  exit
 5726  cleasr
 5727  exit
 5728  \tsudo systemctl reload-or-restart openvpn-client@Blr-office-UDP4-1194-config
 5729  sudo systemctl stop  openvpn-client@Blr-office-UDP4-1194-config
 5730  systemctl status openvpn-client@Blr-office-UDP4-1194-config
 5731  sudo systemctl stop  openvpn-client@Blr-office-UDP4-1194-config
 5732  systemctl status openvpn-client@Blr-office-UDP4-1194-config
 5733  \tsudo systemctl reload-or-restart openvpn-client@Blr-office-UDP4-1194-config
 5734  \tsudo systemctl start openvpn-client@Blr-office-UDP4-1194-config
 5735  systemctl status openvpn-client@Blr-office-UDP4-1194-config
 5736  \t\ti3-msg move workspace to output HDMI-2
 5737  clear
 5738  tmux new - s muxy
 5739  cleasr
 5740  fg
 5741  cleasr
 5742  tmux new -s muxy
 5743  clear
 5744  gprav
 5745  gst
 5746  gd
 5747  \t\ti3-msg move workspace to output eDP-1
 5748  exit
 5749  gprav
 5750  nvim .
 5751  gst
 5752  git restore adapters/
 5753  gst
 5754  gprav
 5755  gst
 5756  git checkout akhil/nse_feed_recovery
 5757  gprav
 5758  nvim .
 5759  cd build
 5760  cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=On ..
 5761  cp -f compile_commands.json ..
 5762  cd ..
 5763  nvim .
 5764  cd build
 5765  history | grep -i conan
 5766  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Release/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=On
 5767  make
 5768  gst
 5769  cd ..
 5770  git restore libraries/
 5771  gst
 5772  cd build
 5773  make
 5774  gcc --version
 5775  cd ..
 5776  nvim .
 5777  gcc --version
 5778  clear
 5779  \t\ti3-msg move workspace to output HDMI-2
 5780  exit
 5781  tmux ls
 5782  tmux attach -t muxy
 5783  make
 5784  cd build
 5785  make
 5786  make test
 5787  cd ..
 5788  gprav
 5789  nvim .
 5790  clear
 5791  dev132
 5792  docker --version
 5793  \t\tdocker buildx build -f dockerfiles/Dockerfile.ubuntu1804_00  -t platu1804-build .
 5794  \t\tdocker buildx build -f dockerfiles/ubuntu2204.dockerfile -t stp-build
 5795  \t\tdocker  build -f dockerfiles/ubuntu2204.dockerfile -t stp-build
 5796  \t\tdocker buildx build -f dockerfiles/Dockerfile.ubuntu_2204 -t stp-build
 5797  \t\tdocker build -f dockerfiles/Dockerfile.ubuntu_2204 -t stp-build
 5798  alias gprav
 5799  \t\tdocker build -f dockerfiles/Dockerfile.ubuntu_2204 -t stp-build
 5800  \t\tdocker build -f dockerfiles/Dockerfile.ubuntu_2204
 5801  docker build -f dockerfiles/Dockerfile.ubuntu_2204 -t .
 5802  docker build -f dockerfiles/Dockerfile.ubuntu_2204 -t stp-du2204 .
 5803  gprav
 5804  nvim .
 5805  g++ --version
 5806  gcc --version 
 5807  cmake --version
 5808  gdb --version
 5809  ld --version
 5810  lsb_release -o
 5811  lsb_release -a
 5812  uname -a
 5813  run-help conan
 5814  run-help cmake
 5815  make
 5816  \tcd build
 5817  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Release/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=On
 5818  maKE
 5819  make
 5820  cmake --build
 5821  cmake --build .
 5822  cmake --test .
 5823  cmake --test 
 5824  cmake --tests
 5825  make test
 5826  make
 5827  cd libraries/communication/events
 5828  ldd libstp-comm-events.a
 5829  ll
 5830  cd -
 5831  cd tests/libraries/communication/events
 5832  ll
 5833  ldd events_tests
 5834  conan --version
 5835  cd -
 5836  cd ..
 5837  clear
 5838  echo '#!/bin/bash\n\\nset -e\n\\n# Detect system profile\n\\nconan profile detect --force\n\\n# Modify profile to enable C++20\n\\nconan profile update settings.compiler.cppstd=20 default\n\\n# Install dependencies\n\\nconan install . --output-folder=build --build=missing\n\\n# Configure and build\n\\ncd build\n\\ncmake .. -DCMAKE_TOOLCHAIN_FILE=build/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=On\n\\ncmake --build .\n\\n# Run tests\n\\nctest --output-on-failure\n\\n# Return to app directory\n\\ncd ..\n\\necho "Build and tests completed successfully."\n\\nexec /bin/bash\n' > /app/build_and_run.sh
 5839  echo '#!/bin/bash\n\\nset -e\n\\n# Detect system profile\n\\nconan profile detect --force\n\\n# Modify profile to enable C++20\n\\nconan profile update settings.compiler.cppstd=20 default\n\\n# Install dependencies\n\\nconan install . --output-folder=build --build=missing\n\\n# Configure and build\n\\ncd build\n\\ncmake .. -DCMAKE_TOOLCHAIN_FILE=build/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=On\n\\ncmake --build .\n\\n# Run tests\n\\nctest --output-on-failure\n\\n# Return to app directory\n\\ncd ..\n\\necho "Build and tests completed successfully."\n\\nexec /bin/bash\n' > build_and_run.sh\n
 5840  chmod u+x build_and_run.sh
 5841  gst
 5842  docker build -f dockerfiles/Dockerfile.ubuntu_2204 -t stp-du2204 .
 5843  conan --version
 5844  pip install conan version==2.13.0
 5845  docker build -f dockerfiles/Dockerfile.ubuntu_2204 -t stp-du2204 .
 5846  rm -rf build
 5847  docker build -f dockerfiles/Dockerfile.ubuntu_2204 -t stp-du2204 .
 5848  conan profile update settings.compiler.cppstd=20 default\
 5849  conan profile update settings.compiler.cppstd=20 default
 5850  docker build -f dockerfiles/Dockerfile.ubuntu_2204 -t stp-du2204 .
 5851  gst
 5852  glog
 5853  git add CMakeLists.txt build.sh dockerfiles/ libraries/ build_and_run.sh docker-compose.yaml
 5854  gst
 5855  git commit -m "[docker|lib|buildscripts] update dockerfiles to build project in docker-container. minor refactoring in util libs"
 5856  gprav
 5857  git push --force-with-lease origin HEAD
 5858  dev132
 5859  exit
 5860  dev132
 5861  gst
 5862  git add dockerfiles/
 5863  git commit -m --amend
 5864  git commit --amend
 5865  git push --force-with-lease origin HEAD
 5866  which conan
 5867  pacman -Syu conan
 5868  sudo 
 5869  sudo pacman -Syu conan
 5870  yay -Syu conan
 5871  pacman -Scc
 5872  sudo 
 5873  sudo pacman -Scc
 5874  git commit --amend
 5875  git push --force-with-lease origin HEAD
 5876  gst
 5877  git add dockerfiles/
 5878  git commit --amend
 5879  gst
 5880  gprav
 5881  git push --force-with-lease origin HEAD
 5882  conan install . --output-folder=build --build=missing
 5883  cd build
 5884  cmake .. -DCMAKE_TOOLCHAIN_FILE=$TOOLCHAIN_FILE -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=On -DCMAKE_CXX_STANDARD=20 -DCMAKE_CXX_STANDARD_REQUIRED=ON -DCMAKE_CXX_FLAGS="-std=c++20"
 5885  history | grep cmake
 5886  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Release/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=On
 5887  ll build/Release/generators
 5888  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Release/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=On
 5889  cd ..
 5890  rm -rf build
 5891  conan install . --output-folder=build --build=missing
 5892  cd build
 5893  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Release/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=On
 5894  make
 5895  cd .
 5896  gdt
 5897  gst
 5898  cd ..
 5899  git add libraries/
 5900  git commit -m "[lib|util] fix build errors in util libraries"
 5901  gprav 
 5902  gst
 5903  \t\ti3-msg move workspace to output eDP-1
 5904  exit
 5905  nvim .
 5906  gst
 5907  git add dockerfiles/Dockerfile.ubuntu_2204
 5908  git commit -m "[docker] fix docker image build (ubuntu 22.04)"
 5909  gprav
 5910  git push --force-with-lease origin HEAD
 5911  pwd
 5912  ll
 5913  cd ..
 5914  ll
 5915  nvim .
 5916  fg
 5917  tmux attach -t muxy
 5918  :wa
 5919  fg
 5920  nvim .
 5921  fg
 5922  tmux kill-server
 5923  tmux new -s muxy
 5924  nvim .
 5925  exit
 5926  tmux kill-server
 5927  tmux new -s muxy
 5928  nvim .
 5929  tmux kill-session muxy
 5930  tmux kill-session 
 5931  tmux ls
 5932  tmux kill-server
 5933  clear
 5934  tmux ls
 5935  tmux new -s muxy
 5936  nvim .
 5937  tmux kill-session 
 5938  tmux kill-server
 5939  tmux new -s muxy
 5940  nvim .
 5941  tmux kill-session 
 5942  tmux kill-server
 5943  tmux
 5944  nvim .
 5945  dev132
 5946  nvim .
 5947  yay -Syu conan
 5948  yay -Syu conan2
 5949  \tgst
 5950  git add dockerfiles/Dockerfile.archlinux
 5951  git commit -m "[docker] fix arch docker build"
 5952  gprav && git push --force-with-lease origin HEAD
 5953  glog
 5954  nvim .
 5955  gst
 5956  git push --force-with-lease origin HEAD
 5957  gst
 5958  git add dockerfiles/
 5959  git commit --amend
 5960  gprav
 5961  clear
 5962  git status
 5963  gst
 5964  git add dockerfiles/Dockerfile.archlinux
 5965  gst
 5966  glog
 5967  git commit --amend
 5968  git push --force-with-lease origin HEAD
 5969  gst
 5970  git rebase --continue
 5971  gst
 5972  git push --force-with-lease origin HEAD
 5973  gst
 5974  gprav
 5975  gst
 5976  git add dockerfiles/
 5977  git rebase --continue
 5978  git push --force-with-lease origin HEAD
 5979  gst
 5980  git add dockerfiles/Dockerfile.archlinux
 5981  git commit --amend
 5982  git push --force-with-lease origin HEAD
 5983  gst
 5984  gprav
 5985  gst
 5986  git add dockerfiles/Dockerfile.archlinux
 5987  gst
 5988  git add dockerfiles/
 5989  gst
 5990  git rebase --continue
 5991  git push --force-with-lease origin HEAD
 5992  gst
 5993  clear
 5994  gst
 5995  gprav
 5996  git add dockerfiles/
 5997  git commit --amend
 5998  gprav
 5999  gst
 6000  git add dockerfiles/
 6001  git rebase --continue
 6002  gst
 6003  git push --force-with-lease origin HEAD
 6004  exit
 6005  gst
 6006  glog
 6007  git add dockerfiles/
 6008  git commit -m "[docker] fix ubuntu 24.04's build"
 6009  gprav
 6010  git push --force-with-lease origin HEAD
 6011  clear
 6012  \tdocker build -f dockerfiles/Dockerfile.ubuntu_2404 -t u2404 .
 6013  :wa
 6014  \tdocker build -f dockerfiles/Dockerfile.ubuntu_2404 -t u2404 .
 6015  gst
 6016  git add dockerfiles/
 6017  gst
 6018  glog
 6019  git commit --amned
 6020  git commit --amend
 6021  gst
 6022  gprav
 6023  gst
 6024  git add dockerfiles/
 6025  git rebase --continue
 6026  gst
 6027  git push --force-with-lease origin HEAD
 6028  \t\tdocker build -f dockerfiles/Dockerfile.archlinux -t arch .
 6029  gst
 6030  gd
 6031  gst
 6032  git add dockerfiles/
 6033  git commit -m "[docker] fix conan2 in arch docker and minor refactoring" 
 6034  gprav
 6035  git push --force-with-lease origin HEAD
 6036  g++ --version
 6037  nvim .
 6038  gst
 6039  git add README.md dockerfiles/ mkdocs.yml test CONTRIBUTING.md applications/README.md playground/README.md
 6040  gst
 6041  git add README.md dockerfiles/ mkdocs.yml tests/README.md CONTRIBUTING.md applications/README.md playground/README.md
 6042  gst
 6043  git commit -m "[docs|readme] add initial documentation"
 6044  gst
 6045  git push --force-with-lease origin HEAD
 6046  exit
 6047  conan install . --output-folder=build --build=missing
 6048  cd build
 6049  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Release/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=On
 6050  cmake --build .
 6051  ctest 
 6052  cmake --build . --target coverage
 6053  cmake --build build --target coverage
 6054  ll
 6055  cmake --build build --target coverage
 6056  cd ..
 6057  rm -rf build
 6058  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Release/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=On
 6059  conan install . --output-folder=build --build=missing
 6060  cd build
 6061  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Release/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=On
 6062  ll
 6063  cp compile_commands.json ..
 6064  cmake --build .
 6065  ctest
 6066  cmake --build build --target coverage
 6067  cmake --build . --target coverage
 6068  lcov
 6069  pacman -Syu lcov
 6070  sudo pacman -Syu lcov
 6071  cmake --build . --target coverage
 6072  cmake --build build --target coverage
 6073  cd ..
 6074  pacman -Syu gcov
 6075  sudo pacman -Syu gcov
 6076  conan install . --output-folder=build --build=missing
 6077  cd build
 6078  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Release/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=On
 6079  make -j2
 6080  ctest
 6081  cmake --build build --target coverage
 6082  ll
 6083  ll build
 6084  ll build/Release
 6085  ll build/Release/generators
 6086  ll
 6087  cmake --build . --target coverage
 6088  cd ..
 6089  cmake -S . -B build -DENABLE_COVERAGE=ON
 6090  cmake --build build --clean-first
 6091  cd build && ctest --output-on-failure
 6092  cd ..
 6093  cmake --build build --target coverage
 6094  cmake -S . -B build -DENABLE_COVERAGE=ON
 6095  cmake --build build --clean-first
 6096  cd build && ctest --output-on-failure
 6097  cd ..
 6098  cmake --build build --target coverage
 6099  cd build
 6100  find build -name "*.gcda"
 6101  cd ..
 6102  find build -name "*.gcda"
 6103  gst
 6104  git add CMakeLists.txt
 6105  git commit -m "[cmake] add lcov test coverge"
 6106  gprav
 6107  git push --force-with-lease origin HEAD
 6108  gst
 6109  gprav
 6110  glog
 6111  cd build
 6112  make
 6113  gst
 6114  gprav
 6115  make
 6116  make test
 6117  gource .
 6118  tmux new -s muxy
 6119  tmux attach -t muxy
 6120  cmake --build . --target coverage
 6121  make
 6122  systemctl status openvpn-client@Blr-office-UDP4-1194-config
 6123  \tsudo systemctl start openvpn-client@Blr-office-UDP4-1194-config
 6124  clear
 6125  cleasr
 6126  \tsudo systemctl start openvpn-client@Blr-office-UDP4-1194-config
 6127  nvim .
 6128  gprav
 6129  gst
 6130  gprav
 6131  gd
 6132  gst
 6133  cd build
 6134  \tcmake ..  -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=On
 6135  cp -f compile_commands.json ..
 6136  cd ..
 6137  nvim .
 6138  cd infra
 6139  ll
 6140  cd include
 6141  ll
 6142  cd infra
 6143  ll
 6144  cat *.h >> ../../infra_source.txt
 6145  cd details
 6146  cat *.h >> ../../../infra_source.txt
 6147  cd ../../../
 6148  ll
 6149  cd src
 6150  ll
 6151  cat *.cpp > ../infra_source.txt
 6152  cd build
 6153  cmake --build . --target coverage
 6154  time
 6155  cd oms
 6156  ll
 6157  ag -i main src -l
 6158  ag -i 'main\(' src -l
 6159  cd ../engine
 6160  ag -i 'main\(' src -l
 6161  clear
 6162  dev132
 6163  node
 6164  dev132
 6165  which lcove
 6166  which lcov
 6167  clesar
 6168  exit
 6169  clear
 6170  tmux attach -t muxy
 6171  tmux new -s muxy
 6172  nvim .
 6173  cleart
 6174  clear
 6175  gst
 6176  git diff
 6177  systemctl status openvpn-client@Blr-office-UDP4-1194-config
 6178  \tsudo systemctl start openvpn-client@Blr-office-UDP4-1194-config
 6179  systemctl status openvpn-client@Blr-office-UDP4-1194-config
 6180  git status
 6181  cd build
 6182  make
 6183  ctest
 6184  cd ..
 6185  git status
 6186  git fetch -a
 6187  gst
 6188  git brach -a
 6189  git branch -a
 6190  git checkout -b akhil/oms_integration
 6191  gst
 6192  gprav
 6193  cd build
 6194  \tcmake ..  -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=On
 6195  cp -f compile_commands.json ..
 6196  cd ..
 6197  cp -f oms ../../simple_trading_platform/applications/oms
 6198  cp -r oms ../../simple_trading_platform/applications/oms
 6199  nvim .
 6200  cd build
 6201  make
 6202  sudo systemctl stop  openvpn-client@Blr-office-UDP4-1194-config
 6203  systemctl status openvpn-client@Blr-office-UDP4-1194-config
 6204  pacman -Syu
 6205  sudo 
 6206  sudo pacman -Syu
 6207  yay -Syu
 6208  yay -Syu --noconfirm
 6209  cd build
 6210  \tcmake ..  -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=On
 6211  cp -f compile_commands.json ..
 6212  tmux attach -t muxy
 6213  git status
 6214  gd
 6215  cd oms
 6216  ag -i core -l
 6217  ag -i core -l include
 6218  ag -i core include
 6219  ll
 6220  cctx
 6221  \t\t\t./run.py --source ~/files/projects/plat_tmp_work/platform/core  --output ~/files/learn/codectx_out/core.txt
 6222  \t\t\t./run.py --source ~/files/projects/plat_tmp_work/platform/core/include  --output ~/files/learn/codectx_out/core_inc.txt
 6223  \t\t\t./run.py --source ~/files/projects/plat_tmp_work/platform/core/src  --output ~/files/learn/codectx_out/core_src.txt
 6224  \t\t\t./run.py --source ~/files/projects/plat_tmp_work/platform/core/test  --output ~/files/learn/codectx_out/core_test.txt
 6225  cd -
 6226  nvim .
 6227  gst
 6228  cd ..
 6229  pwd
 6230  ll
 6231  mv -f ../plat_tmp_work/platform/core applications/core
 6232  ll applications/core
 6233  rm -rf applications/core
 6234  mv -f ../plat_tmp_work/platform/core applications/
 6235  mv -f ../plat_tmp_work/platform/core applications/core/
 6236  gprav
 6237  git restore
 6238  gst
 6239  cd ..
 6240  git restore core
 6241  gst
 6242  cp -r ../plat_tmp_work/platform/core applications/core/
 6243  cp -r ../plat_tmp_work/platform/infra applications/infra/
 6244  cp -r ../plat_tmp_work/platform/rms applications/rms
 6245  cp -r ../plat_tmp_work/platform/oms applications/oms
 6246  gst
 6247  cd build
 6248  make
 6249  :wa
 6250  make
 6251  cd ..
 6252  cd libraries/infra
 6253  ag -i itt
 6254  ag -i ittnot
 6255  cmake --version
 6256  nvim .
 6257  cd -
 6258  cctx
 6259  \t\t\t\t./run.py --source ~/files/projects/plat_tmp_work/platform/cmake --output ~/files/learn/codectx_out/cmake.txt
 6260  cd ../../build
 6261  make
 6262  cd ..
 6263  conan install . --output-folder=build --build=missing
 6264  cmake -S . -B build -DENABLE_COVERAGE=ON
 6265  cd cmake
 6266  ag -i git_cmd
 6267  make
 6268  cd build
 6269  cd ..
 6270  cmake -S . -B build -DENABLE_COVERAGE=ON
 6271  cmake -B build --build
 6272  cmake --build -B build
 6273  cd build
 6274  cd ..
 6275  cmake --build build
 6276  make
 6277  cd build
 6278  make
 6279  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Release/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=On
 6280  MAKE
 6281  make
 6282  run-help 1
 6283  cd ..
 6284  conan install . --output-folder=build --build=missing
 6285  cd build
 6286  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Release/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=On
 6287  make 
 6288  cd ..
 6289  ag -i magic_
 6290  ag -i magic_ -l
 6291  cd build
 6292  make
 6293  pacman -Ss fmt 
 6294  pacman -Ss fmt --list
 6295  pacman --list fmt
 6296  pacman -Qs fmt
 6297  history | grep -i pacman | uniq
 6298  pacman -Rus fmt
 6299  sudo pacman -Rus fmt
 6300  sudo pacman -R fmt
 6301  sudo pacman -R libfmt
 6302  sudo pacman -R bear
 6303  sudo pacman -R libfmt
 6304  sudo pacman -R fmt
 6305  sudo pacman -R libfmt.so=11-64
 6306  sudo pacman -Rsn fmt
 6307  sudo pacman -Rsn spdlog
 6308  sudo pacman -Rsn fmt
 6309  make
 6310  cd ..
 6311  rm -rf build
 6312  conan install . --output-folder=build --build=missing
 6313  cmake -S . -B build -DENABLE_COVERAGE=ON
 6314  gst
 6315  exit
 6316  gst
 6317  nvim .
 6318  cmake --version
 6319  conan install . --output-folder=build --build=missing
 6320  cd build
 6321  ll
 6322  cd ..
 6323  cmake -S . -B build -DENABLE_COVERAGE=ON
 6324  rm -rf build
 6325  conan install . --output-folder=build --build=missing
 6326  nsep241
 6327  mcxp7
 6328  mcxp16
 6329  conan install . --output-folder=build --build=missing
 6330  cd libraries/infra
 6331  ag -i capn
 6332  cd ..
 6333  cd libraries
 6334  cd ..
 6335  conan install . --output-folder=build --build=missing
 6336  :wa
 6337  conan install . --output-folder=build --build=missing
 6338  cmake -S . -B build -DENABLE_COVERAGE=ON
 6339  conan install . --output-folder=build --build=missing
 6340  cmake -S . -B build -DENABLE_COVERAGE=ON
 6341  rm -rf build
 6342  conan install . --output-folder=build --build=missing
 6343  cd build
 6344  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Release/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=On
 6345  cmake --build .
 6346  cp compile_commands.json ..
 6347  nvim .
 6348  cd build
 6349  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Release/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=On
 6350  make
 6351  cd ..
 6352  gst
 6353  git add libraries/
 6354  gst
 6355  git add conanfile.txt conanfile.py
 6356  git commit -m "[infra] initial setup/build"
 6357  gprav 
 6358  git push --force-with-lease origin HEAD
 6359  cd build
 6360  make
 6361  nvim .
 6362  cd oms
 6363  ag -i feed_publisher -l
 6364  ag -i feed_publisher 
 6365  ag -i feed_publisher include
 6366  clear
 6367  make
 6368  cleasr
 6369  sudo pacman -Syu
 6370  yay -Syu
 6371  clear
 6372  exit
 6373  clear
 6374  tmux new -s muxy
 6375  nvim .
 6376  cd build
 6377  make
 6378  cctx
 6379  ll
 6380  rm -rf codectx_20250*
 6381  \t\t\t\t\t./run.py --source ~/files/projects/plat_tmp_work/platform/infra/include/infra --output ~/files/learn/codectx_out/infra_inc.txt
 6382  git status
 6383  gst
 6384  cd -
 6385  nvim .
 6386  git status
 6387  cd build
 6388  ll
 6389  cd ..
 6390  rm -rf build
 6391  mkdir build
 6392  cmake -B build -S .
 6393  cmake -B build -S . -DCMAKE_EXPORT_COMILE_COMMANDS=ON
 6394  cmake -B build -S . -DCMAKE_EXPORT_COMPILE_COMMANDS=ON
 6395  cp build/compile_commands.json .
 6396  rm -rf build
 6397  nvim .
 6398  cd ../libraries/infra
 6399  ag -i format_to
 6400  ag -i "fmt::internal" -l
 6401  ag -i "fmt::internal" 
 6402  ag -i fmt::memory_buffer
 6403  cd ../../build
 6404  MAKE
 6405  make
 6406  cd ../libraries/infra
 6407  ag -i format_to
 6408  ag -i options_description -l
 6409  ag -i options_description 
 6410  cd -
 6411  make
 6412  :wa
 6413  cd -
 6414  clear
 6415  ag -i format_to
 6416  cd -
 6417  make
 6418  cd bb
 6419  cd ..
 6420  conan install . --output-folder=build --build=missing
 6421  cd build
 6422  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Release/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=On
 6423  make
 6424  exit
 6425  cd ..
 6426  conan install . --output-folder=build --build=missing
 6427  cd build
 6428  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Release/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=On
 6429  make
 6430  cd ..
 6431  git submodule add https://github.com/brandenburg/feather-trace external/feather-trace
 6432  conan install . --output-folder=build --build=missing
 6433  cd build
 6434  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Release/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=On
 6435  make
 6436  cd ..
 6437  conan install . --output-folder=build --build=missing
 6438  cd build
 6439  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Release/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=On
 6440  make
 6441  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Release/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=On
 6442  make
 6443  cd ..
 6444  rm -rf build
 6445  conan install . --output-folder=build --build=missing
 6446  cd build
 6447  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Release/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=On
 6448  cd ..
 6449  ll
 6450  cd external/feather-trace
 6451  make
 6452  tmux new -s muxy
 6453  tmux attach -t muxy
 6454  exit
 6455  make all
 6456  git submodule status
 6457  gst
 6458  cd ..
 6459  gst
 6460  git submodule status
 6461  git submodule deinit feather-trace
 6462  cd ..
 6463  git submodule status
 6464  git submodule deinit external/feather-trace
 6465  git submodule deinit external/feather-trace -f
 6466  git submodule deinit -f  external/feather-trace 
 6467  gst
 6468  gd
 6469  git status
 6470  gd
 6471  gst
 6472  cd build
 6473  make
 6474  cd ..
 6475  rm -rf build
 6476  conan install . --output-folder=build --build=missing
 6477  cd build
 6478  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Release/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=On
 6479  cd ..
 6480  rm -rf external
 6481  conan install . --output-folder=build --build=missing
 6482  cd build
 6483  make
 6484  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Release/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=On
 6485  make
 6486  proj
 6487  cctx
 6488  \t\t\t\t\t\t./run.py --source ~/files/projects/simple_trading_platform/libraries/infra/include/infra/perf --output ~/files/learn/codectx_out/infra_perf_inc.txt
 6489  \t\t\t\t\t\t./run.py --source ~/files/projects/simple_trading_platform/libraries/infra/src/perf --output ~/files/learn/codectx_out/infra_perf_src.txt
 6490  \t\t\t\t\t\t./run.py --source ~/files/projects/simple_trading_platform/libraries/infra/test/perf --output ~/files/learn/codectx_out/infra_perf_test.txt
 6491  \t\t\t\t\t\t./run.py --source ~/files/projects/simple_trading_platform/libraries/infra/bench --output ~/files/learn/codectx_out/infra_bench.txt
 6492  exit
 6493  cat infra_perf_inc.txt infra_perf_src.txt infra_perf_test.txt infra_bench.txt infra_perf.txt
 6494  cat infra_perf_inc.txt infra_perf_src.txt infra_perf_test.txt infra_bench.txt >> infra_perf.txt
 6495  clear
 6496  cd build
 6497  make
 6498  clear
 6499  exit
 6500  git status
 6501  cd build
 6502  make
 6503  clear
 6504  nvim .
 6505  make
 6506  cd ..
 6507  conan install . --output-folder=build --build=missing
 6508  cd build
 6509  make
 6510  gst
 6511  tmux attach -t muxy
 6512  nvim .
 6513  gst
 6514  conan install . --output-folder=build --build=missing
 6515  cd build
 6516  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Release/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=On
 6517  make
 6518  which wayland
 6519  which xorg
 6520  which Xorg
 6521  which wayland-scanner
 6522  wayland-scanner
 6523  systemctl status exit
 6524  exit
 6525  cp ~/Downloads/tracy.pdf attachments/
 6526  cd ..
 6527  conan install . --output-folder=build --build=missing
 6528  cd build
 6529  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Release/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=On 
 6530  MAKE
 6531  make
 6532  fg
 6533  nvim .
 6534  tmux attach -t muxy
 6535  cd libraries/infra
 6536  ag  -i feather -l
 6537  ag  -i feather 
 6538  ag -i ft_buffer
 6539  cd
 6540  cd .con
 6541  cd .config
 6542  ll
 6543  cd
 6544  cd .con
 6545  cd .config
 6546  nvim .
 6547  man 403
 6548  nvim .
 6549  cd ../../
 6550  cp build/compile_commands.json .
 6551  nvim .
 6552  cd -
 6553  cfg
 6554  gst
 6555  git add lazyvim/ tmux/ 
 6556  gst
 6557  git commit -m "[lazyvim|tmux] minor update"
 6558  gprav
 6559  git push --force-with-lease origin HEAD
 6560  gst
 6561  nvim .
 6562  gst
 6563  gprav
 6564  systemctl status openvpn-client@Blr-office-UDP4-1194-config
 6565  \tsudo systemctl start openvpn-client@Blr-office-UDP4-1194-config
 6566  systemctl status openvpn-client@Blr-office-UDP4-1194-config
 6567  \tsudo systemctl start openvpn-client@Blr-office-UDP4-1194-config
 6568  systemctl status openvpn-client@Blr-office-UDP4-1194-config
 6569  \tsudo systemctl start openvpn-client@Blr-office-UDP4-1194-config
 6570  systemctl status openvpn-client@Blr-office-UDP4-1194-config
 6571  \tsudo systemctl restart openvpn-client@Blr-office-UDP4-1194-config
 6572  systemctl status openvpn-client@Blr-office-UDP4-1194-config
 6573  gprav
 6574  systemctl status openvpn-client@Blr-office-UDP4-1194-config
 6575  \tsudo systemctl restart openvpn-client@Blr-office-UDP4-1194-config
 6576  systemctl status openvpn-client@Blr-office-UDP4-1194-config
 6577  \tsudo systemctl reload-or-restart openvpn-client@Blr-office-UDP4-1194-config
 6578  systemctl status openvpn-client@Blr-office-UDP4-1194-config
 6579  clear
 6580  exit
 6581  clear
 6582  gst
 6583  nvim .
 6584  gprav
 6585  gst
 6586  git branch
 6587  glog
 6588  clear
 6589  git status
 6590  cd build
 6591  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Release/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=On 
 6592  make
 6593  cd build
 6594  make
 6595  gst
 6596  make
 6597  cd ..
 6598  gst
 6599  git add CMakeLists.txt applications/ conanfile.py external/feather-trace libraries/ playground/
 6600  gst
 6601  git commit -m "[libinfra|conan|docs] add and update infra library (build failing). Update conanfile.txt to conanfile.py"
 6602  git commit --amend
 6603  gprav
 6604  git push --set-upstream origin/akhil/oms_integration
 6605  git push --set-upstream origin akhil/oms_integration
 6606  gprav
 6607  git push --set-upstream origin akhil/oms_integration
 6608  cd build
 6609  make
 6610  nvim .
 6611  ag -i benchmark --cpp -l
 6612  \t\ti3-msg move workspace to output HDMI-2
 6613  clear
 6614  tmux attach -t muxy
 6615  clear
 6616  \t\ti3-msg move workspace to output HDMI-2
 6617  exit
 6618  cd..
 6619  gst
 6620  gd
 6621  which firefox
 6622  firefox --version
 6623  git brachg
 6624  git brach
 6625  git branch
 6626  nvim .
 6627  cd core/include/core/market_book
 6628  ll
 6629  ag -i priority --cpp -l
 6630  ag -i priority --cpp 
 6631  git branch
 6632  gst
 6633  git brnch
 6634  git branch
 6635  git branhc
 6636  git branch
 6637  make
 6638  cd ..
 6639  ll
 6640  cd include
 6641  ag -i perf 
 6642  history | grep -i ag
 6643  ag -i perf infra/events
 6644  make
 6645  cd ..
 6646  conan install . --output-folder=build --build=missing
 6647  cd build
 6648  make
 6649  ag -i details
 6650  make
 6651  clear
 6652  fg
 6653  nvim .
 6654  cd build
 6655  make
 6656  gst
 6657  glog
 6658  gst
 6659  cd ..
 6660  gsdt
 6661  gst
 6662  git add libraries/
 6663  gst
 6664  git restore applications/infra/
 6665  gd conanfile.py
 6666  gst
 6667  git add conanfile.
 6668  git add conanfile.py
 6669  gst
 6670  git commit -m "[libinfra|conan] incremental update to fix infra's build"
 6671  gprav 
 6672  git push --force-with-lease origin HEAD
 6673  cd -
 6674  cd b
 6675  cd build
 6676  make
 6677  proj
 6678  git clone https://github.com/brandenburg/feather-trace.git
 6679  cd feather-trace
 6680  make
 6681  proj
 6682  gst
 6683  git clone https://github.com/neerajkr/timestamp-decoder.git
 6684  cd timestamp-decoder
 6685  ll
 6686  make clean all
 6687  make
 6688  gst
 6689  cd ..
 6690  git add libraries/
 6691  git commit -m "[infralib] minor commits" 
 6692  gprav 
 6693  make
 6694  cd build
 6695  make
 6696  gst
 6697  gd
 6698  cd ../libraries/infra/include/infra/http_server
 6699  ag -i log
 6700  cd -
 6701  make
 6702  ?building
 6703  make
 6704  imake
 6705  make
 6706  make > build.out
 6707  make 2>&1 | tee build.out
 6708  cd ..
 6709  cp -f ../plat_tmp_work/platform/core/include/core/market_book libraries/business/marketbook/include/marketbook
 6710  cp -r ../plat_tmp_work/platform/core/include/core/market_book libraries/business/marketbook/include/marketbook
 6711  cp -r ../plat_tmp_work/platform/core/src/market_book libraries/business/marketbook/sources/
 6712  gst
 6713  git add libraries/
 6714  gst
 6715  git commit -m "[liborderbook] add market book lib and it's readme"
 6716  gprav
 6717  git push --force-with-lease origin HEAD
 6718  cd build
 6719  make
 6720  make 2>&1 | tee build.out
 6721  make
 6722  make 2>&1 | tee build.out
 6723  exit
 6724  cd ../libraries/infra
 6725  ag -i boost
 6726  ag -i mpl
 6727  ag -i mpl_
 6728  cd ../../..
 6729  cd -
 6730  cd ../..
 6731  conan install . --output-folder=build --build=missing
 6732  cd build
 6733  cd ..
 6734  rm -rf build
 6735  conan install . --output-folder=build --build=missing
 6736  cd build
 6737  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Release/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=On 
 6738  make
 6739  gst
 6740  gd
 6741  gst
 6742  cd ..
 6743  gst
 6744  git add applications/infra/ 
 6745  git rm applications/infra
 6746  git restore applications/
 6747  gst
 6748  git restore libraries/
 6749  git commit -m "[application] delete infra copy"
 6750  gst
 6751  git add applications/
 6752  gst
 6753  git commit -m "[application] remove copied source"
 6754  gst
 6755  gprav
 6756  git push --force-with-lease origin HEAD
 6757  conan install . --output-folder=build --build=missing
 6758  cd build
 6759  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Release/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=On 
 6760  make
 6761  cd build
 6762  make
 6763  cd ..
 6764  make
 6765  clear
 6766  exit
 6767  gst
 6768  git checkout master
 6769  gprav
 6770  fg
 6771  nvim .
 6772  conan install . --output-folder=build --build=missing
 6773  cd build
 6774  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Release/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=On 
 6775  gst
 6776  make
 6777  cd ..
 6778  rm -rf build
 6779  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Release/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=On 
 6780  conan install . --output-folder=build --build=missing
 6781  cd build
 6782  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Release/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=On 
 6783  make
 6784  cd ..
 6785  rm -rf build
 6786  conan install . --output-folder=build --build=missing
 6787  cd build
 6788  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Release/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=On 
 6789  make
 6790  rm -rf *
 6791  make
 6792  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Release/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=On 
 6793  cd ..
 6794  conan install . --output-folder=build --build=missing
 6795  cd build
 6796  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Release/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=On 
 6797  make
 6798  cd ..
 6799  mv ../plat_tmp_work/platform/config_data_test.cpp ../plat_tmp_work/platform/default_config_var_resolver_test.cpp tests/libraries/foundation/infraconfig/sources
 6800  conan install . --output-folder=build --build=missing
 6801  cd build
 6802  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Release/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=On 
 6803  make
 6804  ctest
 6805  make
 6806  ctest
 6807  cd ..
 6808  rm -rf build
 6809  conan install . --output-folder=build --build=missing
 6810  cd build
 6811  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Release/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=On 
 6812  make
 6813  ctest
 6814  make
 6815  ctest
 6816  cd ..
 6817  rm -rf build
 6818  conan install . --output-folder=build --build=missing
 6819  cd build
 6820  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Release/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=On 
 6821  make
 6822  ctest
 6823  kkcd ..
 6824  cd ..
 6825  rm -rf build
 6826  mkdir build
 6827  cd build
 6828  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Release/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=On 
 6829  cd ..
 6830  rm -rf build
 6831  conan install . --output-folder=build --build=missing
 6832  cd build
 6833  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Release/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=On 
 6834  make
 6835  ctest
 6836  cd ..
 6837  rm -rf build
 6838  conan install . --output-folder=build --build=missing
 6839  cd build
 6840  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Release/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=On 
 6841  make
 6842  ctest
 6843  cd ..
 6844  gst
 6845  git add libraries/foundation/ tests/
 6846  gst
 6847  glog
 6848  git commit -m "[lib|tests] add tests for infraconfig and minor refactoring"
 6849  gprav
 6850  git push --force-with-lease origin HEAD
 6851  conan install . --output-folder=build --build=missing
 6852  make
 6853  conan install . --output-folder=build --build=missing
 6854  cd build
 6855  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Release/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=On 
 6856  make
 6857  cd ..
 6858  rm -rf build
 6859  conan install . --output-folder=build --build=missing
 6860  cd build
 6861  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Release/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=On 
 6862  ll
 6863  cd ..
 6864  rm -rf build
 6865  conan install . --output-folder=build --build=missing
 6866  cd build
 6867  cd ..
 6868  ll build
 6869  cd build
 6870  ll
 6871  cd ..
 6872  ll
 6873  cmake -S . -B build -DENABLE_COVERAGE=ON
 6874  cd build
 6875  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Release/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=On 
 6876  ll
 6877  cd ..
 6878  rm -rf build
 6879  conan profile update settings.compiler.cppstd=20 default
 6880  history | grep -i profile
 6881  conan profile detec --force
 6882  conan profile detect --force
 6883  conan install . --output-folder=build --build=missing
 6884  cd build
 6885  ll
 6886  \tchmod u+x conanbuild
 6887  \tchmod u+x conanbuild.sh
 6888  ./conanbuild.sh
 6889  ll
 6890  cd ..
 6891  ll
 6892  pwd
 6893  gst
 6894  gd
 6895  cd build
 6896  ll
 6897  conan conanrun.sh
 6898  conan install . --output-folder=build --build=missing
 6899  cd ..
 6900  conan install . --output-folder=build --build=missing
 6901  cd build
 6902  ll
 6903  cd ..
 6904  rm -rf build
 6905  conan install . --output-folder=build --build=missing
 6906  ll build
 6907  ll
 6908  conan install . --output-folder=build --build=missing
 6909  ll build
 6910  rm -rf build
 6911  gst
 6912  gd
 6913  gst
 6914  git restore conanfile.txt
 6915  conan install . --output-folder=build --build=missing
 6916  cd build
 6917  ll
 6918  cd ..
 6919  gst
 6920  ll
 6921  nvim .
 6922  conan install . --output-folder=build --build=missing
 6923  cd build
 6924  ll
 6925  cd ..
 6926  rm -rf build
 6927  conan install . --output-folder=build --build=missing
 6928  cd build
 6929  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Release/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=On 
 6930  ls -lart
 6931  cd ..
 6932  gst
 6933  git statsh list
 6934  git stash list
 6935  git stash -m "push all to work"
 6936  gst
 6937  git checkout akhil/oms_integration
 6938  gst
 6939  rm conanfile.py
 6940  gst
 6941  git checkout akhil/oms_integration
 6942  gst
 6943  git checkout master
 6944  git stash pop
 6945  rm -rf build
 6946  conan install . --output-folder=build --build=missing
 6947  cd build
 6948  ll
 6949  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Release/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=On 
 6950  cd ..
 6951  rm -rf build
 6952  ll
 6953  conan install . --output-folder=build --build=missing
 6954  cd build
 6955  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Release/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=On 
 6956  pacman -Qs fmt
 6957  pacman -Qs gtest
 6958  sudo pacman -Rsn gtest
 6959  sudo sudo pacman -Rsn gtest
 6960  sudo pacman -Rsn gtest
 6961  gst
 6962  gd
 6963  make
 6964  cd ..
 6965  rm -rf build
 6966  conan install . --output-folder=build --build=missing
 6967  cd build
 6968  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Release/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=On 
 6969  make
 6970  cd ..
 6971  rm -rf build
 6972  conan install . --output-folder=build --build=missing
 6973  cd build
 6974  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Release/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=On 
 6975  make
 6976  ctest
 6977  make
 6978  cd ..
 6979  rm -rf build
 6980  conan install . --output-folder=build --build=missing
 6981  cd build
 6982  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Release/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=On 
 6983  make
 6984  cd ..
 6985  rm -rf build
 6986  conan install . --output-folder=build --build=missing
 6987  cd build
 6988  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Release/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=On 
 6989  make -j 2
 6990  cd ..
 6991  gst
 6992  git add CMakeLists.txt conanfile.txt conanfile.py tests/libraries/
 6993  gst
 6994  glog
 6995  git commit -m "[conan|cmake|test] migrate to conanfile.py based config, add gtest with conan"
 6996  gprav
 6997  git push --force-with-lease origin HEAD
 6998  fg
 6999  nvim .
 7000  conan install . --output-folder=build --build=missing
 7001  cd build
 7002  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Release/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=On 
 7003  cmake --build
 7004  cmake --build .
 7005  ctest
 7006  history | grep coverage
 7007  cmake --build . --target coverage
 7008  cmake --build . --target all test
 7009  cmake --build . --target coverage
 7010  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Release/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=On -DENABLE_COVERAGE=On
 7011  cmake --build . --target coverage
 7012  cmake --build . --target all test
 7013  cmake --build . --target coverage
 7014  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Release/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=On -DENABLE_COVERAGE=On
 7015  cmake --build . --target all test
 7016  cmake --build . --target coverage
 7017  which lcov
 7018  which genhtml
 7019  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Release/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=On -DENABLE_COVERAGE=On
 7020  cd ..
 7021  rm -rf build
 7022  conan install . --output-folder=build --build=missing
 7023  cd build
 7024  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Release/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=On -DENABLE_COVERAGE=On
 7025  cmake --build . --target all test
 7026  cmake --build . --target coverage
 7027  cmake --build . --target all test
 7028  cmake --build . --target coverage
 7029  cmake --build . --target all test
 7030  cmake --build . --target coverage
 7031  fg
 7032  nvim .
 7033  conan install . --output-folder=build --build=missing
 7034  cd build
 7035  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Release/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=On -DENABLE_COVERAGE=On
 7036  cmake --build . --target all test
 7037  cmake --build . --target coverage
 7038  ll
 7039  cd build
 7040  ll
 7041  cd ..
 7042  ll
 7043  tree .
 7044  cd ..
 7045  rm -rf build
 7046  conan install . --output-folder=build --build=missing
 7047  cd build
 7048  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Release/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=On -DENABLE_COVERAGE=On
 7049  cmake --build . --target all test
 7050  cmake --build . --target coverage
 7051  which gcov
 7052  cmake --build . --target all test
 7053  cmake --build . --target coverage
 7054  cd ..
 7055  rm -rf build
 7056  conan install . --output-folder=build --build=missing
 7057  cd build
 7058  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Release/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=On -DENABLE_COVERAGE=On
 7059  make
 7060  cmake --build . --target all test
 7061  cmake --build . --target coverage
 7062  fzf
 7063  locate
 7064  fzf -A
 7065  fzf -a
 7066  fzf 
 7067  fzf  -h
 7068  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Release/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=On -DENABLE_COVERAGE=On
 7069  cmake --build . --target all test
 7070  cmake --build . --target coverage
 7071  sudo pacman -Syu tracy
 7072  gprav
 7073  git push --force-with-lease origin HEAD
 7074  git status
 7075  gd
 7076  clear
 7077  git branch
 7078  git checkout akhil/infra-strip
 7079  git checkout -b  akhil/infra-strip
 7080  conan install . --output-folder=build --build=missing
 7081  cd ..
 7082  rm -rf build
 7083  conan install . --output-folder=build --build=missing
 7084  cd build
 7085  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Release/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=On -DENABLE_COVERAGE=On
 7086  make
 7087  ag -i multi_infram_main.h --cpp -l
 7088  ag -i multi_infra_main.h --cpp -l
 7089  ag -i infra_main.h --cpp -l
 7090  mv -f infra/infra_main ../../simple_trading_platform/libraries/foundation/app_main
 7091  mv -f infra/infra_src ../../simple_trading_platform/libraries/foundation/app_main
 7092  make
 7093  nvim .
 7094  git status
 7095  gd
 7096  gst
 7097  gd
 7098  gst
 7099  clear
 7100  cd build
 7101  make
 7102  cd ..
 7103  gprav
 7104  git branch
 7105  gst
 7106  gd
 7107  git stash
 7108  gst
 7109  git checkout master
 7110  gprav
 7111  conan install . --output-folder=build --build=missing
 7112  cd build
 7113  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Release/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=On -DENABLE_COVERAGE=On
 7114  cmake --build . --target all test
 7115  make
 7116  nsep241
 7117  cd ..
 7118  cd build
 7119  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Release/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=On -DENABLE_COVERAGE=On
 7120  make
 7121  cd ..
 7122  rm -rf build
 7123  conan install . --output-folder=build --build=missing
 7124  cd build
 7125  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Release/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=On -DENABLE_COVERAGE=On
 7126  cmake --build . --target all test
 7127  sudo pacman -Syu tracy
 7128  cmake --build . --target all test
 7129  tracy
 7130  sudo pacman -Syu tracy
 7131  yay -Syu tracy
 7132  clear
 7133  \t\ti3-msg move workspace to output HDMI-2
 7134  exit
 7135  omz update
 7136  \tsudo pacman -Syu 
 7137  tmux new -s muxy
 7138  nvim .
 7139  yay -Syu tracy
 7140  exit
 7141  cd build
 7142  cmake --build . --target all test
 7143  sudo systemctl reboot
 7144  nvim .
 7145  tracy
 7146  sudo pacman -S xorg-xwayland libxcb
 7147  env GDK_BACKEND=x11 QT_QPA_PLATFORM=xcb tracy
 7148  pacman -Qsy tracy
 7149  history | grep -i pacman
 7150  sudo pacman -Qs tracy
 7151  which tracy
 7152  yay -Qs tracy
 7153  env GDK_BACKEND=x11 QT_QPA_PLATFORM=xcb tracy
 7154  echo $XDG_SESSION_TYPE
 7155  yay -Rsn tracy
 7156  which tracy
 7157  yay -Syu tracy-x11 
 7158  yay -Syu tracy-x11 --noconfirm
 7159  tracy
 7160  tracy-x11
 7161  sudo systemctl reboot
 7162  clear
 7163  eixtxit
 7164  exit
 7165  tmux new -s muxy
 7166  nvim .
 7167  clear
 7168  cfg
 7169  gst
 7170  gprav
 7171  nvim .
 7172  tmux attach -t muxy
 7173  clear
 7174  gst
 7175  gprav
 7176  \tsudo systemctl reload-or-restart openvpn-client@Blr-office-UDP4-1194-config
 7177  gprav
 7178  systemctl status openvpn-client@Blr-office-UDP4-1194-config
 7179  gprav
 7180  omz update
 7181  \tsudo pacman -Syu 
 7182  cfg
 7183  nvim .
 7184  tmux new -s muxy
 7185  nvim .
 7186  clear
 7187  systemctl status openvpn-client@Blr-office-UDP4-1194-config
 7188  \tsudo systemctl reload-or-restart openvpn-client@Blr-office-UDP4-1194-config
 7189  systemctl status openvpn-client@Blr-office-UDP4-1194-config
 7190  \tsudo systemctl reload-or-restart openvpn-client@Blr-office-UDP4-1194-config
 7191  systemctl status openvpn-client@Blr-office-UDP4-1194-config
 7192  fg
 7193  nvim .
 7194  tmux kill-server
 7195  tmux new -s muxy
 7196  nvim .
 7197  tmux kill-server
 7198  tmux new -s muxy
 7199  nvim .
 7200  tmux kill-server
 7201  tmux new -s muxy
 7202  nvim .
 7203  gprav
 7204  gst
 7205  glog
 7206  gst
 7207  gd --cached
 7208  q
 7209  locate tracy
 7210  pacman -Syu locate
 7211  sudo pacman -Syu locate
 7212  locate tracy
 7213  sudo locate tracy
 7214  locate
 7215  tmux new -s muxy
 7216  nvim .
 7217  conan install . --output-folder=build --build=missing
 7218  cd build
 7219  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Release/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=On -DENABLE_COVERAGE=On
 7220  gst
 7221  nvim .
 7222  cd ..
 7223  nvim .
 7224  gst
 7225  conan install . --output-folder=build --build=missing
 7226  cd build
 7227  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Release/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=On -DENABLE_COVERAGE=On
 7228  gst
 7229  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Release/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=On -DENABLE_COVERAGE=On
 7230  cmake --build . --target all test
 7231  locate tracy
 7232  cd
 7233  fzf 
 7234  yay -Syu tracy-x11 --noconfirm
 7235  rm -rf  /usr/lib/debug/usr/bin/tracy-capture.debug 
 7236  sudo rm -rf  /usr/lib/debug/usr/bin/tracy-capture.debug 
 7237  sudo rm -rf  /usr/lib/debug/usr/bin/tracy-*
 7238  yay -Syu tracy-x11 
 7239  tracy-x11-debug
 7240  sudo rm -rf /usr/lib/debug/usr/bin/tracy.debug 
 7241  ll /usr/lib/debug/usr/bin/ | grep -i tracy
 7242  ll /usr/lib/debug/usr/bin/ 
 7243  yay -Syu tracy-x11 
 7244  cd -
 7245  cmake --build . --target all test
 7246  gd
 7247  gst
 7248  gd --cached
 7249  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Release/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=On -DENABLE_COVERAGE=On
 7250  cmake --build . --target all test
 7251  cd ..
 7252  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Release/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=On -DENABLE_COVERAGE=On -DTRACY_ENABLE=On
 7253  cd build
 7254  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Release/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=On -DENABLE_COVERAGE=On -DTRACY_ENABLE=On
 7255  cmake --build . --target all test
 7256  cd ..
 7257  conan install . --output-folder=build --build=missing
 7258  cd build
 7259  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Release/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=On -DENABLE_COVERAGE=On -DTRACY_ENABLE=On
 7260  make
 7261  make test
 7262  make
 7263  cd playground
 7264  ll
 7265  ./tracy_example
 7266  cd ../..
 7267  conan install . --output-folder=build --build=missing
 7268  cd build
 7269  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Release/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=On -DENABLE_COVERAGE=On -DTRACY_ENABLE=On
 7270  make
 7271  cd playground
 7272  ll
 7273  ./tracy_example
 7274  make
 7275  ./tracy_example
 7276  make
 7277  tracy -a
 7278  make
 7279  cd ..
 7280  make
 7281  exit
 7282  tmux attach -t muxy
 7283  cleasr
 7284  make
 7285  clear
 7286  gst
 7287  git status
 7288  git diff
 7289  nvim .
 7290  make
 7291  cd ..
 7292  rm -rf build
 7293  conan install . --output-folder=build --build=missing
 7294  cd build
 7295  ll
 7296  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Release/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=On -DENABLE_COVERAGE=On -DTRACY_ENABLE=On
 7297  cmake --build . --target all test
 7298  cd playground
 7299  ll
 7300  cd ..
 7301  cmake --build . --target all test
 7302  proj
 7303  git clone https://github.com/wolfpld/tracy.git
 7304  git status
 7305  cd tracy
 7306  nvim .
 7307  mkdir build
 7308  cd build
 7309  cmake ..
 7310  make
 7311  cmake --build . --target all test
 7312  gd
 7313  cleasr
 7314  cd ..
 7315  cd profiler
 7316  mdkir build
 7317  cd build
 7318  mkdir build
 7319  cd build
 7320  cmake ..
 7321  ls
 7322  ll
 7323  pwd
 7324  cmake --build . --target all
 7325  cmake --build . --target all test
 7326  nvim .
 7327  gst
 7328  ll
 7329  ./tracy-profiler
 7330  cd ..
 7331  gst
 7332  git status
 7333  proj
 7334  cd simple_trading_platform
 7335  gst
 7336  cd ..
 7337  gd
 7338  gst
 7339  git add libraries/ CMakeLists.txt playground/CMakeLists.txt tests/libraries/foundation/events/CMakeLists.txt test 
 7340  git add libraries/ CMakeLists.txt playground/CMakeLists.txt tests/libraries/foundation/events/CMakeLists.txt 
 7341  gst
 7342  git add tests
 7343  gst
 7344  git add playground/tracy_example.cpp
 7345  gst
 7346  glog
 7347  gst
 7348  git commit -m "[lib|app] add app/ lib with application main/context/cfg etc. minor refactoring and usage of tracy"
 7349  gst
 7350  gprav 
 7351  gst
 7352  git restore CMakeLists.txt
 7353  gst
 7354  git add CMakeLists.txt playground/
 7355  gst
 7356  git rebase --continue
 7357  git push --force-with-lease origin HEAD
 7358  conan install . --output-folder=build --build=missing
 7359  cd build
 7360  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Release/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=On -DENABLE_COVERAGE=On -DTRACY_ENABLE=On
 7361  cmake --build . --target all test
 7362  gst
 7363  cd ..
 7364  git add CMakeLists.txt playground/ playground/CMakeLists.txt playground/capnproto_usage.cpp
 7365  GST
 7366  gst
 7367  git commit -m "[playground] remove the dir as a cmake build target from the project. to be added back post error fix"
 7368  gprav
 7369  git push --force-with-lease origin HEAD
 7370  git stauts
 7371  git status
 7372  gst
 7373  gprav
 7374  glog
 7375  gprav
 7376  glog
 7377  conan install . --output-folder=build --build=missing
 7378  cd build
 7379  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Release/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=On -DENABLE_COVERAGE=On -DTRACY_ENABLE=On
 7380  cmake --build . --target all test
 7381  glog
 7382  cd ..
 7383  gprav
 7384  gst
 7385  conan install . --output-folder=build --build=missing
 7386  cd build
 7387  cmake --build . --target all test
 7388  cd ..
 7389  gst
 7390  git add libraries/
 7391  gst
 7392  git commit -m "[lib|date-time] fix date-time build issue"
 7393  gst
 7394  gprav
 7395  git push --force-with-lease origin HEAD
 7396  gst
 7397  gprav
 7398  git push --force-with-lease origin HEAD
 7399  git status
 7400  gd
 7401  cd build
 7402  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Release/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=On -DENABLE_COVERAGE=On -DTRACY_ENABLE=On
 7403  cmake --build . --target all test
 7404  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Release/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=On -DENABLE_COVERAGE=On -DTRACY_ENABLE=On
 7405  cmake --build . --target all
 7406  cmake --build . --target all test
 7407  cd ..
 7408  rm -rf build
 7409  conan install . --output-folder=build --build=missing
 7410  cd build
 7411  cmake --build . --target all test
 7412  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Release/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=On -DENABLE_COVERAGE=On -DTRACY_ENABLE=On
 7413  cmake --build .
 7414  cd ..
 7415  gst
 7416  cd build
 7417  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Release/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=On -DENABLE_COVERAGE=On -DTRACY_ENABLE=On
 7418  cmake --build .
 7419  cd ..
 7420  ll
 7421  gst
 7422  git add libraries/
 7423  gst
 7424  git commit -m "[libs|foundation] add foundation::commands library to manage admin commands for the platform"
 7425  gprav 
 7426  git push --force-with-lease origin HEAD
 7427  cd build
 7428  cmake --build .
 7429  ag -i boost/program
 7430  gst
 7431  cd ..
 7432  gst
 7433  cd tests
 7434  ll
 7435  cd libraries
 7436  ll
 7437  tree
 7438  git status
 7439  tree
 7440  gst
 7441  cd build
 7442  make
 7443  clear
 7444  cd ..
 7445  nvim .
 7446  git status
 7447  gd
 7448  cd build
 7449  cmake --build .
 7450  make 
 7451  cp compile_commands.json ..
 7452  make 
 7453  cd ..
 7454  git status
 7455  gst
 7456  cd build
 7457  cmake --build .
 7458  cd ..
 7459  conan install . --output-folder=build --build=missing
 7460  conan install . --output-folder=build --build=missing | grep -i boost
 7461  conan install . --output-folder=build --build=missing
 7462  cd build
 7463  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Release/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=On -DENABLE_COVERAGE=On -DTRACY_ENABLE=On
 7464  make 
 7465  cd ..
 7466  gst
 7467  git add libraries/foundation/
 7468  gst
 7469  git rm --cached libraries/foundation/commands/CMakeLists.txt_bkp
 7470  gst
 7471  tree | wc -l
 7472  gst
 7473  gd --cached 
 7474  gst
 7475  gd
 7476  cd build
 7477  make
 7478  cd ..
 7479  gst
 7480  git add libraries/
 7481  gst
 7482  glog
 7483  git commit -m "[libs|foundation] minor fixes in foundation::commands"
 7484  gprav
 7485  git push --force-with-lease origin HEAD
 7486  conan list | grep -i boost
 7487  conan
 7488  \tconan install . --output-folder=build --build=missing --force
 7489  \tconan install . --output-folder=build --build=missing --build-require
 7490  cd build
 7491  cmake --build . -S .. 
 7492  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Release/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=On -DENABLE_COVERAGE=On -DTRACY_ENABLE=On
 7493  cmake --build . --target all test
 7494  ag -i "find_package(fmt"
 7495  cmake --build . --target all test
 7496  cd ../libraries/foundation/infraconfig
 7497  ag -i buffer
 7498  ag -i format_to
 7499  ll
 7500  ag -i fmt
 7501  nvim .
 7502  cd build
 7503  cmake --build . --target all test
 7504  cd playground
 7505  ll
 7506  ./tracy_example
 7507  pacman -Syu cage
 7508  sudo pacman -Syu cage
 7509  \tyay -Rsn tracy-x11
 7510  \tyay -Rsn tracy-x11 tracy-x11-debug tracy-debug 
 7511  \tyay -Rsn tracy
 7512  yay -SYu tracy tracy-bin tracy-git
 7513  yay -SYu tracy tracy-bin tracy-git --noconfirm
 7514  yay -SYu tracy 
 7515  yay -Syu tracy
 7516  yay -Syu tracy 
 7517  \tyay -Rsn tracy
 7518  yay -Syu tracy 
 7519  cage tracy
 7520  ll
 7521  ./tracy_example
 7522  cd ../..
 7523  gst
 7524  exit
 7525  cage tracy
 7526  cd build
 7527  make
 7528  cctx
 7529  \t\t\t\t\t\t\t./run.py --source ~/files/projects/simple_trading_platform/libraries/foundation/cmd --output ~/files/learn/codectx_out/foundation_cmd.txt
 7530  \t\t\t\t\t\t\t./run.py --source ~/files/projects/simple_trading_platform/libraries/foundation/commands --output ~/files/learn/codectx_out/foundation_cmd.txt
 7531  cctxo
 7532  nvim .
 7533  clear
 7534  tmux new -s muxy
 7535  tmux attach -t muxy
 7536  ll
 7537  tmux attach -t muxy
 7538  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Release/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=On -DENABLE_COVERAGE=On -DTRACY_ENABLE=On
 7539  cp compile_commands.json ..
 7540  nvim .
 7541  clear
 7542  tmux attach -t muxy
 7543  gst
 7544  gd
 7545  gst
 7546  git add alacritty/ i3/ tmux/
 7547  gst
 7548  git commit -m "[alacritty|i3|tmux] minor updates"
 7549  gprav
 7550  git push --force-with-lease origin HEAD
 7551  nvim .
 7552  cd build
 7553  cmake --build . --target all test
 7554  cd ..
 7555  rm -rf build
 7556  \tconan install . --output-folder=build --build=missing --build-require
 7557  cd build
 7558  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Release/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=On -DENABLE_COVERAGE=On -DTRACY_ENABLE=On
 7559  cmake --build . --target all test
 7560  cd
 7561  cd Downloads
 7562  mv -f dhruv.pem ec2.pem
 7563  mv ec2.pem ~/files/projects
 7564  proj
 7565  ll
 7566  vim ec2.pem
 7567  nvim .
 7568  cd -
 7569  proj
 7570  vim ec2.pem
 7571  fg
 7572  clear
 7573  exit
 7574  clear
 7575  gst
 7576  ls -lart
 7577  ll
 7578  lst
 7579  gst
 7580  cd zettelkasten
 7581  ll
 7582  cd ..
 7583  ll
 7584  cd ..
 7585  cd projects
 7586  ll
 7587  cat ec2.pem| echo
 7588  cat ec2.pem| xarg echo
 7589  cat ec2.pem| xargs echo
 7590  exit
 7591  cd
 7592  ll
 7593  fg
 7594  notes
 7595  nvim .
 7596  cd
 7598  ll
 7599  ll | grep ec
 7600  clear
 7601  thunar
 7602  ranger
 7603  clear
 7604  sudo pacman -Rsn thunar thunderbird thefuck
 7605  history | grep -i pacman
 7606  clear
 7607  ll
 7608  cd simple_trading_platform
 7609  cd build
 7610  cmake --build . --target all test
 7611  nvim .
 7612  cd -
 7613  \t\t\t\t\t\t\t\t./run.py --source ~/files/projects/simple_trading_platform/libraries/foundation/app --output ~/files/learn/codectx_out/foundation_app.txt
 7614  \t\t\t\t\t\t\t\t./run.py --source ~/files/projects/simple_trading_platform/libraries/foundation/build_verification --output ~/files/learn/codectx_out/foundation_bv.txt
 7615  cd ..
 7616  gst
 7617  gprav
 7618  systemctl status openvpn-client@Blr-office-UDP4-1194-config
 7619  gprav
 7620  clear
 7621  \t\ti3-msg move workspace to output HDMI-2
 7622  clear
 7623  tmux attach -t muxy
 7624  clear
 7625  cleasr
 7626  gst
 7627  cd build
 7628  cd ..
 7629  \tconan install . --output-folder=build --build=missing --build-require
 7630  cd build
 7631  cmake --build . --target all test
 7632  nvim .
 7633  \t\t\t\t\t\t\t\t./run.py --source ~/files/projects/simple_trading_platform/libraries/foundation/events --output ~/files/learn/codectx_out/foundation_events.txt
 7634  git status
 7635  gbr
 7636  git stash list
 7637  git stash -m "temp imp work"
 7638  gst
 7639  gprav
 7640  git fetch -a
 7641  git checkout mohit/foundation-port
 7642  gprav
 7643  cd ..
 7644  rm -rf build
 7645  \tconan install . --output-folder=build --build=missing --build-require
 7646  cd build
 7647  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Release/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=On -DENABLE_COVERAGE=On -DTRACY_ENABLE=On
 7648  cmake --build . --target all test
 7649  make -j
 7650  ag -i md5_optimized.h --cpp -l
 7651  ag -i md5_optimized.h --cpp 
 7652  cmake --build . --target all test
 7653  cd ..
 7654  rm -rf build
 7655  \tconan install . --output-folder=build --build=missing --build-require
 7656  cd build
 7657  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Release/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=On -DENABLE_COVERAGE=On -DTRACY_ENABLE=On
 7658  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Release/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=On -DENABLE_COVERAGE=On -DTRACY_ENABLE=1
 7659  make -j 4
 7660  git status
 7661  nsep241
 7662  cd Downloads
 7663  chmod 400 iocplatform.pem
 7664  ssh -i iocplatform.pem akhil@172.19.1.13
 7665  systemctl status openvpn-client@Blr-office-UDP4-1194-config
 7666  sudo systemctl stop  openvpn-client@Blr-office-UDP4-1194-config
 7667  \tclear
 7668  ssh -i iocplatform.pem akhil@172.19.1.13
 7669  cd Downloads
 7670  ssh -i iocplatform.pem akhil@172.19.1.13
 7671  clear
 7672  history | grep -i stow
 7673  history | grep -i stow | grep -i vim
 7674  cd ..
 7675  rm -rf build
 7676  mkdir build
 7677  cd build
 7678  cmake ..
 7679  cd ..
 7680  git status
 7681  gd
 7682  gst
 7683  git stash
 7684  git stash clear
 7685  git stash list
 7686  git status
 7687  gprav
 7688  \tconan install . --output-folder=build --build=missing --build-require
 7689  gprav
 7690  \tconan install . --output-folder=build --build=missing --build-require
 7691  poroj
 7692  proj
 7693  cd io
 7694  exit
 7695  cleasr
 7696  dev132
 7697  ssh -i iocplatform.pem akhil@172.19.1.13
 7698  cd Downloads
 7699  ssh -i iocplatform.pem akhil@172.19.1.13
 7700  clesar
 7701  cfg
 7702  nvim .
 7703  clear
 7704  cd
 7705  sudo pacman -Syu
 7706  icleasr
 7707  tmux attach -t muxy
 7708  gst
 7709  gprav
 7710  git checkout master
 7711  git fetch -a
 7712  gprav
 7713  git brach -a
 7714  git branch -a
 7715  git status
 7716  gtree
 7717  gree
 7718  git log
 7719  alias | grep log
 7720  glgg
 7721  exit
 7722  glgg
 7723  alias | grep log
 7724  glol
 7725  glp
 7726  glola
 7727  git status
 7728  \tconan install . --output-folder=build --build=missing --build-require
 7729  cd build
 7730  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Release/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=On 
 7731  cd ..
 7732  rm -rf build
 7733  gprav
 7734  clears
 7735  gst
 7736  gd
 7737  cler
 7738  clear
 7739  tmux attach -t muxy
 7740  ranger
 7741  tmux attach -t muxy
 7742  clear
 7743  exit
 7744  git status
 7745  \tconan install . --output-folder=build --build=missing --build-require
 7746  rm -rf build
 7747  \tconan install . --output-folder=build --build=missing --build-require
 7748  cd build
 7749  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Release/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=On 
 7750  gst
 7751  git status
 7752  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Release/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=On 
 7753  cd ..
 7754  rm -rf build
 7755  mkdir build
 7756  \tconan install . --output-folder=build --build=missing --build-require
 7757  cd build
 7758  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Release/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=On 
 7759  make -j 5
 7760  make
 7761  sudo shutdown -h now
 7762  sudo pacman -Syu
 7763  clear
 7764  gst
 7765  yay -Syu
 7766  clear
 7767  tmux attach -t muxy
 7768  clear
 7769  tmux new -s muxy
 7770  nvim .
 7771  gprav
 7772  gst
 7773  gprav
 7774  gst
 7775  gprav
 7776  cd
 7777  ranger
 7778  gst
 7779  gprav
 7780  systemctl status openvpn-client@Blr-office-UDP4-1194-config
 7781  \tsudo systemctl reload-or-restart openvpn-client@Blr-office-UDP4-1194-config
 7782  systemctl status openvpn-client@Blr-office-UDP4-1194-config
 7783  \tsudo systemctl reload-or-restart openvpn-client@Blr-office-UDP4-1194-config
 7784  systemctl status openvpn-client@Blr-office-UDP4-1194-config
 7785  gprav
 7786  systemctl status openvpn-client@Blr-office-UDP4-1194-config
 7787  \tsudo systemctl reload-or-restart openvpn-client@Blr-office-UDP4-1194-config
 7788  systemctl status openvpn-client@Blr-office-UDP4-1194-config
 7789  \tsudo systemctl reload-or-restart openvpn-client@Blr-office-UDP4-1194-config
 7790  systemctl status openvpn-client@Blr-office-UDP4-1194-config
 7791  gprav
 7792  systemctl status openvpn-client@Blr-office-UDP4-1194-config
 7793  \tsudo systemctl start openvpn-client@Blr-office-UDP4-1194-config
 7794  systemctl status openvpn-client@Blr-office-UDP4-1194-config
 7795  \tsudo systemctl start openvpn-client@Blr-office-UDP4-1194-config
 7796  systemctl status openvpn-client@Blr-office-UDP4-1194-config
 7797  gprav
 7798  systemctl status openvpn-client@Blr-office-UDP4-1194-config
 7799  \tsudo systemctl start openvpn-client@Blr-office-UDP4-1194-config
 7800  systemctl status openvpn-client@Blr-office-UDP4-1194-config
 7801  gprav
 7802  nmcli device disconnect wlp0s20f3
 7803  nmcli device connect wlp0s20f3
 7804  systemctl status openvpn-client@Blr-office-UDP4-1194-config
 7805  \tsudo systemctl start openvpn-client@Blr-office-UDP4-1194-config
 7806  systemctl status openvpn-client@Blr-office-UDP4-1194-config
 7807  \tsudo systemctl reload-or-restart openvpn-client@Blr-office-UDP4-1194-config
 7808  systemctl status openvpn-client@Blr-office-UDP4-1194-config
 7809  p
 7810  systemctl status openvpn-client@Blr-office-UDP4-1194-config
 7811  \tsudo systemctl reload-or-restart openvpn-client@Blr-office-UDP4-1194-config
 7812  systemctl status openvpn-client@Blr-office-UDP4-1194-config
 7813  sudo systemctl reboot
 7814  tmux new -s muxy
 7815  nvim .
 7816  htop
 7817  tmux new -s muxy
 7818  tmux attach -t muxy
 7819  htop
 7820  systemctl status anydesk.service
 7821  sudo systemctl stop anydesk.service
 7822  gst
 7823  gprav
 7824  htop
 7825  docker container ls
 7826  docker image ls
 7827  docker system prune -a
 7828  htop
 7829  udevadm monitor
 7830  udevadm info /dev/sda
 7831  ps aux
 7832  clear
 7833  cd 
 7834  cd Downloads
 7835  ll
 7836  chmod u+x SophosSetup.sh
 7837  gst
 7838  git status
 7839  ./SophosSetup.sh
 7840  sudo ./SophosSetup.sh
 7841  htop
 7842  ps -aux | grep -i sophos
 7843  cd -
 7844  gst
 7845  proj
 7846  cd simple_trading_platform
 7847  gst
 7848  gprav
 7849  \tsudo systemctl reload-or-restart openvpn-client@Blr-office-UDP4-1194-config
 7850  nvim .
 7851  nvim .
 7852  systemctl status openvpn-client@Blr-office-UDP4-1194-config
 7853  \tsudo systemctl start openvpn-client@Blr-office-UDP4-1194-config
 7854  systemctl status openvpn-client@Blr-office-UDP4-1194-config
 7855  \tsudo systemctl start openvpn-client@Blr-office-UDP4-1194-config
 7856  gst
 7857  nvim .
 7858  \tconan install . --output-folder=build --build=missing --build-require
 7859  git status
 7860  sudo pacman -Qs tracy
 7861  sudo pacman -Syu at
 7862  echo 'notify-send "Reminder": "Take Clothes out of the dryer!"' | at now + 60 minutes
 7863  which at
 7864  echo 'notify-send "Reminder": "Take Clothes out of the dryer!"' | at now + 60 minutes
 7865  sudo systemctl enable --now atd
 7866  echo 'notify-send "Reminder": "Take Clothes out of the dryer!"' | at now + 60 minutes
 7867  w
 7868  clear
 7869  cd build
 7870  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Release/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=On 
 7871  cd ..
 7872  rm -rf build
 7873  mkdir build
 7874  cd build
 7875  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Release/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=On 
 7876  cd ..
 7877  rm -rf build
 7878  \tconan install . --output-folder=build --build=missing --build-require
 7879  cd build
 7880  ll
 7881  ll build/Release/generators/
 7882  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Release/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=On 
 7883  cmake --build . --target all test
 7884  cd ..
 7885  rm -rf build
 7886  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Release/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=On 
 7887  \tconan install . --output-folder=build --build=missing --build-require
 7888  cd build
 7889  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Release/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=On 
 7890  cmake --build . --target all test
 7891  cd ..
 7892  rm -rf build
 7893  mkdir build
 7894  cd build
 7895  conan install ..
 7896  ll
 7897  conan install .. --build missing
 7898  ll
 7899  tree Release
 7900  cd build
 7901  tree Release
 7902  conan install .. --build missing --build_type debug
 7903  conan install .. -b debug --build missing
 7904  ll
 7905  conan install .. -b Debug --build missing
 7906  ll
 7907  ll Release/generators/conan_toolchain.cmake
 7908  cmake .. -DCMAKE_BUILD_TYPE=Release 
 7909  cmake .. 
 7910  ll
 7911  conan install ..  --build missing
 7912  ll
 7913  cmake .. 
 7914  conan install .. -b Debug --build missing
 7915  cmake ..
 7916  conan search yaml-cpp
 7917  conan search boost
 7918  conan list boost
 7919  conan list yaml-cpp
 7920  cmake .. 
 7921  cd ..
 7922  rm -rf build
 7923  mkdir build
 7924  cd build
 7925  cd ..
 7926  rm -rf build
 7927  mkdir biuld
 7928  rm -rf biuld
 7929  mkdir build
 7930  cd build
 7931  conan install .. -b Debug --build missing
 7932  cmake .. -DCMAKE_TOOLCHAIN_FILE=Release/generators/conan_toolchain.cmake
 7933  cmake .. -DCMAKE_TOOLCHAIN_FILE=Release/generators/conan_toolchain.cmake -DCMAKE_BUILD_TYPE=Release
 7934  cd ..
 7935  cleasr
 7936  clear
 7937  rm -rf biuld
 7938  rm -rf build
 7939  mkdir build
 7940  cd build
 7941  cd ..
 7942  rm -rf build
 7943  conan install .. -b Debug --build missing
 7944  mkdir build
 7945  cd build
 7946  conan install .. --build missing
 7947  ll
 7948  cmake ..
 7949  cmake\n  --help-policy CMP0167
 7950  cmake --help-policy CMP0167                                                                           
 7951  cmake --help-policy CMP0167
 7952  cmake ..
 7953  :wa
 7954  cmake ..
 7955  igst
 7956  gst
 7957  cmake ..
 7958  ll
 7959  cmake .. -DCMAKE_TOOLCHAIN_FILE=Release/generators/conan_toolchain.cmake -DCMAKE_BUILD_TYPE=Release
 7960  clear
 7961  history | grep -i conan
 7962  conan install . --output-folder=build --build=missing 
 7963  cd ..
 7964  rm -rf build
 7965  conan install . --output-folder=build --build=missing 
 7966  cd build
 7967  ll
 7968  cmake ..
 7969  history | grep -i cmake
 7970  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Release/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=On
 7971  cd ..
 7972  git restore *cmakelists.txt
 7973  git restore *CMakeLists.txt
 7974  nvim .
 7975  cd build
 7976  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Release/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=On
 7977  cd ..
 7978  rm -rf build
 7979  conan install . --output-folder=build --build=missing 
 7980  cd build
 7981  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Release/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=On
 7982  make -j
 7983  cd ..
 7984  rm -rf build
 7985  conan install . --output-folder=build --build=missing -s build_type=Debug
 7986  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Debug/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=On
 7987  ll
 7988  ll build
 7989  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Debug/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=On
 7990  make -j
 7991  cmake --build . --target all test
 7992  cmake --build . --target coverage
 7993  ctest --show-only
 7994  ctest
 7995  find . -name "*.gcda" | wc -l
 7996  cmake -L | grep CMAKE_BUILD_TYPE
 7997  cd ..
 7998  rm -rf build
 7999  conan install . --output-folder=build --build=missing -s build_type=Debug
 8000  cd build
 8001  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Debug/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=ON -DENABLE_COVERAGE=ON ..
 8002  cmake --build .
 8003  cmake --build . --target coverage
 8004  ctest --show-only
 8005  find . -name "*.gcda" | sort
 8006  cmake -L | grep CMAKE_BUILD_TYPE
 8007  # Check how you installed dependencies\ncat CMakeCache.txt | grep CONAN
 8008  cat CMakeCache.txt | grep CONAN
 8009  cat CMakeCache.txt | grep -i conan
 8010  find . -name "*.gcda" | wc -l
 8011  # Before running tests or coverage\nexport GCOV_PREFIX=/home/akhil/files/projects/simple_trading_platform/build\nexport GCOV_PREFIX_STRIP=0
 8012  export GCOV_PREFIX=/home/akhil/files/projects/simple_trading_platform/build
 8013  export GCOV_PREFIX_STRIP=0
 8014  cmake --build . --target test
 8015  cmake --build . --target coverage
 8016  proj
 8017  mkdir test
 8018  echo 'int main() { return 0; }' > test.c\ngcc -fprofile-arcs -ftest-coverage test.c -o test\n./test\nls -la *.gcda *.gcno
 8019  ll
 8020  echo 'int main() { return 0; }' > test.c
 8021  gcc -fprofile-arcs -ftest-coverage test.c -o test
 8022  ./test
 8023  ls -la *.gcda *.gcno
 8024  ll
 8025  chmod +w .
 8026  echo "Current directory: $(pwd)" && ./test
 8027  gcc --version
 8028  gcov --version
 8029  chmod u+rwx .  # Grant read/write/execute to the current directory
 8030  vim test
 8031  vim test.
 8032  vim test.c
 8033  unset GCOV_PREFIX\nunset GCOV_PREFIX_STRIP
 8034  gcov test.c
 8035  gcc -fprofile-arcs -ftest-coverage test.c -o test
 8036  vim test.c
 8037  gcc -fprofile-arcs -ftest-coverage test.c -o test
 8038  ./test
 8039  ls -la *.gcda *.gcno
 8040  gcov test.c
 8041  ll
 8042  cd -
 8043  cd simple_trading_platform/build
 8044  cmake --build . --target coverage
 8045  chmod u+rwx .  # Grant read/write/execute to the current directory
 8046  cmake --build . --target coverage
 8047  ll
 8048  ll gcov_tmp
 8049  cmake --build . --target coverage
 8050  cd ..
 8051  rm -rf build
 8052  conan install . --output-folder=build --build=missing -s build_type=Debug
 8053  cd build
 8054  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Debug/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=ON -DENABLE_COVERAGE=ON ..
 8055  cmake --build . --target all test coverage
 8056  cd ..
 8057  rm -rf build
 8058  conan install . --output-folder=build --build=missing -s build_type=Debug
 8059  cd build
 8060  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Debug/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=ON -DENABLE_COVERAGE=ON ..
 8061  cmake --build . --target all test coverage
 8062  tree .
 8063  systemctl status openvpn-client@Blr-office-UDP4-1194-config
 8064  \tsudo systemctl reload-or-restart openvpn-client@Blr-office-UDP4-1194-config
 8065  systemctl status openvpn-client@Blr-office-UDP4-1194-config
 8066  cd ..
 8067  gst
 8068  gprav
 8069  rm -rf build
 8070  conan install . --output-folder=build --build=missing -s build_type=Debug
 8071  cd build
 8072  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Debug/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=ON -DENABLE_COVERAGE=ON ..
 8073  cmake --build . --target all test
 8074  cmake --build . --target all test 
 8075  cmake --build . --target coverage
 8076  cd ..
 8077  rm -rf build
 8078  conan install . --output-folder=build --build=missing -s build_type=Debug
 8079  cd build
 8080  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Debug/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=ON -DENABLE_COVERAGE=ON ..
 8081  cmake --build . --target coverage
 8082  cmake --build . --target all test
 8083  cmake --build . --target coverage
 8084  cd ..
 8085  git fetch -a
 8086  git branch -a
 8087  git checkout mohit/foundation-port
 8088  git status
 8089  git stash list
 8090  gst
 8091  git stash -m "fix build issues"
 8092  gst
 8093  git checkout mohit/foundation-port
 8094  git fetch -a
 8095  glog
 8096  alias | grep log
 8097  gloga
 8098  clear
 8099  gst
 8100  git rebase -i HEAD~7
 8101  gst
 8102  glog
 8103  gloga
 8104  git status
 8105  git checkout master
 8106  glog mohit/foundation-port
 8107  gst
 8108  git cherry-pick 8e152fc 
 8109  gst
 8110  gd
 8111  git rebase --abort
 8112  git status
 8113  git cherry-pick --abort
 8114  git status
 8115  git stash pop
 8116  gst
 8117  git statsh list
 8118  git stash list
 8119  git stash -m "tmp"
 8120  git checkout master
 8121  gst
 8122  git restore --staged 
 8123  git restore
 8124  gst
 8125  git stash -m "tmp"
 8126  git checkout master
 8127  gst
 8128  git restore --staged .
 8129  git restore --staged *
 8130  git restore .
 8131  git restore *
 8132  gst
 8133  git checkout master
 8134  git rebase --abort
 8135  git cherry-pick --abort
 8136  git status
 8137  gprav
 8138  gd
 8139  \tsudo pacman -Syu 
 8140  nmcli device connect wlp0s20f3
 8141  sudo systemctl reboot
 8142  \tsudo pacman -Syu 
 8143  yay -Syu
 8144  yay -Sy
 8145  \t\tyay -Rs
 8146  \t\tyay -Rsn
 8147  history | grep -i pacman | grep -R
 8148  history | grep -i pacman | grep R
 8149  \t\tyay -Ru
 8150  \t\tyay -Rup
 8151  \t\tyay -Rsn 
 8152  \t\tyay -Rsn gradience python-async-timeout
 8153  clear
 8154  tmux new -s muxy
 8155  nvim .
 8156  cleasr
 8157  git status
 8158  git pull
 8159  nvim .
 8160  gst
 8161  git status
 8162  git checkout master
 8163  git restore --staged
 8164  git restore --staged .
 8165  git stash list
 8166  git stash -m tmp-del
 8167  gst
 8168  git checkout master
 8169  git merge --abort
 8170  git rebase --aobrt
 8171  git rebase --abort
 8172  git reset --hard HEAD
 8173  gst
 8174  git checkout master
 8175  gprav
 8176  glog
 8177  git stash list
 8178  git stash pop
 8179  gst
 8180  gd
 8181  git status
 8182  gd
 8183  gst
 8184  git restore libraries/*CMakeLists.txt
 8185  gst
 8186  git diff libraries/
 8187  git restore libraries/
 8188  gst
 8189  gd
 8190  clear
 8191  gst
 8192  git add CMakeLists.txt cmake/ README.md conanfile.py dockerfiles/ docs/ playground/ 
 8193  gst
 8194  gd tests/
 8195  git restore tests/
 8196  gst
 8197  git add libraries/foundation/
 8198  gst
 8199  rm -rf test.cpp
 8200  gst
 8201  git commit -m "update readme with correct build instructions and add library/foundation"
 8202  gst
 8203  gprav
 8204  rm -rf build
 8205  conan install . --output-folder=build --build=missing -s build_type=Debug
 8206  git log master -n 5 --pretty=format:"%C(yellow)%h %C(cyan)%an %C(green)%ad: %C(reset)%B" --date=format:'%Y-%m-%d %H:%M:%S'
 8207  git log master -n 10  --pretty=format:"%C(yellow)%h %C(cyan)%an %C(green)%ad: %C(reset)%B" --date=format:'%Y-%m-%d %H:%M:%S'
 8208  git log master -n 15  --pretty=format:"%C(yellow)%h %C(cyan)%an %C(green)%ad: %C(reset)%B" --date=format:'%Y-%m-%d %H:%M:%S'
 8209  conan install . --output-folder=build --build=missing -s build_type=Debug
 8210  cd build
 8211  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Debug/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=ON -DENABLE_COVERAGE=ON ..
 8212  mkdir /home/akhil/files/projects/simple_trading_platform/tests/libraries/foundation/throttler/data
 8213  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Debug/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=ON -DENABLE_COVERAGE=ON ..
 8214  cd ..
 8215  rm -rf build
 8216  conan install . --output-folder=build --build=missing -s build_type=Debug
 8217  cd build
 8218  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Debug/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=ON -DENABLE_COVERAGE=ON ..
 8219  cmake --build . --target coverage
 8220  cmake --build . --target all test
 8221  cmake --build . --target coverage
 8222  cleasr
 8223  clear
 8224  tmux attach -t muxy
 8225  clear
 8226  cd ..
 8227  rm -rf build
 8228  conan install . --output-folder=build --build=missing -s build_type=Debug
 8229  cd build
 8230  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Debug/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=ON -DENABLE_COVERAGE=ON ..
 8231  \tcmake --build . --target all test coverage
 8232  gst
 8233  gprav
 8234  nvim .
 8235  clear
 8236  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Debug/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=ON -DENABLE_COVERAGE=ON ..
 8237  cd ..
 8238  rm -rf build
 8239  conan install . --output-folder=build --build=missing -s build_type=Debug
 8240  cd build
 8241  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Debug/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=ON -DENABLE_COVERAGE=ON ..
 8242  \tcmake --build . --target all test coverage
 8243  cmake --version
 8244  \tcmake --build . --target all test coverage
 8245  \tcmake --build . --target all tests coverage
 8246  cd ../libraries/business
 8247  ll
 8248  git status
 8249  gd
 8250  cd ../../
 8251  cd build
 8252  \tcmake --build . --target all tests coverage
 8253  git status
 8254  cd ..
 8255  rm -rf build
 8256  conan install . --output-folder=build --build=missing -s build_type=Debug
 8257  cd cmake
 8258  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Debug/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=ON -DENABLE_COVERAGE=ON ..
 8259  cd -
 8260  cd build
 8261  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Debug/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=ON -DENABLE_COVERAGE=ON ..
 8262  \tcmake --build . --target all tests coverage
 8263  \tcmake --build . --target all test coverage
 8264  git status
 8265  gd
 8266  gst
 8267  cd ..
 8268  rm -rf build
 8269  conan install . --output-folder=build --build=missing -s build_type=Debug
 8270  cd build
 8271  \tcmake --build . --target all test coverage
 8272  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Debug/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=ON -DENABLE_COVERAGE=ON ..
 8273  cmake --build .
 8274  cmake --build . --targets all test coverage
 8275  cmake --build . --target all test coverage
 8276  ag -i smallfun
 8277  cd ..
 8278  ag -i smallfun
 8279  ag -i "folly::"
 8280  find . -name "*.gcno" | wc -l
 8281  cd build
 8282  cd ..
 8283  rm -rf build
 8284  conan install . --output-folder=build --build=missing -s build_type=Debug
 8285  \tcd build
 8286  cmake --build . --target all test coverage
 8287  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/Debug/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=ON -DENABLE_COVERAGE=ON ..
 8288  cmake --build . --target all test coverage
 8289  cd build\nnm tests/libraries/foundation/date_time/date_time_tests | grep gcov
 8290  nm tests/libraries/foundation/date_time/date_time_tests | grep gcov
 8291  cd ../
 8292  nm tests/libraries/foundation/date_time/date_time_tests | grep gcov
 8293  find . -name "*.gcno" | wc -l
 8294  touch build/test_write_permission
 8295  ll build/test_write_permission
 8296  rm -rf build/test_write_permission
 8297  cd ..
 8298  touch build/test_write_permission
 8299  ll build/test_write_permission
 8300  rm -rf build/test_write_permission
 8301  cd build
 8302  ldd tests/libraries/foundation/date_time/date_time_tests
 8303  \tnm tests/libraries/foundation/date_time/date_time_tests
 8304  nvim .
 8305  clear
 8306  gst
 8307  git status
 8308  gst
 8309  rm -rf build
 8310  conan install .. --output-folder=. --build=missing -s build_type=Debug
 8311  conan install . --output-folder=build --build=missing -s build_type=Debug
 8312  cd build
 8313  cmake .. \\n  -DCMAKE_TOOLCHAIN_FILE=build/Debug/generators/conan_toolchain.cmake \\n  -DCMAKE_CXX_FLAGS="-g -O0 -fprofile-arcs -ftest-coverage" \\n  -DCMAKE_C_FLAGS="-g -O0 -fprofile-arcs -ftest-coverage" \\n  -DCMAKE_EXE_LINKER_FLAGS="--coverage" \\n  -DCMAKE_EXPORT_COMPILE_COMMANDS=ON \\n  -DCMAKE_BUILD_TYPE=Debug \\n  -DBUILD_TESTING=ON \\n  -DENABLE_COVERAGE=ON
 8314  cmake --build . --target all test coverage
 8315  grep -A 5 "CMAKE_CXX_FLAGS" CMakeCache.txt
 8316  find . -name "*.gcno" | wc -l
 8317  GCOV_OPTIONS="--branch-coverage" cmake --build . --target coverage
 8318  conan install . --output-folder=build --build=missing -s build_type=Debug
 8319  cd build
 8320  cmake .. \\n  -DCMAKE_TOOLCHAIN_FILE=build/Debug/generators/conan_toolchain.cmake \\n  -DCMAKE_CXX_FLAGS="-g -O0 -fprofile-arcs -ftest-coverage" \\n  -DCMAKE_C_FLAGS="-g -O0 -fprofile-arcs -ftest-coverage" \\n  -DCMAKE_EXE_LINKER_FLAGS="--coverage" \\n  -DCMAKE_EXPORT_COMPILE_COMMANDS=ON \\n  -DCMAKE_BUILD_TYPE=Debug \\n  -DBUILD_TESTING=ON \\n  -DENABLE_COVERAGE=ON
 8321  cd ..
 8322  rm -rf build
 8323  conan install . --output-folder=build --build=missing -s build_type=Debug
 8324  cd build
 8325  cmake .. \\n  -DCMAKE_TOOLCHAIN_FILE=build/Debug/generators/conan_toolchain.cmake \\n  -DCMAKE_CXX_FLAGS="-g -O0 -fprofile-arcs -ftest-coverage" \\n  -DCMAKE_C_FLAGS="-g -O0 -fprofile-arcs -ftest-coverage" \\n  -DCMAKE_EXE_LINKER_FLAGS="--coverage" \\n  -DCMAKE_EXPORT_COMPILE_COMMANDS=ON \\n  -DCMAKE_BUILD_TYPE=Debug \\n  -DBUILD_TESTING=ON \\n  -DENABLE_COVERAGE=ON
 8326  cmake --build . --target all test
 8327  cp ../tools/scripts/run_coverage.sh .
 8328  chmod u+x run_coverage.sh
 8329  ./run_coverage.sh
 8330  cd ..
 8331  rm -rf build
 8332  conan install . --output-folder=build --build=missing -s build_type=Debug
 8333  cd build
 8334  cmake .. \\n  -DCMAKE_TOOLCHAIN_FILE=build/Debug/generators/conan_toolchain.cmake \\n  -DCMAKE_CXX_FLAGS="-g -O0 -fprofile-arcs -ftest-coverage" \\n  -DCMAKE_C_FLAGS="-g -O0 -fprofile-arcs -ftest-coverage" \\n  -DCMAKE_EXE_LINKER_FLAGS="--coverage" \\n  -DCMAKE_EXPORT_COMPILE_COMMANDS=ON \\n  -DCMAKE_BUILD_TYPE=Debug \\n  -DBUILD_TESTING=ON \\n  -DENABLE_COVERAGE=ON
 8335  cmake --build . --target all test
 8336  cmake --build . --target all coverage
 8337  cmake .. \\n  -DCMAKE_TOOLCHAIN_FILE=build/Debug/generators/conan_toolchain.cmake \\n  -DCMAKE_CXX_FLAGS="-g -O0 -fprofile-arcs -ftest-coverage" \\n  -DCMAKE_C_FLAGS="-g -O0 -fprofile-arcs -ftest-coverage" \\n  -DCMAKE_EXE_LINKER_FLAGS="--coverage" \\n  -DCMAKE_EXPORT_COMPILE_COMMANDS=ON \\n  -DCMAKE_BUILD_TYPE=Debug \\n  -DBUILD_TESTING=ON \\n  -DENABLE_COVERAGE=ON
 8338  make -j 
 8339  cmake --build . --target all test coverage
 8340  cd ..
 8341  git status
 8342  git add CMakeLists.txt conanfile.py libraries/ tools/ cmake/coverage.cmake
 8343  rm cmake/CMakeCache.txt cmake/CMakeFiles
 8344  rm -rf cmake/CMakeFiles cmake/CMakeCache.txt
 8345  gst
 8346  git commit -m "[cmake] update code-coverage script & minor conan update"
 8347  gprav 
 8348  git push --force-with-lease origin HEAD
 8349  gst
 8350  nvim .
 8351  ag -i environment.h -l
 8352  ag -i environment.h 
 8353  ag -i setup
 8354  conan install . --output-folder=build --build=missing -s build_type=Debug
 8355  cd build
 8356  cmake .. \\n  -DCMAKE_TOOLCHAIN_FILE=build/Debug/generators/conan_toolchain.cmake \\n  -DCMAKE_CXX_FLAGS="-g -O0 -fprofile-arcs -ftest-coverage" \\n  -DCMAKE_C_FLAGS="-g -O0 -fprofile-arcs -ftest-coverage" \\n  -DCMAKE_EXE_LINKER_FLAGS="--coverage" \\n  -DCMAKE_EXPORT_COMPILE_COMMANDS=ON \\n  -DCMAKE_BUILD_TYPE=Debug \\n  -DBUILD_TESTING=ON \\n  -DENABLE_COVERAGE=ON
 8357  make -j 4
 8358  cmake .. \\n  -DCMAKE_TOOLCHAIN_FILE=build/Debug/generators/conan_toolchain.cmake \\n  -DCMAKE_CXX_FLAGS="-g -O0 -fprofile-arcs -ftest-coverage" \\n  -DCMAKE_C_FLAGS="-g -O0 -fprofile-arcs -ftest-coverage" \\n  -DCMAKE_EXE_LINKER_FLAGS="--coverage" \\n  -DCMAKE_EXPORT_COMPILE_COMMANDS=ON \\n  -DCMAKE_BUILD_TYPE=Debug \\n  -DBUILD_TESTING=ON \\n  -DENABLE_COVERAGE=ON
 8359  cmake --build . --target all test coverage
 8360  cmake --build . --target all test 
 8361  cd ..
 8362  cp -r ../plat_tmp_work/platform/infra/test/cmd tests/libraries/foundation/commands
 8363  cmake --build . --target all test 
 8364  conan install . --output-folder=build --build=missing -s build_type=Debug
 8365  cd build
 8366  cmake .. \\n  -DCMAKE_TOOLCHAIN_FILE=build/Debug/generators/conan_toolchain.cmake \\n  -DCMAKE_CXX_FLAGS="-g -O0 -fprofile-arcs -ftest-coverage" \\n  -DCMAKE_C_FLAGS="-g -O0 -fprofile-arcs -ftest-coverage" \\n  -DCMAKE_EXE_LINKER_FLAGS="--coverage" \\n  -DCMAKE_EXPORT_COMPILE_COMMANDS=ON \\n  -DCMAKE_BUILD_TYPE=Debug \\n  -DBUILD_TESTING=ON \\n  -DENABLE_COVERAGE=ON
 8367  cmake --build . --target all test 
 8368  cd ..
 8369  git status
 8370  git add libraries/foundation/
 8371  git add tests/
 8372  ll 2aq
 8373  rm -rf 2aq
 8374  gst
 8375  git commit -m "[lib/test] add foundation::commands library and it's unit tests (failing atm)"
 8376  gprav
 8377  git push --force-with-lease origin HEAD
 8378  cd libraries/foundation/commands
 8379  ag -i log -l
 8380  gst
 8381  git restore
 8382  git restore includes/commands/cmd.h
 8383  clear
 8384  git status
 8385  gprav
 8386  git checkout mohit/business
 8387  gprav
 8388  glog
 8389  cd ..
 8390  rm -rf build
 8391  conan install . --output-folder=build --build=missing -s build_type=Debug
 8392  cd build
 8393  cmake .. \\n  -DCMAKE_TOOLCHAIN_FILE=build/Debug/generators/conan_toolchain.cmake \\n  -DCMAKE_CXX_FLAGS="-g -O0 -fprofile-arcs -ftest-coverage" \\n  -DCMAKE_C_FLAGS="-g -O0 -fprofile-arcs -ftest-coverage" \\n  -DCMAKE_EXE_LINKER_FLAGS="--coverage" \\n  -DCMAKE_EXPORT_COMPILE_COMMANDS=ON \\n  -DCMAKE_BUILD_TYPE=Debug \\n  -DBUILD_TESTING=ON \\n  -DENABLE_COVERAGE=ON
 8394  gst
 8395  cd -
 8396  pwd
 8397  gloga
 8398  conan install . --output-folder=build --build=missing -s build_type=Debug
 8399  cd build
 8400  cmake .. \\n  -DCMAKE_TOOLCHAIN_FILE=build/Debug/generators/conan_toolchain.cmake \\n  -DCMAKE_CXX_FLAGS="-g -O0 -fprofile-arcs -ftest-coverage" \\n  -DCMAKE_C_FLAGS="-g -O0 -fprofile-arcs -ftest-coverage" \\n  -DCMAKE_EXE_LINKER_FLAGS="--coverage" \\n  -DCMAKE_EXPORT_COMPILE_COMMANDS=ON \\n  -DCMAKE_BUILD_TYPE=Debug \\n  -DBUILD_TESTING=ON \\n  -DENABLE_COVERAGE=ON
 8401  git status
 8402  gprav
 8403  git statsh list
 8404  gi tstash list
 8405  git stash list
 8406  cd ..
 8407  conan install . --output-folder=build --build=missing -s build_type=Debug
 8408  cd build
 8409  cmake .. \\n  -DCMAKE_TOOLCHAIN_FILE=build/Debug/generators/conan_toolchain.cmake \\n  -DCMAKE_CXX_FLAGS="-g -O0 -fprofile-arcs -ftest-coverage" \\n  -DCMAKE_C_FLAGS="-g -O0 -fprofile-arcs -ftest-coverage" \\n  -DCMAKE_EXE_LINKER_FLAGS="--coverage" \\n  -DCMAKE_EXPORT_COMPILE_COMMANDS=ON \\n  -DCMAKE_BUILD_TYPE=Debug \\n  -DBUILD_TESTING=ON \\n  -DENABLE_COVERAGE=ON
 8410  make -j 4
 8411  make
 8412  gst
 8413  cd ..
 8414  git restore libraries/business/
 8415  gst
 8416  cd build
 8417  pwde
 8418  ll
 8419  cd libraries/business/contract
 8420  ls 
 8421  ll
 8422  cd -
 8423  cd ..
 8424  cd -
 8425  cmake .. \\n  -DCMAKE_TOOLCHAIN_FILE=build/Debug/generators/conan_toolchain.cmake \\n  -DCMAKE_CXX_FLAGS="-g -O0 -fprofile-arcs -ftest-coverage" \\n  -DCMAKE_C_FLAGS="-g -O0 -fprofile-arcs -ftest-coverage" \\n  -DCMAKE_EXE_LINKER_FLAGS="--coverage" \\n  -DCMAKE_EXPORT_COMPILE_COMMANDS=ON \\n  -DCMAKE_BUILD_TYPE=Debug \\n  -DBUILD_TESTING=ON \\n  -DENABLE_COVERAGE=ON
 8426  make -j 5
 8427  make
 8428  cd ../libraries/business/contract
 8429  ag -i infra -l
 8430  ag -i infra 
 8431  cd -
 8432  make -j 5
 8433  maKE
 8434  make
 8435  nvim .
 8436  cd build
 8437  make
 8438  git status
 8439  cd ..
 8440  gst
 8441  git add libraries/business/
 8442  gst
 8443  git add libraries/
 8444  git add tests/
 8445  git commit -m "[libs|business] incremental updates to business libs"
 8446  git push --force-with-lease origin HEAD
 8447  git status
 8448  git checkout master
 8449  gprav
 8450  gst
 8451  conan install . --output-folder=build --build=missing -s build_type=Debug
 8452  cd build
 8453  cmake .. \\n  -DCMAKE_TOOLCHAIN_FILE=build/Debug/generators/conan_toolchain.cmake \\n  -DCMAKE_CXX_FLAGS="-g -O0 -fprofile-arcs -ftest-coverage" \\n  -DCMAKE_C_FLAGS="-g -O0 -fprofile-arcs -ftest-coverage" \\n  -DCMAKE_EXE_LINKER_FLAGS="--coverage" \\n  -DCMAKE_EXPORT_COMPILE_COMMANDS=ON \\n  -DCMAKE_BUILD_TYPE=Debug \\n  -DBUILD_TESTING=ON \\n  -DENABLE_COVERAGE=ON
 8454  cmake --build . --target all test 
 8455  nvim .
 8456  cd build
 8457  cmake --build . --target all test 
 8458  ag -i dynamic_scope --cpp -l
 8459  cd ../libraries/foundation/commands
 8460  ag -i infralogger --cpp
 8461  cd -
 8462  cmake --build . --target all test 
 8463  cd ../libraries/foundation/commands
 8464  ag -i details
 8465  ag -i acce
 8466  ag -i infra
 8467  ag -i "infra::"
 8468  cd -
 8469  cd ..
 8470  rm -rf build
 8471  conan install . --output-folder=build --build=missing -s build_type=Debug
 8472  cd build
 8473  cmake --build . --target all test 
 8474  cmake .. \\n  -DCMAKE_TOOLCHAIN_FILE=build/Debug/generators/conan_toolchain.cmake \\n  -DCMAKE_CXX_FLAGS="-g -O0 -fprofile-arcs -ftest-coverage" \\n  -DCMAKE_C_FLAGS="-g -O0 -fprofile-arcs -ftest-coverage" \\n  -DCMAKE_EXE_LINKER_FLAGS="--coverage" \\n  -DCMAKE_EXPORT_COMPILE_COMMANDS=ON \\n  -DCMAKE_BUILD_TYPE=Debug \\n  -DBUILD_TESTING=ON \\n  -DENABLE_COVERAGE=ON
 8475  cmake --build . --target all test 
 8476  cd build
 8477  cmake --build . --target all test 
 8478  nvim .
 8479  gst
 8480  cd ..
 8481  gst
 8482  git add libraries/
 8483  gst
 8484  git add tests/
 8485  gst
 8486  git commit -m "[lib|tests] update foundation::commands to use found::infralogger & found::date-time and add it's unit-tests"
 8487  gprav
 8488  git push --force-with-lease origin HEAD
 8489  cd build
 8490  cmake --build . --target all test 
 8491  cd ..
 8492  rm -rf build
 8493  conan install . --output-folder=build --build=missing -s build_type=Debug
 8494  cd build
 8495  cmake --build . --target all test 
 8496  cmake .. \\n  -DCMAKE_TOOLCHAIN_FILE=build/Debug/generators/conan_toolchain.cmake \\n  -DCMAKE_CXX_FLAGS="-g -O0 -fprofile-arcs -ftest-coverage" \\n  -DCMAKE_C_FLAGS="-g -O0 -fprofile-arcs -ftest-coverage" \\n  -DCMAKE_EXE_LINKER_FLAGS="--coverage" \\n  -DCMAKE_EXPORT_COMPILE_COMMANDS=ON \\n  -DCMAKE_BUILD_TYPE=Debug \\n  -DBUILD_TESTING=ON \\n  -DENABLE_COVERAGE=ON
 8497  cmake --build . --target all test 
 8498  gst
 8499  cd ../libraries/foundation/app
 8500  ag -i infraconfig
 8501  gst
 8502  cd ../../..
 8503  ll
 8504  cd build
 8505  cmake --build . --target all test 
 8506  cd ..
 8507  gst
 8508  git add libraries/
 8509  gst
 8510  gd
 8511  gst
 8512  git add tests/
 8513  gst
 8514  git commit -m "[lib] incremental updates to foundation::app"
 8515  gprav
 8516  git push --force-with-lease origin HEAD
 8517  history | grep reset
 8518  gst
 8519  git status
 8520  gd
 8521  git status
 8522  tmux attach -t muxy
 8523  clear
 8524  git status
 8525  systemctl status openvpn-client@Blr-office-UDP4-1194-config
 8526  \tsudo systemctl start openvpn-client@Blr-office-UDP4-1194-config
 8527  systemctl status openvpn-client@Blr-office-UDP4-1194-config
 8528  git status
 8529  gst
 8530  gd
 8531  gst
 8532  nvim .
 8533  clear
 8534  conan install . --output-folder=build --build=missing -s build_type=Debug
 8535  rm -rf build
 8536  conan install . --output-folder=build --build=missing -s build_type=Debug
 8537  cd build
 8538  cmake .. \\n  -DCMAKE_TOOLCHAIN_FILE=build/Debug/generators/conan_toolchain.cmake \\n  -DCMAKE_CXX_FLAGS="-g -O0 -fprofile-arcs -ftest-coverage" \\n  -DCMAKE_C_FLAGS="-g -O0 -fprofile-arcs -ftest-coverage" \\n  -DCMAKE_EXE_LINKER_FLAGS="--coverage" \\n  -DCMAKE_EXPORT_COMPILE_COMMANDS=ON \\n  -DCMAKE_BUILD_TYPE=Debug \\n  -DBUILD_TESTING=ON \\n  -DENABLE_COVERAGE=ON
 8539  make -j 6
 8540  make
 8541  make -j 4
 8542  make
 8543  git status
 8544  make -j
 8545  cd ..
 8546  gst
 8547  git add libraries/
 8548  gst
 8549  gd
 8550  gst
 8551  gd tests/
 8552  gst
 8553  git add tests/
 8554  gst
 8555  git commit -m "[foundation::app] incremental fixes (build-fails)"
 8556  gst
 8557  cd
 8558  ranger
 8559  tmux attach -t muxy
 8560  gsty
 8561  gst
 8562  git status
 8563  glog
 8564  gprav
 8565  git push --force-with-lease origin HEAD
 8566  conan install . --output-folder=build --build=missing -s build_type=Debug
 8567  cd build
 8568  cmake .. \\n  -DCMAKE_TOOLCHAIN_FILE=build/Debug/generators/conan_toolchain.cmake \\n  -DCMAKE_CXX_FLAGS="-g -O0 -fprofile-arcs -ftest-coverage" \\n  -DCMAKE_C_FLAGS="-g -O0 -fprofile-arcs -ftest-coverage" \\n  -DCMAKE_EXE_LINKER_FLAGS="--coverage" \\n  -DCMAKE_EXPORT_COMPILE_COMMANDS=ON \\n  -DCMAKE_BUILD_TYPE=Debug \\n  -DBUILD_TESTING=ON \\n  -DENABLE_COVERAGE=ON
 8569  make -j 5
 8570  make
 8571  gst
 8572  cd ..
 8573  git add libraries/
 8574  gst
 8575  git commit -m "[foundation::app] incremental updates"
 8576  gst
 8577  gprav
 8578  git push --force-with-lease origin HEAD
 8579  git status
 8580  gst
 8581  git fetch -a
 8582  git checkout mohit/business
 8583  gprav
 8584  cd ..
 8585  cd -
 8586  conan install . --output-folder=build --build=missing -s build_type=Debug
 8587  cd build
 8588  cmake .. \\n  -DCMAKE_TOOLCHAIN_FILE=build/Debug/generators/conan_toolchain.cmake \\n  -DCMAKE_CXX_FLAGS="-g -O0 -fprofile-arcs -ftest-coverage" \\n  -DCMAKE_C_FLAGS="-g -O0 -fprofile-arcs -ftest-coverage" \\n  -DCMAKE_EXE_LINKER_FLAGS="--coverage" \\n  -DCMAKE_EXPORT_COMPILE_COMMANDS=ON \\n  -DCMAKE_BUILD_TYPE=Debug \\n  -DBUILD_TESTING=ON \\n  -DENABLE_COVERAGE=ON
 8589  make -j 
 8590  make
 8591  rs
 8592  make -j 
 8593  make
 8594  clear
 8595  make
 8596  make -j 5
 8597  make
 8598  make -j 5
 8599  cd ..
 8600  cd -
 8601  make
 8602  cd core
 8603  cd include
 8604  ag -i Exchange
 8605  ag -i Exchange --cpp -l
 8606  ag -i Exchange --cpp 
 8607  make
 8608  make 
 8609  make
 8610  gst
 8611  git stash list
 8612  git stash -m "core changes"
 8613  git checkout master
 8614  gst
 8615  git stash -m "core changes"
 8616  gst
 8617  git stash pop
 8618  gst
 8619  git stash list
 8620  gst
 8621  git add libraries/
 8622  gst
 8623  git commit -m "[business::contract/utils] incremental updates and build fix"
 8624  gprav
 8625  git push --force-with-lease origin HEAD
 8626  git checkout master
 8627  conan install . --output-folder=build --build=missing -s build_type=Debug
 8628  cd build
 8629  cmake .. \\n  -DCMAKE_TOOLCHAIN_FILE=build/Debug/generators/conan_toolchain.cmake \\n  -DCMAKE_CXX_FLAGS="-g -O0 -fprofile-arcs -ftest-coverage" \\n  -DCMAKE_C_FLAGS="-g -O0 -fprofile-arcs -ftest-coverage" \\n  -DCMAKE_EXE_LINKER_FLAGS="--coverage" \\n  -DCMAKE_EXPORT_COMPILE_COMMANDS=ON \\n  -DCMAKE_BUILD_TYPE=Debug \\n  -DBUILD_TESTING=ON \\n  -DENABLE_COVERAGE=ON
 8630  make -j 
 8631  git checkout mohit/business
 8632  gprav
 8633  rm -rf build
 8634  conan install . --output-folder=build --build=missing -s build_type=Debug
 8635  cd ..
 8636  rm -rf build
 8637  conan install . --output-folder=build --build=missing -s build_type=Debug
 8638  cd build
 8639  cmake .. \\n  -DCMAKE_TOOLCHAIN_FILE=build/Debug/generators/conan_toolchain.cmake \\n  -DCMAKE_CXX_FLAGS="-g -O0 -fprofile-arcs -ftest-coverage" \\n  -DCMAKE_C_FLAGS="-g -O0 -fprofile-arcs -ftest-coverage" \\n  -DCMAKE_EXE_LINKER_FLAGS="--coverage" \\n  -DCMAKE_EXPORT_COMPILE_COMMANDS=ON \\n  -DCMAKE_BUILD_TYPE=Debug \\n  -DBUILD_TESTING=ON \\n  -DENABLE_COVERAGE=ON
 8640  make -j 35
 8641  make -j 
 8642  make
 8643  gst
 8644  make -j
 8645  make 
 8646  clear
 8647  htop
 8648  nvim .
 8649  cd build
 8650  make 
 8651  make
 8652  make 
 8653  make
 8654  gst
 8655  cd ../libraries
 8656  gst
 8657  git add business/
 8658  cd ..
 8659  cd -
 8660  gst
 8661  git add libraries/
 8662  git commit -m "[libs|business] fix build errors for business::utils & bussiness::currency"
 8663  gprav
 8664  git push --force-with-lease origin HEAD
 8665  alias gprav
 8666  gst
 8667  gprav
 8668  git status
 8669  gst
 8670  systemctl status openvpn-client@Blr-office-UDP4-1194-config
 8671  \tsudo systemctl start openvpn-client@Blr-office-UDP4-1194-config
 8672  clear
 8673  systemctl status openvpn-client@Blr-office-UDP4-1194-config
 8674  clear
 8675  sudo shutdown -h now
 8676  tmux new -s muxy
 8677  nvim .
 8678  gst
 8679  gprav
 8680  nvim .
 8681  rm -rf build
 8682  conan install . --output-folder=build --build=missing -s build_type=Debug
 8683  cd build
 8684  cmake .. \\n  -DCMAKE_TOOLCHAIN_FILE=build/Debug/generators/conan_toolchain.cmake \\n  -DCMAKE_CXX_FLAGS="-g -O0 -fprofile-arcs -ftest-coverage" \\n  -DCMAKE_C_FLAGS="-g -O0 -fprofile-arcs -ftest-coverage" \\n  -DCMAKE_EXE_LINKER_FLAGS="--coverage" \\n  -DCMAKE_EXPORT_COMPILE_COMMANDS=ON \\n  -DCMAKE_BUILD_TYPE=Debug \\n  -DBUILD_TESTING=ON \\n  -DENABLE_COVERAGE=ON
 8685  make -j 4
 8686  make
 8687  make -j 4
 8688  cd ..
 8689  rm -rf build
 8690  conan install . --output-folder=build --build=missing -s build_type=Debug
 8691  cd build
 8692  cmake .. \\n  -DCMAKE_TOOLCHAIN_FILE=build/Debug/generators/conan_toolchain.cmake \\n  -DCMAKE_CXX_FLAGS="-g -O0 -fprofile-arcs -ftest-coverage" \\n  -DCMAKE_C_FLAGS="-g -O0 -fprofile-arcs -ftest-coverage" \\n  -DCMAKE_EXE_LINKER_FLAGS="--coverage" \\n  -DCMAKE_EXPORT_COMPILE_COMMANDS=ON \\n  -DCMAKE_BUILD_TYPE=Debug \\n  -DBUILD_TESTING=ON \\n  -DENABLE_COVERAGE=ON
 8693  make -j 
 8694  make
 8695  cd ../libraries/business/contract
 8696  ag -i boost
 8697  gcc --version
 8698  cd ../..
 8699  cd ..
 8700  cd build
 8701  make
 8702  nvim .
 8703  cd ../libraries/business
 8704  cd ../..
 8705  cd build
 8706  cd ..
 8707  rm -rf build
 8708  conan install . --output-folder=build --build=missing -s build_type=Debug
 8709  cd build
 8710  cmake .. \\n  -DCMAKE_TOOLCHAIN_FILE=build/Debug/generators/conan_toolchain.cmake \\n  -DCMAKE_CXX_FLAGS="-g -O0 -fprofile-arcs -ftest-coverage" \\n  -DCMAKE_C_FLAGS="-g -O0 -fprofile-arcs -ftest-coverage" \\n  -DCMAKE_EXE_LINKER_FLAGS="--coverage" \\n  -DCMAKE_EXPORT_COMPILE_COMMANDS=ON \\n  -DCMAKE_BUILD_TYPE=Debug \\n  -DBUILD_TESTING=ON \\n  -DENABLE_COVERAGE=ON
 8711  make -j 
 8712  make
 8713  clear
 8714  cd ..
 8715  ag -i "1.58" * -l
 8716  ag -i "1.58" * 
 8717  ag -i "1.5" *
 8718  cd libraries
 8719  cd ..
 8720  rm -rf build
 8721  conan install . --output-folder=build --build=missing -s build_type=Debug
 8722  cd build
 8723  cmake .. \\n  -DCMAKE_TOOLCHAIN_FILE=build/Debug/generators/conan_toolchain.cmake \\n  -DCMAKE_CXX_FLAGS="-g -O0 -fprofile-arcs -ftest-coverage" \\n  -DCMAKE_C_FLAGS="-g -O0 -fprofile-arcs -ftest-coverage" \\n  -DCMAKE_EXE_LINKER_FLAGS="--coverage" \\n  -DCMAKE_EXPORT_COMPILE_COMMANDS=ON \\n  -DCMAKE_BUILD_TYPE=Debug \\n  -DBUILD_TESTING=ON \\n  -DENABLE_COVERAGE=ON
 8724  make -j 
 8725  cd ..
 8726  gst
 8727  git restore libraries/business/contract/*.cpp
 8728  git restore libraries/business/currency/*.cpp
 8729  git restore libraries/business/currency/sources/
 8730  git restore libraries/business/contract/sources/
 8731  git restore libraries/business/utils/
 8732  gst
 8733  rm libraries/business/utils/includes/utils/boost_string_utils.h
 8734  gst
 8735  rm -rf build
 8736  gd
 8737  clear
 8738  conan install . --output-folder=build --build=missing -s build_type=Debug
 8739  cd build
 8740  cmake .. \\n  -DCMAKE_TOOLCHAIN_FILE=build/Debug/generators/conan_toolchain.cmake \\n  -DCMAKE_CXX_FLAGS="-g -O0 -fprofile-arcs -ftest-coverage" \\n  -DCMAKE_C_FLAGS="-g -O0 -fprofile-arcs -ftest-coverage" \\n  -DCMAKE_EXE_LINKER_FLAGS="--coverage" \\n  -DCMAKE_EXPORT_COMPILE_COMMANDS=ON \\n  -DCMAKE_BUILD_TYPE=Debug \\n  -DBUILD_TESTING=ON \\n  -DENABLE_COVERAGE=ON
 8741  make -j 
 8742  make
 8743  cd .
 8744  cd ..
 8745  rm -rf build
 8746  mkdir build
 8747  cd build
 8748  ll
 8749  cd ..
 8750  rm -rf build
 8751  conan install . --output-folder=build --build=missing -s build_type=Debug
 8752  cd build
 8753  cmake .. \\n  -DCMAKE_TOOLCHAIN_FILE=build/Debug/generators/conan_toolchain.cmake \\n  -DCMAKE_CXX_FLAGS="-g -O0 -fprofile-arcs -ftest-coverage" \\n  -DCMAKE_C_FLAGS="-g -O0 -fprofile-arcs -ftest-coverage" \\n  -DCMAKE_EXE_LINKER_FLAGS="--coverage" \\n  -DCMAKE_EXPORT_COMPILE_COMMANDS=ON \\n  -DCMAKE_BUILD_TYPE=Debug \\n  -DBUILD_TESTING=ON \\n  -DENABLE_COVERAGE=ON
 8754  make -j 
 8755  make
 8756  \t\t\t\t\t\t\t\t\t./run.py --source ~/files/projects/plat_tmp_work/platform/core/include/core/contract --output ~/files/learn/codectx_out/contract_inc.txt
 8757  \t\t\t\t\t\t\t\t\t./run.py --source ~/files/projects/plat_tmp_work/platform/core/src/contract --output ~/files/learn/codectx_out/contract_src.txt
 8758  \t\t\t\t\t\t\t\t\t./run.py --source ~/files/projects/plat_tmp_work/platform/core/test/contract --output ~/files/learn/codectx_out/contract_test.txt
 8759  cctxo
 8760  nvim .
 8761  git status
 8762  gd
 8763  gst
 8764  gd
 8765  git statsh list
 8766  cd ..
 8767  conan install . --output-folder=build --build=missing -s build_type=Debug
 8768  make -j
 8769  cd build
 8770  cmake .. \\n  -DCMAKE_TOOLCHAIN_FILE=build/Debug/generators/conan_toolchain.cmake \\n  -DCMAKE_CXX_FLAGS="-g -O0 -fprofile-arcs -ftest-coverage" \\n  -DCMAKE_C_FLAGS="-g -O0 -fprofile-arcs -ftest-coverage" \\n  -DCMAKE_EXE_LINKER_FLAGS="--coverage" \\n  -DCMAKE_EXPORT_COMPILE_COMMANDS=ON \\n  -DCMAKE_BUILD_TYPE=Debug \\n  -DBUILD_TESTING=ON \\n  -DENABLE_COVERAGE=ON
 8771  make -j
 8772  gst
 8773  git status
 8774  git difff
 8775  gsat
 8776  gst
 8777  gd
 8778  gst
 8779  git stash list
 8780  git stash -m tmp
 8781  gst
 8782  git checkout master
 8783  cd ...
 8784  cd ..
 8785  gprav
 8786  cd 
 8787  cd -
 8788  cd projects
 8789  cd simple_trading_platform
 8790  gprav
 8791  tmux ls
 8792  tmux attach -t muxy
 8793  gd
 8794  gst
 8795  gprav
 8796  rm -rf build
 8797  conan install . --output-folder=build --build=missing -s build_type=Debug
 8798  cmake .. \\n  -DCMAKE_TOOLCHAIN_FILE=build/Debug/generators/conan_toolchain.cmake \\n  -DCMAKE_CXX_FLAGS="-g -O0 -fprofile-arcs -ftest-coverage" \\n  -DCMAKE_C_FLAGS="-g -O0 -fprofile-arcs -ftest-coverage" \\n  -DCMAKE_EXE_LINKER_FLAGS="--coverage" \\n  -DCMAKE_EXPORT_COMPILE_COMMANDS=ON \\n  -DCMAKE_BUILD_TYPE=Debug \\n  -DBUILD_TESTING=ON \\n  -DENABLE_COVERAGE=ON
 8799  cd build
 8800  cmake .. \\n  -DCMAKE_TOOLCHAIN_FILE=build/Debug/generators/conan_toolchain.cmake \\n  -DCMAKE_CXX_FLAGS="-g -O0 -fprofile-arcs -ftest-coverage" \\n  -DCMAKE_C_FLAGS="-g -O0 -fprofile-arcs -ftest-coverage" \\n  -DCMAKE_EXE_LINKER_FLAGS="--coverage" \\n  -DCMAKE_EXPORT_COMPILE_COMMANDS=ON \\n  -DCMAKE_BUILD_TYPE=Debug \\n  -DBUILD_TESTING=ON \\n  -DENABLE_COVERAGE=ON
 8801  make -j
 8802  cd .
 8803  gst
 8804  cmake --build . --target all test 
 8805  cd ..
 8806  ag -i "loglevel_formatter.h
 8807  ag -i "loglevel_formatter.h"
 8808  cd libraries/foundation/infralogger
 8809  ag -i dynamic_scope
 8810  cd -
 8811  cd build
 8812  cmake --build . --target all test 
 8813  cd ..
 8814  gst
 8815  git restore libraries/
 8816  gst
 8817  git restore test
 8818  git restore tests/
 8819  gst
 8820  conan install . --output-folder=build --build=missing -s build_type=Debug
 8821  cd build
 8822  cmake .. \\n  -DCMAKE_TOOLCHAIN_FILE=build/Debug/generators/conan_toolchain.cmake \\n  -DCMAKE_CXX_FLAGS="-g -O0 -fprofile-arcs -ftest-coverage" \\n  -DCMAKE_C_FLAGS="-g -O0 -fprofile-arcs -ftest-coverage" \\n  -DCMAKE_EXE_LINKER_FLAGS="--coverage" \\n  -DCMAKE_EXPORT_COMPILE_COMMANDS=ON \\n  -DCMAKE_BUILD_TYPE=Debug \\n  -DBUILD_TESTING=ON \\n  -DENABLE_COVERAGE=ON
 8823  make -j
 8824  cmake --build . --target all test 
 8825  make -j
 8826  cmake --build . --target all test 
 8827  make -j
 8828  cmake --build . --target all test 
 8829  cd ..
 8830  ag -i stp-found-http --cmake -l
 8831  ag -i stp-found-http --cmake 
 8832  cd build
 8833  make -j
 8834  cmake --build . --target all test 
 8835  cp -f compile_commands.json ..
 8836  cd ..
 8837  ag -i disable --cpp -l 
 8838  ag -i disable --cpp  | grep test
 8839  ag -i disable tests
 8840  cd build
 8841  cmake --build . --target all test 
 8842  cleasr
 8843  nvim .
 8844  cd build
 8845  cmake --build . --target all test 
 8846  gst
 8847  make -j
 8848  cmake --build . --target all test 
 8849  cd ..
 8850  gst
 8851  git add tests/ libraries/ applications/ libraries/
 8852  gst
 8853  git commit -m "[libs|tests] incremental tests/lib changes"
 8854  cd build
 8855  make
 8856  make -j
 8857  cmake --build . --target all test 
 8858  st
 8859  cd ..
 8860  gst
 8861  gd
 8862  nvim .
 8863  gst
 8864  gprav
 8865  gdt
 8866  gst
 8867  git rebase --abort
 8868  gst
 8869  gprav
 8870  gst
 8871  git add .
 8872  gst
 8873  git rebase --continue
 8874  rm -rf build
 8875  conan install . --output-folder=build --build=missing -s build_type=Debug
 8876  cd build
 8877  cmake .. \\n  -DCMAKE_TOOLCHAIN_FILE=build/Debug/generators/conan_toolchain.cmake \\n  -DCMAKE_CXX_FLAGS="-g -O0 -fprofile-arcs -ftest-coverage" \\n  -DCMAKE_C_FLAGS="-g -O0 -fprofile-arcs -ftest-coverage" \\n  -DCMAKE_EXE_LINKER_FLAGS="--coverage" \\n  -DCMAKE_EXPORT_COMPILE_COMMANDS=ON \\n  -DCMAKE_BUILD_TYPE=Debug \\n  -DBUILD_TESTING=ON \\n  -DENABLE_COVERAGE=ON
 8878  mkdir /home/akhil/files/projects/simple_trading_platform/tests/libraries/business/trading_calendar/data
 8879  cmake .. \\n  -DCMAKE_TOOLCHAIN_FILE=build/Debug/generators/conan_toolchain.cmake \\n  -DCMAKE_CXX_FLAGS="-g -O0 -fprofile-arcs -ftest-coverage" \\n  -DCMAKE_C_FLAGS="-g -O0 -fprofile-arcs -ftest-coverage" \\n  -DCMAKE_EXE_LINKER_FLAGS="--coverage" \\n  -DCMAKE_EXPORT_COMPILE_COMMANDS=ON \\n  -DCMAKE_BUILD_TYPE=Debug \\n  -DBUILD_TESTING=ON \\n  -DENABLE_COVERAGE=ON
 8880  make -j
 8881  gst
 8882  make
 8883  make -j
 8884  gst
 8885  git branch 
 8886  cd ..
 8887  glog
 8888  git checkout mohit/business
 8889  gst
 8890  git statsh -m tmp
 8891  git stash -m tmp
 8892  gst
 8893  git checkout mohit/business
 8894  git branch -d master
 8895  git branch -a
 8896  git branch -d master --force
 8897  git fetch -a
 8898  git checkout master
 8899  conan install . --output-folder=build --build=missing -s build_type=Debug
 8900  cd build
 8901  cmake .. \\n  -DCMAKE_TOOLCHAIN_FILE=build/Debug/generators/conan_toolchain.cmake \\n  -DCMAKE_CXX_FLAGS="-g -O0 -fprofile-arcs -ftest-coverage" \\n  -DCMAKE_C_FLAGS="-g -O0 -fprofile-arcs -ftest-coverage" \\n  -DCMAKE_EXE_LINKER_FLAGS="--coverage" \\n  -DCMAKE_EXPORT_COMPILE_COMMANDS=ON \\n  -DCMAKE_BUILD_TYPE=Debug \\n  -DBUILD_TESTING=ON \\n  -DENABLE_COVERAGE=ON
 8902  make -j 
 8903  cd ..
 8904  git checkout mohit/business
 8905  git branch -d master --force
 8906  git branch -a
 8907  git fetch -a
 8908  git branch
 8909  git fetch -a
 8910  git fetch -a\
 8911  git fetch -a
 8912  git checkout master
 8913  conan install . --output-folder=build --build=missing -s build_type=Debug
 8914  cd build
 8915  cmake .. \\n  -DCMAKE_TOOLCHAIN_FILE=build/Debug/generators/conan_toolchain.cmake \\n  -DCMAKE_CXX_FLAGS="-g -O0 -fprofile-arcs -ftest-coverage" \\n  -DCMAKE_C_FLAGS="-g -O0 -fprofile-arcs -ftest-coverage" \\n  -DCMAKE_EXE_LINKER_FLAGS="--coverage" \\n  -DCMAKE_EXPORT_COMPILE_COMMANDS=ON \\n  -DCMAKE_BUILD_TYPE=Debug \\n  -DBUILD_TESTING=ON \\n  -DENABLE_COVERAGE=ON
 8916  make -j
 8917  make
 8918  gst
 8919  cd ..
 8920  gprav
 8921  cd build
 8922  make -j
 8923  cd ..
 8924  gst
 8925  gd libraries/communication/
 8926  gst
 8927  gd libraries/communication/network/includes/
 8928  cd build
 8929  make -j
 8930  cmake --build . --target all test 
 8931  gst
 8932  gd
 8933  cmake --build . --target all test 
 8934  gst
 8935  cd ..
 8936  gst
 8937  git add libraries/ tests/ 
 8938  gst
 8939  git commit -m "[tests] fix test env with logger initialization (add dynamic_scope initialization)"
 8940  gprav
 8941  git push --force-wtih-lease origin HEAD
 8942  gst
 8943  git push --force-with-lease origin HEAD
 8944  cd build
 8945  cd ..
 8946  rm -rf build
 8947  conan install . --output-folder=build --build=missing -s build_type=Debug
 8948  cmake .. \\n  -DCMAKE_TOOLCHAIN_FILE=build/Debug/generators/conan_toolchain.cmake \\n  -DCMAKE_CXX_FLAGS="-g -O0 -fprofile-arcs -ftest-coverage" \\n  -DCMAKE_C_FLAGS="-g -O0 -fprofile-arcs -ftest-coverage" \\n  -DCMAKE_EXE_LINKER_FLAGS="--coverage" \\n  -DCMAKE_EXPORT_COMPILE_COMMANDS=ON \\n  -DCMAKE_BUILD_TYPE=Debug \\n  -DBUILD_TESTING=ON \\n  -DENABLE_COVERAGE=ON
 8949  cd build
 8950  cmake .. \\n  -DCMAKE_TOOLCHAIN_FILE=build/Debug/generators/conan_toolchain.cmake \\n  -DCMAKE_CXX_FLAGS="-g -O0 -fprofile-arcs -ftest-coverage" \\n  -DCMAKE_C_FLAGS="-g -O0 -fprofile-arcs -ftest-coverage" \\n  -DCMAKE_EXE_LINKER_FLAGS="--coverage" \\n  -DCMAKE_EXPORT_COMPILE_COMMANDS=ON \\n  -DCMAKE_BUILD_TYPE=Debug \\n  -DBUILD_TESTING=ON \\n  -DENABLE_COVERAGE=ON
 8951  make -j
 8952  cmake --build . --target all test 
 8953  clear
 8954  cmake --build . --target all test 
 8955  git status
 8956  gst
 8957  gd
 8958  cd ..
 8959  gprav
 8960  conan install . --output-folder=build --build=missing -s build_type=Debug
 8961  cd build
 8962  cmake .. \\n  -DCMAKE_TOOLCHAIN_FILE=build/Debug/generators/conan_toolchain.cmake \\n  -DCMAKE_CXX_FLAGS="-g -O0 -fprofile-arcs -ftest-coverage" \\n  -DCMAKE_C_FLAGS="-g -O0 -fprofile-arcs -ftest-coverage" \\n  -DCMAKE_EXE_LINKER_FLAGS="--coverage" \\n  -DCMAKE_EXPORT_COMPILE_COMMANDS=ON \\n  -DCMAKE_BUILD_TYPE=Debug \\n  -DBUILD_TESTING=ON \\n  -DENABLE_COVERAGE=ON
 8963  make -oj
 8964  make -j
 8965  clear
 8966  sudo pacman -Syu
 8967  nvim .
 8968  clear
 8969  tmux new -s muxy
 8970  nvim .
 8971  clear
 8972  tmux new -s muxy
 8973  tmux attach -t muxy
 8974  gst
 8975  conan install . --output-folder=build --build=missing -s build_type=Debug
 8976  cd build
 8977  cmake .. \\n  -DCMAKE_TOOLCHAIN_FILE=build/Debug/generators/conan_toolchain.cmake \\n  -DCMAKE_CXX_FLAGS="-g -O0 -fprofile-arcs -ftest-coverage" \\n  -DCMAKE_C_FLAGS="-g -O0 -fprofile-arcs -ftest-coverage" \\n  -DCMAKE_EXE_LINKER_FLAGS="--coverage" \\n  -DCMAKE_EXPORT_COMPILE_COMMANDS=ON \\n  -DCMAKE_BUILD_TYPE=Debug \\n  -DBUILD_TESTING=ON \\n  -DENABLE_COVERAGE=ON
 8978  make -j 
 8979  cp -f compile_commands.json ..
 8980  cd build
 8981  history | grep - cmake
 8982  history | grep -i cmake
 8983  cmake .. -DCMAKE_TOOLCHAIN_FILE=build/build/Release/generators/conan_toolchain.cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON
 8984  cmake ..  -DCMAKE_EXPORT_COMPILE_COMMANDS=ON
 8985  cp compile_commands.json ..
 8986  nvim .
 8987  rm -rf build
 8988  mkdir build
 8989  cd b
 8990  cd build
 8991  cmake ..  -DCMAKE_EXPORT_COMPILE_COMMANDS=ON
 8992  cp -f compile_commands.json ..
 8993  nvim .
 8994  cd core/include
 8995  ag -i system_id --cpp
 8996  ag -i system_id --cpp -l
 8997  git status
 8998  gst
 8999  git sttaus
 9000  gst
 9001  git status
 9002  clesar
 9003  git status
 9004  gd
 9005  gst
 9006  git restore .
 9007  gst
 9008  git restore *
 9009  gt
 9010  gst
 9011  cd ..
 9012  git restore .
 9013  gst
 9014  gprav
 9015  iccleasr
 9016  clesar
 9017  gst
 9018  igst
 9019  git status
 9020  gd libraries/
 9021  git fetch -a
 9022  git branch -a
 9023  git checkout -b akhil/rms_integration
 9024  gst
 9025  clear
 9026  cp -f ../plat_tmp_work/platform/rms/include/rms libraries/trading_modules/rms/includes
 9027  cp -r ../plat_tmp_work/platform/rms/include/rms libraries/trading_modules/rms/includes
 9028  gst
 9029  cp -r ../plat_tmp_work/platform/rms/src  libraries/trading_modules/rms/sources
 9030  git st atus
 9031  gst
 9032  gbr
 9033  cd rms
 9034  cd libraries
 9035  cd trading_modules
 9036  cd rms
 9037  ag -i "infra::"
 9038  clear
 9039  git status
 9040  ll
 9041  tree includes
 9042  tree sources
 9043  clear
 9044  git status
 9045  igit status
 9046  gst
 9047  ga .obsidian/workspace.json
 9048  gst
 9049  git rebase --continue
 9050  gprav
 9051  git push --force-with-lease origin HEAD
 9052  cledar
 9053  clear
 9054  git status
 9055  gd
 9056  ag -i "core::" --cpp -ol
 9057  ag -i "core::" --cpp -l
 9058  ag -i "core::" --cpp 
 9059  cd ../../
 9060  ll
 9061  cd ..
 9062  cd build
 9063  cmake ..  -DCMAKE_EXPORT_COMPILE_COMMANDS=ON
 9064  cmake .. \\n  -DCMAKE_TOOLCHAIN_FILE=build/Debug/generators/conan_toolchain.cmake \\n  -DCMAKE_CXX_FLAGS="-g -O0 -fprofile-arcs -ftest-coverage" \\n  -DCMAKE_C_FLAGS="-g -O0 -fprofile-arcs -ftest-coverage" \\n  -DCMAKE_EXE_LINKER_FLAGS="--coverage" \\n  -DCMAKE_EXPORT_COMPILE_COMMANDS=ON \\n  -DCMAKE_BUILD_TYPE=Debug \\n  -DBUILD_TESTING=ON \\n  -DENABLE_COVERAGE=ON
 9065  conan install . --output-folder=build --build=missing -s build_type=Debug
 9066  rm -rf build
 9067  conan install . --output-folder=build --build=missing -s build_type=Debug
 9068  cd ..
 9069  rm -rf build
 9070  conan install . --output-folder=build --build=missing -s build_type=Debug
 9071  cd build
 9072  cmake .. \\n  -DCMAKE_TOOLCHAIN_FILE=build/Debug/generators/conan_toolchain.cmake \\n  -DCMAKE_CXX_FLAGS="-g -O0 -fprofile-arcs -ftest-coverage" \\n  -DCMAKE_C_FLAGS="-g -O0 -fprofile-arcs -ftest-coverage" \\n  -DCMAKE_EXE_LINKER_FLAGS="--coverage" \\n  -DCMAKE_EXPORT_COMPILE_COMMANDS=ON \\n  -DCMAKE_BUILD_TYPE=Debug \\n  -DBUILD_TESTING=ON \\n  -DENABLE_COVERAGE=ON
 9073  make -j 4
 9074  gst
 9075  gprav
 9076  gd
 9077  gst
 9078  git add .obsidian/workspace.json
 9079  git commit -m "workspace resolution"
 9080  gprav
 9081  git push --force-with-lease origin HEAD
 9082  cmake --build . --target all test 
 9083  cmake --build . --target all test coverage
 9084  fg
 9085  nvim .
 9086  ranger
 9087  sudo shutdown -h now
 9088  sudo systemctl reboot
 9089  sudo systemctl -h | grep shut
 9090  sudo systemctl reboot
 9091  sudo shutdown -h now
 9092  e
 9093  akhil
 9094  sudo shutdown -h now
 9095  su -
 9096  history | grep -i nmcli
 9097  nmcli connection show
 9098  nmcli device list
 9099  nmcli device 
 9100  nmcli device  connect wlp0s20f3
 9101  networkctl
 9102  networkctl up wlp0s20f3
 9103  sudo systemctl reboot
 9104  history | grep -i {network,nm,cli,mgr}
 9105  history | grep -i network
 9106  networkctl
 9107  history
 9108  networkctl
 9109  history | grep -i network
 9110  systemctl status NetworkManager.service
 9111  networkctl
 9112  systemctl status systemd-networkd.service
 9113  sudo systemctl start systemd-networkd.service
 9114  systemctl status systemd-networkd.service
 9115  netcap
 9116  networkctl
 9117  NetworkManager
 9118  NetworkManager .
 9119  NetworkManager -v
 9120  NetworkManager --help
 9121  NetworkManager --help-all
 9122  NetworkManager --print-config
 9123  clear
 9124  tmux new -s muxy
 9125  nvim .
 9126  clear
 9127  exit
 9128  ll
 9129  gprav
 9130  nvim .
 9131  tmux new -s muxy
 9132  tmux attach -t muxy
 9133  gst
 9134  gd
 9135  gst
 9136  git add alacritty/ lazyvim/
 9137  git commit -m "[lazynvim|alacritty] add transparancy plugin and alacritty font change"
 9138  gprav
 9139  git push --force-with-lease origin HEAD
 9140  gprav
 9141  nvim .
 9142  clear
 9143  gst
 9144  gprav
 9145  systemctl status openvpn-client@Blr-office-UDP4-1194-config
 9146  \tsudo systemctl start openvpn-client@Blr-office-UDP4-1194-config
 9147  nvim .
 9148  \tsudo systemctl start openvpn-client@Blr-office-UDP4-1194-config
 9149  systemctl status openvpn-client@Blr-office-UDP4-1194-config
 9150  \tsudo systemctl restart openvpn-client@Blr-office-UDP4-1194-config
 9151  systemctl status openvpn-client@Blr-office-UDP4-1194-config
 9152  gprav
 9153  history | grep -i openvpn
 9154  \tsudo systemctl reload-or-restart openvpn-client@Blr-office-UDP4-1194-config
 9155  systemctl status openvpn-client@Blr-office-UDP4-1194-config
 9156  \tsudo systemctl reload-or-restart openvpn-client@Blr-office-UDP4-1194-config
 9157  systemctl status openvpn-client@Blr-office-UDP4-1194-config
 9158  \tsudo systemctl enable openvpn-client@Blr-office-UDP4-1194-config
 9159  systemctl status openvpn-client@Blr-office-UDP4-1194-config
 9160  \tsudo systemctl reload-or-restart openvpn-client@Blr-office-UDP4-1194-config
 9161  systemctl status openvpn-client@Blr-office-UDP4-1194-config
 9162  gprav
 9163  systemctl status openvpn-client@Blr-office-UDP4-1194-config
 9164  \tsudo systemctl reload-or-restart openvpn-client@Blr-office-UDP4-1194-config
 9165  systemctl status openvpn-client@Blr-office-UDP4-1194-config
 9166  gprav
 9167  gst
 9168  gd
 9169  ll
 9170  dev132
 9171  fg
 9172  nvim .
 9173  dev132
 9174  gource .
 9175  clear
 9176  ls -lart
 9177  clear
 9178  gst
 9179  ll
 9180  ls -lart
 9181  clear
 9182  exit
 9183  sudo systemctl restart NetworkManager
 9184  clear
 9185  sudo pacman -Syu
 9186  clear
 9187  tmux new -s muxy
 9188  nvim .
 9189  omz update
 9190  clear
 9191  sudo pacman -Syu linux-firmware\n
 9192  cd
 9193  sudo vim /etc/vconsole.conf
 9194  gprav
 9195  nvim .
 9196  sudo vim /etc/vconsole.conf
 9197  sudo mkinitcpio -P
 9198  clear
 9199  nvim .
 9200  sudo pacman -Syu
 9201  exit
 9202  yay -Syu
 9203  clear
 9204  gst
 9205  conan install . --output-folder=build --build=missing -s build_type=Debug
 9206  cd build
 9207  cd ..
 9208  rm -rf build
 9209  conan install . --output-folder=build --build=missing -s build_type=Debug
 9210  cd build
 9211  cmake .. \\n  -DCMAKE_TOOLCHAIN_FILE=build/Debug/generators/conan_toolchain.cmake \\n  -DCMAKE_CXX_FLAGS="-g -O0 -fprofile-arcs -ftest-coverage" \\n  -DCMAKE_C_FLAGS="-g -O0 -fprofile-arcs -ftest-coverage" \\n  -DCMAKE_EXE_LINKER_FLAGS="--coverage" \\n  -DCMAKE_EXPORT_COMPILE_COMMANDS=ON \\n  -DCMAKE_BUILD_TYPE=Debug \\n  -DBUILD_TESTING=ON \\n  -DENABLE_COVERAGE=ON
 9212  make -j 3
 9213  clear
 9214  make -j 3
 9215  clear
 9216  nvim .
 9217  gst
 9218  pacman -Syu install fortune cowse
 9219  sudo pacman -Syu install fortune cowsay
 9220  sudo pacman  install fortune cowsay
 9221  sudo pacman -Sy fortune cowsay
 9222  sudo pacman -Sy  cowsay
 9223  cowsay
 9224  pacman -Syu
 9225  sudo pacman -Syu
 9226  cowthink
 9227  cowsay
 9228  pacman -Rs cowsay
 9229  sudo pacman -Rs cowsay
 9230  yay install cowsay
 9231  cowsay
 9232  _cowsay
 9233  yay install cowsay
 9234  which cowsay
 9235  yay -Sy cowsay
 9236  cowsay
 9237  which cowsay
 9238  yay -R cowsay
 9239  sudo pacman -S cowsay
 9240  cowsay
 9241  cowsay text
 9242  pacman -Qs fortune
 9243  pacman -Qs fort
 9244  cowsay -g hello world
 9245  fortune
 9246  pacman -S fortune
 9247  sudo pacman -S fortune
 9248  yay -Qs fortune
 9249  yay -Qs fort
 9250  cleasr
 9251  pacman -Syu fo
 9252  pacman -Syu misfortune
 9253  sudo pacman -Syu misfortune
 9254  clear
 9255  fortune | cowsay
 9256  misfortune | cowsay
 9257  misfortune | cowsay -g
 9258  misfortune | cowsay -f dragon
 9259  clear
 9260  rogue
 9261  pacman -Sy rogue
 9262  sudo @@
 9263  sudo pacman -Sy rogue
 9264  sudo pacman -Sy rougue
 9265  sudo pacman -Sy rogue
 9266  yay -Sy rogue
 9267  rogue
 9268  which rogue
 9269  exit
 9270  clear
 9271  exit
 9272  nvim .
 9273  cd ..
 9274  nvim .
 9275  plat
 9276  gst
 9277  gprav
 9278  cp -f rms/CMakeLists.txt ../simple_trading_platform/libraries/trading_modules/rms
 9279  cd ..
 9280  ranger .
 9281  gst
 9282  gprav
 9283  ranger
 9284  nvim .
 9285  cd build
 9286  cmake .. \\n  -DCMAKE_TOOLCHAIN_FILE=build/Debug/generators/conan_toolchain.cmake \\n  -DCMAKE_CXX_FLAGS="-g -O0 -fprofile-arcs -ftest-coverage" \\n  -DCMAKE_C_FLAGS="-g -O0 -fprofile-arcs -ftest-coverage" \\n  -DCMAKE_EXE_LINKER_FLAGS="--coverage" \\n  -DCMAKE_EXPORT_COMPILE_COMMANDS=ON \\n  -DCMAKE_BUILD_TYPE=Debug \\n  -DBUILD_TESTING=ON \\n  -DENABLE_COVERAGE=ON
 9287  make -j
 9288  clear
 9289  rm -rf build
 9290  ll
 9291  conan install . --output-folder=build --build=missing -s build_type=Debug
 9292  ag -i json --cmake
 9293  cd build
 9294  cmake .. \\n  -DCMAKE_TOOLCHAIN_FILE=build/Debug/generators/conan_toolchain.cmake \\n  -DCMAKE_CXX_FLAGS="-g -O0 -fprofile-arcs -ftest-coverage" \\n  -DCMAKE_C_FLAGS="-g -O0 -fprofile-arcs -ftest-coverage" \\n  -DCMAKE_EXE_LINKER_FLAGS="--coverage" \\n  -DCMAKE_EXPORT_COMPILE_COMMANDS=ON \\n  -DCMAKE_BUILD_TYPE=Debug \\n  -DBUILD_TESTING=ON \\n  -DENABLE_COVERAGE=ON
 9295  make -j 4
 9296  git status
 9297  git fetch -a
 9298  nvim .
 9299  cmake --build . --target all test coverage
 9300  cmake --build . --target all coverage
 9301  cd ..
 9302  glog
 9303  glog -a
 9304  glog --author
 9305  glog --author=akhil
 9306  glog --author=mohit
 9307  exit
 9308  sudo shutdown -h now
 9309  sudo systemctl reboot
 9310  exit
 9311  xrandr
 9312  lspci | grep -i vga\n
 9313  pacman -Qs xf86-video-intel\n
 9314  sudo pacman -Syu xf86-video-intel
 9315  lsmod | grep i915\n
 9316  journalctl -b | grep -i hdmi\n
 9317  journalctl -b | grep -i usb\n
 9318  journalctl -b | grep -i usbc
 9319  journalctl -b | grep -i usb-c
 9320  journalctl -b | grep -i usb
 9321  exit
 9322  fortume | cowsay
 9323  cowsay "I love swatifortume | cowsay\n\n\
 9324  cowsay I love swatifortume\n\n\
 9325  clear
 9326  cowsay hellow
 9327  clear
 9328  tmux new -s muxy
 9329  nvim .
 9330  cfg
 9331  nvim alacritty
 9332  \t\ti3-msg move workspace to output HDMI-2
 9333  clera
 9334  tmux new -s muxy
 9335  tmux attach -t muxy
 9336  cd build
 9337  cmake .. \\n  -DCMAKE_TOOLCHAIN_FILE=build/Debug/generators/conan_toolchain.cmake \\n  -DCMAKE_CXX_FLAGS="-g -O0 -fprofile-arcs -ftest-coverage" \\n  -DCMAKE_C_FLAGS="-g -O0 -fprofile-arcs -ftest-coverage" \\n  -DCMAKE_EXE_LINKER_FLAGS="--coverage" \\n  -DCMAKE_EXPORT_COMPILE_COMMANDS=ON \\n  -DCMAKE_BUILD_TYPE=Debug \\n  -DBUILD_TESTING=ON \\n  -DENABLE_COVERAGE=ON
 9338  make -j
 9339  clear
 9340  clesar
 9341  sudo pacman -Syu xf86-video-intel
 9342  sudo pacman -Syu
 9343  clear
 9344  cd ..
 9345  ll
 9346  gst
 9347  gprav
 9348  gprav 
 9349  cleasr
 9350  clear
 9351  eixt
 9352  exit
 9353  clear
 9354  gst
 9355  gd
 9356  nvim .
 9357  cd build
 9358  cmake .. \\n  -DCMAKE_TOOLCHAIN_FILE=build/Debug/generators/conan_toolchain.cmake \\n  -DCMAKE_CXX_FLAGS="-g -O0 -fprofile-arcs -ftest-coverage" \\n  -DCMAKE_C_FLAGS="-g -O0 -fprofile-arcs -ftest-coverage" \\n  -DCMAKE_EXE_LINKER_FLAGS="--coverage" \\n  -DCMAKE_EXPORT_COMPILE_COMMANDS=ON \\n  -DCMAKE_BUILD_TYPE=Debug \\n  -DBUILD_TESTING=ON \\n  -DENABLE_COVERAGE=ON
 9359  make -j 3
 9360  cmake --build . --target all coverage
 9361  clear
 9362  make
 9363  CD ..
 9364  rm -rf build
 9365  conan install . --output-folder=build --build=missing -s build_type=Debug
 9366  cd ..
 9367  conan install . --output-folder=build --build=missing -s build_type=Debug
 9368  cd build
 9369  cmake .. \\n  -DCMAKE_TOOLCHAIN_FILE=build/Debug/generators/conan_toolchain.cmake \\n  -DCMAKE_CXX_FLAGS="-g -O0 -fprofile-arcs -ftest-coverage" \\n  -DCMAKE_C_FLAGS="-g -O0 -fprofile-arcs -ftest-coverage" \\n  -DCMAKE_EXE_LINKER_FLAGS="--coverage" \\n  -DCMAKE_EXPORT_COMPILE_COMMANDS=ON \\n  -DCMAKE_BUILD_TYPE=Debug \\n  -DBUILD_TESTING=ON \\n  -DENABLE_COVERAGE=ON
 9370  make
 9371  cd ..
 9372  rm -rf build
 9373  conan install . --output-folder=build --build=missing -s build_type=Debug
 9374  cd build
 9375  cmake .. \\n  -DCMAKE_TOOLCHAIN_FILE=build/Debug/generators/conan_toolchain.cmake \\n  -DCMAKE_CXX_FLAGS="-g -O0 -fprofile-arcs -ftest-coverage" \\n  -DCMAKE_C_FLAGS="-g -O0 -fprofile-arcs -ftest-coverage" \\n  -DCMAKE_EXE_LINKER_FLAGS="--coverage" \\n  -DCMAKE_EXPORT_COMPILE_COMMANDS=ON \\n  -DCMAKE_BUILD_TYPE=Debug \\n  -DBUILD_TESTING=ON \\n  -DENABLE_COVERAGE=ON
 9376  cmake --build . --target all coverage
 9377  make -j
 9378  clear
 9379  cd libraries/business
 9380  ag ContractTradingVenueId -l
 9381  ag ContractTradingVenueId -G .h -l
 9382  ag ContractTradingVenueId -G types.h 
 9383  git status
 9384  cd ../../
 9385  cd build
 9386  make -j
 9387  make
 9388  gst
 9389  cd ..
 9390  gst
 9391  git add libraries/
 9392  gst
 9393  git add tests/ docs/
 9394  gst
 9395  git commit -m "[rms] add rms's skeleton structure"
 9396  gprav
 9397  history | grep -i vpn
 9398  cd /etc/openvpn/client
 9399  ll
 9400  sudo vim Blr-office-UDP4-1194-config.conf
 9401  exit
 9402  clear
 9403  \tsudo systemctl reload-or-restart openvpn-client@Blr-office-UDP4-1194-config
 9404  gst
 9405  gprav
 9406  git push --set-upstream origin/rms_integration
 9407  git push --set-upstream origin rms_integration
 9408  git push --set-upstream origin/rms_integration
 9409  gst
 9410  git status
 9411  gprav
 9412  git push --set-upstream origin akhil/rms_integration
 9413  cd ..
 9414  git checkout master
 9415  gprav
 9416  clear
 9417  nvim .
 9418  gst
 9419  gprav
 9420  gst
 9421  nvim .
 9422  git status
 9423  gst
 9424  clear
 9425  git checkout master
 9426  gprav
 9427  git status
 9428  gst
 9429  gd
 9430  ls -lart
 9431  gst
 9432  git checkout master
 9433  git checkout Master_2.0
 9434  gprav
 9435  clear
 9436  ls -lart
 9437  nvim .
 9438  rm -rf build
 9439  mkdir build
 9440  cd b
 9441  cd build
 9442  cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON ..
 9443  cp compile_commands.json ..
 9444  locate
 9445  locate main.cpp
 9446  cd
 9447  ll
 9448  gst
 9449  pwd
 9450  ll
 9451  pwd
 9452  sudo systemctl reboot
 9453  pwd
 9454  locate file
 9455  locate files
 9456  locate platform
 9457  pwd
 9458  ll
 9459  cd Downloads
 9460  ll
 9461  rm -rf STG-backups-FF-13
 9462  rm -rf STG-backups-FF-13*
 9463  gst
 9464  ll
 9465  ls -lart
 9466  cd ..
 9467  ll
 9468  cd go
 9469  ll
 9470  cd ..
 9471  ll
 9472  df -h
 9473  gi t
 9474  gst
 9475  git 
 9476  clear
 9477  pwd
 9478  mkdir files
 9479  cd files
 9480  mkdir projects
 9481  cd projects
 9482  git clone https://github.com/akhiltiwari13/ConfigFiles
 9483  cd ConfigFiles
 9484  gst
 9485  \t\t\t\tstow -d ~/files/projects/ConfigFiles -t ~ tmux
 9486  \t\t\t\tstow -d ~/files/projects/ConfigFiles -t ~/.config lazyvim
 9487  \t\t\t\tstow -d ~/files/projects/ConfigFiles -t ~/.config i3
 9488  ll
 9489  \t\t\t\tstow -d ~/files/projects/ConfigFiles -t ~/.config alacritty
 9490  \t\t\t\tstow -d ~/files/projects/ConfigFiles -t ~/.config dunst
 9491  \t\t\t\tstow -d ~/files/projects/ConfigFiles -t ~/.config i3status
 9492  \t\t\t\tstow -d ~/files/projects/ConfigFiles -t ~/.config neofetch rofi 
 9493  ll
 9494  cd ..
 9495  cd
 9496  ll
 9497  omz
 9498  omz update
 9499  sudo systemctl reboot
 9500  clear
 9501  exit
 9502  ls -lart
 9503  rm -rf .black_wallpaper.png
 9504  cd .config
 9505  ll
 9506  cd alacritty
 9507  ll
 9508  vim alacritty.toml
 9509  exit
 9510  pacman -Syu tilix
 9511  sudo 
 9512  sudo pacman -Syu tilix
 9513  clear
 9514  cd files
 9515  ll
 9516  ls -lart5
 9517  yay -SYu
 9518  yay -Syu
 9519  nvim .
 9520  tmux ls
 9521  tmux new -s muxy
 9522  nvim .
 9523  ll
 9524  fzf files
 9525  fzf
 9526  cd Calibre\ Library
 9527  cd ..
 9528  mv -f files files_new
 9529  mv -f Calibre\ Library/files .
 9530  cd files
 9531  ll
 9532  exit
 9533  sudo systemctl reboot
 9534  clear
 9535  exit
 9536  clear
 9537  cfg
 9538  nvim .
 9539  cd 
 9540  cd .config
 9541  ll
 9542  cd .config
 9543  ll
 9544  cd alacritty
 9545  ll
 9546  cd ..
 9547  ll
 9548  cd ..
 9549  ll
 9550  rm -rf .config
 9551  ll
 9552  cd alacritty
 9553  ll
 9554  cd ..
 9555  ll
 9556  alacritty
 9557  exit
 9558  ll
 9559  cd alacritty
 9560  ll
 9561  cd ..
 9562  rm -rf alacritty
 9563  alacritty
 9564  pacman -Rs alacritty
 9565  sudo pacman -Rs alacritty
 9566  alacritty
 9567  sudo pacman -Syu alacritty
 9568  _alacritty
 9569  alacritty
 9570  which alacritty
 9571  clear
 9572  exit
 9573  git status
 9574  gst
 9575  ll
 9576  exit
 9577  clear
 9578  tmux ls
 9579  tmux new -s muxy
 9580  nvim .
 9581  clear
 9582  ll
 9583  clear
 9584  tmux ls
 9585  tmux attach -t muxy
 9586  clear
 9587  ls -lart
 9588  gst
 9589  gfd
 9590  gd
 9591  sudo systemctl reboot
 9592  CLEAR
 9593  nvim .
 9594  nvim .
 9595  ll
 9596  ls
 9597  cledar
 9598  tmux ls
 9599  clear
 9600  htop
 9601  cleasr
 9602  tmux ls
 9603  tmux  new -s muxy
 9604  nvim .
 9605  clear
 9606  ll
 9607  cd
 9608  cd .con
 9609  cd .config
 9610  ll
 9611  \t\t\t\t\tstow -d ~/files/projects/ConfigFiles -t ~/.config alacritty
 9612  ll
 9613  rm -rf .config
 9614  \t\t\t\t\tstow -d ~/files/projects/ConfigFiles -t ~  alacritty
 9615  ll
 9616  rm -rf nvim
 9617  \t\t\t\t\tstow -d ~/files/projects/ConfigFiles -t ~  lazyvim
 9618  ll
 9619  cd Slack
 9620  ll
 9621  cd ..
 9622  clear
 9623  ll
 9624  cd alacritty
 9625  ll
 9626  cd ..
 9627  pwd
 9628  cfg
 9629  gprav
 9630  \tsudo systemctl reload-or-restart openvpn-client@Blr-office-UDP4-1194-config
 9631  nvim .
 9632  gprav
 9633  systemctl status openvpn-client@Blr-office-UDP4-1194-config
 9634  \tsudo systemctl start openvpn-client@Blr-office-UDP4-1194-config
 9635  ll
 9636  gst
 9637  gprav
 9638  git status
 9639  glog
 9640  gst
 9641  gbr
 9642  git checkout akhil/rms_integration
 9643  gst
 9644  gd
 9645  git restore conanfile.py
 9646  gst
 9647  git checkout akhil/rms_integration
 9648  glog
 9649  conan install . --output-folder=build --build=missing -s build_type=Debug
 9650  cd build
 9651  cmake .. \\n  -DCMAKE_TOOLCHAIN_FILE=build/Debug/generators/conan_toolchain.cmake \\n  -DCMAKE_CXX_FLAGS="-g -O0 -fprofile-arcs -ftest-coverage" \\n  -DCMAKE_C_FLAGS="-g -O0 -fprofile-arcs -ftest-coverage" \\n  -DCMAKE_EXE_LINKER_FLAGS="--coverage" \\n  -DCMAKE_EXPORT_COMPILE_COMMANDS=ON \\n  -DCMAKE_BUILD_TYPE=Debug \\n  -DBUILD_TESTING=ON \\n  -DENABLE_COVERAGE=ON
 9652  glog
 9653  history | grep -i cherry
 9654  glog
 9655  git checkout master
 9656  cd ..
 9657  gprav
 9658  history | grep -i cherry
 9659  git cherry-pick  be77190
 9660  gst
 9661  git branch
 9662  nvim .
 9663  gst
 9664  gprav
 9665  gst
 9666  conan install . --output-folder=build --build=missing -s build_type=Debug
 9667  cd build
 9668  cmake .. \\n  -DCMAKE_TOOLCHAIN_FILE=build/Debug/generators/conan_toolchain.cmake \\n  -DCMAKE_CXX_FLAGS="-g -O0 -fprofile-arcs -ftest-coverage" \\n  -DCMAKE_C_FLAGS="-g -O0 -fprofile-arcs -ftest-coverage" \\n  -DCMAKE_EXE_LINKER_FLAGS="--coverage" \\n  -DCMAKE_EXPORT_COMPILE_COMMANDS=ON \\n  -DCMAKE_BUILD_TYPE=Debug \\n  -DBUILD_TESTING=ON \\n  -DENABLE_COVERAGE=ON
 9669  cd ..
 9670  git cherry-pick --abort
 9671  gst
 9672  gprav
 9673  gst
 9674  cd build
 9675  cmake .. \\n  -DCMAKE_TOOLCHAIN_FILE=build/Debug/generators/conan_toolchain.cmake \\n  -DCMAKE_CXX_FLAGS="-g -O0 -fprofile-arcs -ftest-coverage" \\n  -DCMAKE_C_FLAGS="-g -O0 -fprofile-arcs -ftest-coverage" \\n  -DCMAKE_EXE_LINKER_FLAGS="--coverage" \\n  -DCMAKE_EXPORT_COMPILE_COMMANDS=ON \\n  -DCMAKE_BUILD_TYPE=Debug \\n  -DBUILD_TESTING=ON \\n  -DENABLE_COVERAGE=ON
 9676  make -j
 9677  cd ..
 9678  git status
 9679  make
 9680  cd build
 9681  make
 9682  cd ..
 9683  rm -rf build
 9684  gprav
 9685  conan install . --output-folder=build --build=missing -s build_type=Debug
 9686  cd build
 9687  cmake .. \\n  -DCMAKE_TOOLCHAIN_FILE=build/Debug/generators/conan_toolchain.cmake \\n  -DCMAKE_CXX_FLAGS="-g -O0 -fprofile-arcs -ftest-coverage" \\n  -DCMAKE_C_FLAGS="-g -O0 -fprofile-arcs -ftest-coverage" \\n  -DCMAKE_EXE_LINKER_FLAGS="--coverage" \\n  -DCMAKE_EXPORT_COMPILE_COMMANDS=ON \\n  -DCMAKE_BUILD_TYPE=Debug \\n  -DBUILD_TESTING=ON \\n  -DENABLE_COVERAGE=ON
 9688  make -j
 9689  slack
 9690  gprav
 9691  nvim .
 9692  cd ..
 9693  rm -rf build
 9694  conan install . --output-folder=build --build=missing -s build_type=Debug
 9695  cd build
 9696  cmake .. \\n  -DCMAKE_TOOLCHAIN_FILE=build/Debug/generators/conan_toolchain.cmake \\n  -DCMAKE_CXX_FLAGS="-g -O0 -fprofile-arcs -ftest-coverage" \\n  -DCMAKE_C_FLAGS="-g -O0 -fprofile-arcs -ftest-coverage" \\n  -DCMAKE_EXE_LINKER_FLAGS="--coverage" \\n  -DCMAKE_EXPORT_COMPILE_COMMANDS=ON \\n  -DCMAKE_BUILD_TYPE=Debug \\n  -DBUILD_TESTING=ON \\n  -DENABLE_COVERAGE=ON
 9697  make -j
 9698  gcc --version
 9699  cd ..
 9700  gbr
 9701  git checkout akhil/rms_integration
 9702  gst
 9703  gd
 9704  git stash
 9705  git checkout akhil/rms_integration
 9706  gst
 9707  cp -f libraries/trading_modules/rms/ .
 9708  cp -r libraries/trading_modules/rms/ .
 9709  gst
 9710  git checkout master
 9711  gst
 9712  ranger
 9713  gst
 9714  git status
 9715  gst
 9716  git add libraries/trading_modules/rms/
 9717  gst
 9718  git add libraries/trading_modules/
 9719  gst
 9720  git commit -m "[libs|tm] update rms lib"
 9721  gprav
 9722  git push --force-with-lease origin HEAD
 9723  sudo pacman -S gcc13
 9724  export CC=gcc-13 CXX=g++-13
 9725  conan install . --output-folder=build --build=missing -s build_type=Debug
 9726  cd build
 9727  cmake .. \\n  -DCMAKE_TOOLCHAIN_FILE=build/Debug/generators/conan_toolchain.cmake \\n  -DCMAKE_CXX_FLAGS="-g -O0 -fprofile-arcs -ftest-coverage" \\n  -DCMAKE_C_FLAGS="-g -O0 -fprofile-arcs -ftest-coverage" \\n  -DCMAKE_EXE_LINKER_FLAGS="--coverage" \\n  -DCMAKE_EXPORT_COMPILE_COMMANDS=ON \\n  -DCMAKE_BUILD_TYPE=Debug \\n  -DBUILD_TESTING=ON \\n  -DENABLE_COVERAGE=ON
 9728  make -j
 9729  gcc --version
 9730  export CC=gcc-13 CXX=g++-13
 9731  cc --version
 9732  CC --version
 9733  export cc=gcc-13 cxx=g++-13
 9734  make -j
 9735  cc --version
 9736  export cc=gcc-13 cxx=g++-13
 9737  gcc-13
 9738  which gcc
 9739  gcc --version
 9740  alias gcc
 9741  which gcc
 9742  sudo pacman -S gcc13
 9743  gcc13 --version
 9744  gcc-13 --version
 9745  cc --version
 9746  which cc
 9747  export CC=gcc-13 CXX=g++-13
 9748  which cc
 9749  cc --version
 9750  gcc --version
 9751  cc --version
 9752  export CC=gcc-13 CXX=g++-13
 9753  cc --version
 9754  pacman -R
 9755  sudo pacman -R
 9756  nvim .
 9757  gst
 9758  gd
 9759  conan install . --output-folder=build --build=missing -s build_type=Debug
 9760  cd build
 9761  cmake .. \\n  -DCMAKE_TOOLCHAIN_FILE=build/Debug/generators/conan_toolchain.cmake \\n  -DCMAKE_CXX_FLAGS="-g -O0 -fprofile-arcs -ftest-coverage" \\n  -DCMAKE_C_FLAGS="-g -O0 -fprofile-arcs -ftest-coverage" \\n  -DCMAKE_EXE_LINKER_FLAGS="--coverage" \\n  -DCMAKE_EXPORT_COMPILE_COMMANDS=ON \\n  -DCMAKE_BUILD_TYPE=Debug \\n  -DBUILD_TESTING=ON \\n  -DENABLE_COVERAGE=ON
 9762  make -j
 9763  cd ..
 9764  gst
 9765  git add libraries/
 9766  git commit --amend
 9767  gprav
 9768  igst
 9769  gst
 9770  git add libraries/
 9771  git rebase --continue
 9772  gst
 9773  git push --force-with-lease origin HEAD
 9774  cd Downloads
 9775  ll
 9776  rm -rf Catppuccin-Mocha-* MTBT_FO_NNF_PROTOCOL_6.6.* Solace_API.zip rofi.txt libs11n-1.2.10-nobuildfiles.zip
 9777  gst
 9778  ll
 9779  unzip KT_platform-20250404T070359Z-001.zip
 9780  LL
 9781  ll
 9782  cd KT_platform
 9783  ll
 9784  vlc .
 9785  cd ..
 9786  ll
 9787  cd ../
 9788  cd files
 9789  ll
 9790  cd learn
 9791  ll
 9792  cd ..
 9793  fzf
 9794  proj
 9795  ssh -i iocplatform.pem akhil@172.19.1.13
 9796  ll
 9797  ssh -i ec2.pem akhil@172.19.1.13
 9798  cd
 9799  ll
 9800  fzf
 9801  ll
 9802  sudo systemctl reboot
 9803  exit
 9804  which slack
 9805  yay -Qs slack
 9806  pacman -Qs slack
 9807  pacman -Rs slack
 9808  sudo 
 9809  sudo pacman -Rs slack
 9810  yay -Rs slack
 9811  sudo pacman -Rs slack-desktop
 9812  sudo pacman -Syu slack-desktop
 9813  sudo yay -Syu slack-desktop
 9814  yay -Syu slack-desktop
 9815  cd files
 9816  ll
 9817  cd
 9818  ll
 9819  unlink ticker.yaml
 9820  unlink .tmux.conf
 9821  unlink setup.sh
 9822  ll
 9823  ./.fehbg
 9824  fzf
 9825  ln -sf files/images/.black_wallpaper.png .
 9826  ll
 9827  ./.fehbg
 9828  unlink .stowrc
 9829  cfg
 9830  stow -d . -t ~ lazyvim
 9831  ll
 9832  stow -d . -t ~ setup.sh
 9833  mkdir setup
 9834  mv -f setup.sh setup
 9835  ll tmux
 9836  stow -d . -t ~ tmux
 9837  stow -d . -t ~ alacritty
 9838  stow -d . -t ~ rofi
 9839  stow -d . -t ~ dunst
 9840  stow -d . -t ~ stow
 9841  stow -d . -t ~ i3
 9842  stow -d . -t ~ i3status
 9843  stow -d . -t ~ alacritty
 9844  stow -d . -t ~ lazyvim
 9845  cd
 9846  cd .config
 9847  ll
 9848  cfg
 9849  cd files/projects/ConfigFiles
 9850  nvim .
 9851  cd
 9852  ll
 9853  ls -lart
 9854  cfg
 9855  cd files/projects/ConfigFiles
 9856  stow -d . -t ~ setup
 9857  tmux new -s muxy
 9858  nvim .
 9859  yay -Qs slack
 9860  pacman -Qs slack
 9861  which slack
 9862  yay -Qs slack
 9863  yay -Rs slack
 9864  yay -Rs slack-desktop
 9865  which alacritty
 9866  sudo pacman -Syu alacritty
 9867  sudo pacman -Rs alacritty
 9868  ll
 9869  cd
 9870  cfg
 9871  ll
 9872  nvim .
 9873  clear
 9874  ls -lart
 9875  cd setup
 9876  ll
 9877  cd ..
 9878  cd
 9879  ranjer
 9880  ranger
 9881  which alacritty
 9882  dmesg | grep fail
 9883  history | grep dmesg
 9884  dmesg
 9885  sudo dmesg
 9886  sudo dmesg | grep -i fail
 9887  clear
 9888  sudo pacman -Syu linux-firmware
 9889  sudo pacman -Syu
 9890  yay -Syu 
 9891  journalctl | grep -i fail
 9892  history | grep -i journ
 9893  journalctl -b | grep -i fail
 9894  history | grep -i systedboot
 9895  history | grep -i systemdboot
 9896  history | grep -i bios
 9897  history | grep -i grub
 9898  cd /var/lo
 9899  cd /var/log
 9900  ll
 9901  tail -f Xorg.0.log
 9902  systemctl --failed
 9903  pacman -Qtd 
 9904  pacman -Qm
 9905  sudo  pacman -Qdtq | pacman -Rns -
 9906  sudo  pacman -Qdtq | sudo pacman -Rns -
 9907  $ pacman -Qqd | pacman -Rsu --print -
 9908  pacman -Qqd | pacman -Rsu --print -
 9909  pacman -Qqd | pacman -Rsu  -
 9910  sudo pacman -Qqd |sudo  pacman -Rsu  -
 9911  clear
 9912  sudo pacman -Syu
 9913  pacman -Qqd | pacman -Rsu --print -
 9914  sudo  pacman -Qdtq | sudo pacman -Rns -
 9915  sudo systemctl reboot
 9916  cfg
 9917  nvim .
 9918  exit
 9919  tmux new -s muxy
 9920  nvim .
 9921  clear
 9922  exit
 9923  ll
 9924  exit
 9925  cd
 9926  ranger
 9927  pacman -Qqd | pacman -Rsu --print -
 9928  sudo  pacman -Qdtq | sudo pacman -Rns -
 9929  nvim .
 9930  nvim .
 9931  yay -Qs firefox
 9932  pacman -Qs firefox
 9933  pacman -Rns firefox
 9934  sudo pacman -Rns firefox
 9935  sudo pacman -Syu firefox
 9936  yay -Syu
 9937  sudo pacman -Syu
 9938  which firefox
 9939  sudo pacman -Syu ca-certificates
 9940  sudo pacman -Syu ca-certificates-mozilla
 9941  sudo pacman -Syu ca-certificates-utils
 9942  clear
 9943  journalctl -b | grep -i fail
 9944  journalctl -b _COMM=Xorg
 9945  cledar
 9946  lear
 9947  clear
 9948  exit
 9949  sudo pacman -Syu 
 9950  nvim .
 9951  yay -Syu
 9952  su -i
 9953  su 
 9954  exit
 9955  history | grep -i systemctl
 9956  systemctl --failed
 9957  sudo /etc/vconsole.conf
 9958  sudo vim /etc/vconsole.conf
 9959  ls /usr/share/kdb/
 9960  ls /usr/share/kbd/consolefonts
 9961  sudo vim /etc/vconsole.conf
 9962  ls /usr/share/kbd/keymaps/
 9963  sudo loadkeys us
 9964  sudo pacmna -Syu kbd
 9965  sudo pacman -Syu kbd
 9966  sudo mkinitcpio -P
 9967  sudo systemctl restart systemd-vconsole-setup
 9968  clear
 9969  systemctl status systemd-vconsole-setup
 9970  sudo systemctl enable systemd-vconsole-setup
 9971  systemctl status systemd-vconsole-setup
 9972  sudo reboot
 9973  clear
 9974  sudo pacman -Syu 
 9975  yay -Syu
 9976  clera
 9977  tmux ls 
 9978  tmux new -s muxy
 9979  nvim .
 9980  gst
 9981  gd
 9982  gprav
 9983  systemctl status openvpn-client@Blr-office-UDP4-1194-config
 9984  \tsudo systemctl start openvpn-client@Blr-office-UDP4-1194-config
 9985  nvim .
 9986  \tsudo systemctl start openvpn-client@Blr-office-UDP4-1194-config
 9987  systemctl status openvpn-client@Blr-office-UDP4-1194-config
 9988  \tsudo systemctl reload-or-restart openvpn-client@Blr-office-UDP4-1194-config
 9989  systemctl status openvpn-client@Blr-office-UDP4-1194-config
 9990  clear
 9991  ls -lart
 9992  git status
 9993  gprav
 9994  clear
 9995  git status
 9996  clear
 9997  clesar
 9998  exit
 9999  gst
10000  exit
10001  nvim .
10002  \tnmcli device  disconnect
10003  \tnmcli device  disconnect wlp0s20f3
10004  \tnmcli device  connect wlp0s20f3
10005  systemctl status openvpn-client@Blr-office-UDP4-1194-config
10006  \tsudo systemctl reload-or-restart openvpn-client@Blr-office-UDP4-1194-config
10007  systemctl status openvpn-client@Blr-office-UDP4-1194-config
10008  \tsudo systemctl reload-or-restart openvpn-client@Blr-office-UDP4-1194-config
10009  systemctl status openvpn-client@Blr-office-UDP4-1194-config
10010  ranger
10011  ag -i boost_static_assert
10012  cd libraries/foundation/infraconfig
10013  gst
10014  git status
10015  nvim .
10016  nvim .
10017  history
10018  cfg
